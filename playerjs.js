//	Playerjs.com 19.6.2
//	05.02.2024 05:02:08
//	API - https://playerjs.com/docs/q=api

eval(function(p, a, c, k, e, d) {
    e = function(c) {
        return (c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
    }
    ;
    if (!''.replace(/^/, String)) {
        while (c--) {
            d[e(c)] = k[c] || e(c)
        }
        k = [function(e) {
            return d[e]
        }
        ];
        e = function() {
            return '\\w+'
        }
        ;
        c = 1
    }
    ;while (c--) {
        if (k[c]) {
            p = p.replace(new RegExp('\\b' + e(c) + '\\b','g'), k[c])
        }
    }
    return p
}('if(!1M.4X){B 4X=[];B cW}if(1M[\'El\']){1z(El,1)};E Ay(2M){B o={1y:L,nZ:[],tw:[],iX:\'KT\',KN:yp,Lg:yr,8w:\'19.6.2\',gy:[\'7Y\',\'\'],iW:\'\',22:L,7Z:L,9I:L,K8:L,cU:L,5M:L,8J:L,8Q:L,u:\'#Kh#Mb#Mg#Mx#M3#LT#Bd#LX#LS#LQ#LK#CJ#Mu#M0#Kq#CJ#Lo#LJ#Lm#Ls#Ml#xH#LM#LW#xH#M2#My#ME#MF#MK#Mp#Mj#Kd#KE#KH#KL#KQ#PQ#Bd#Pl#PH#xH#Pz==\',u2:\'\',u3:\'\',u4:\'\',u5:\'\',u6:\'\',u7:\'\',u8:\'\',u9:\'\',Py:\'\',y:\'xx???x=Px???=\',p:\'\',Qh:-1,tm:"BV",fg:"//BV.7U",6Z:[],dt:H,pr:H,ga:L,ab:L,jQ:[],R3:L,dn:\'//.9k//\',xY:0,2u:[],6X:[],9V:[],3a:[],mp:[],af:0,9B:[],pn:0,qz:L,5V:L,1t:L,vW:L,8v:L,ni:\'<C8>\',hc:\'</C8>\',a5:1M.bx.Y<2h&&1M.bx.1f<2h,qn:[],R0:[],5t:{\'1K\':1,\'QX\':1,\'ha\':1,\'i0\':1,\'sM\':0},ai:[],xy:0,dh:0,5I:L,4T:L,gk:L,og:L,R8:[],bb:L,cG:0,hC:L,s9:1I,hU:1I,sP:L,AO:E(x){B a;K a},R1:0,mD:4B,4u:L,dv:L,w7:1T.w7,d:8s.ul,k7:8s.ul,9u:8s.9u,iG:8s.9u.I("iG")==0,R9:{},sz:\'Rg-BW.7U/BW.js\',fd:["AO","Bb"],5L:[],Qr:[],Qt:[],h6:1,lm:[],Bb:E(x,y,z){B a;K a},17:0,lL:0,4Z:L,dk:-1,9v:3,Qu:0,q6:0,aj:0,3D:{x:1,y:1,x0:1,y0:1},cn:["jf","j6","jg","lh","lf","lU","pQ","m8","dg","cZ","wx","wr"],lz:["Qv","Qw","Qx","QO"],dK:0,QL:0,rs:0,Be:0,dJ:0,Bz:[],ce:[\'6W\',\'dL\',\'mb\',\'6y\'],QE:[],l4:H,pP:[],mP:0,ws:"w"+"s",pt:L,lJ:[L,L,L]};B fj={R:{w:20,h:20,1e:"-",Pa:"-",a:1,7c:-1,1v:"3F",1D:"",1K:1,gq:-1,ax:0,2r:1,1q:"",1B:"",3Z:"Nu",ey:12,hq:0,1n:"Q",2I:"0 3 0 3",9O:"0 0 0 0",2t:1,hy:"0 0 0 0",NA:0,hk:1,bg:0,oS:0,IM:0,5o:1,9U:-1,4U:"3W",cE:-1,gI:"0 0 0 0",pO:-1,pM:"3F",aV:-1,pK:-1,5S:"1Y",4k:"vK",2r:0,km:"3W",kt:0.7,qf:0,qu:"3F",kk:"3 5 3 5",Np:"0 0 0 0",NO:1,qr:"pd-oG",qq:11,qi:0,2N:"",DV:5,DW:0,3h:0,NR:2,NQ:2,Gp:0.2,Fz:0,FB:0.1,eS:0,NP:"NG",NL:1,NK:5,Gi:"3W",Gc:"3F",FC:"3F",Ge:1,DE:1,yk:1,7j:0,3A:0,eQ:20,dO:"<2v Y=\'20\' 1f=\'20\'><g><d6 ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 6i=\'#fx\'/></g></2v>",qP:1,pz:-1,kb:0,pA:1,yf:-1,NJ:0.1,fy:0,3d:"",GM:0,GH:"vK",2Y:"",GW:CB,H1:CB,H0:0,5A:0,6l:"3F",Hc:0,Hd:"3W",FI:9,vB:"0 0 10 0",vC:"0 0 0 0",Ha:0}};E JV(){K H;o.JT=H}E bR(s){if(s.I(\'.\')==-1){s=s.1j(1);s2=\'\';V(i=0;i<s.S;i+=3){s2+=\'%u0\'+s.6F(i,i+3)}s=N2(s2)}K s};E Jw(){if(o.u!=\'\'){v=9G(v,59.6K(d9(o.u)))}if(2M.I("#"+v.9C)==0){3g{2M=59.6K(o[o.fd[0]](2M))}2H(e){}}F{if(2M.I("#"+v.bY)==0){3g{2M=59.6K(o[o.fd[1]](2M))}2H(e){}}}}E 7H(x,y){}E oJ(y,1d){}B pU=E(){B 8S=1X("2c");o.1O.1R(8S);O(8S,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':\'100%\',\'1f\':30,\'2w-1v\':v.Ic,\'1A\':v.I0,\'2l\':\'1Y\'});B x=1X("2c");o.1O.1R(x);O(x,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':\'100%\',\'1v\':v.Ia,\'3Z-3O\':v.HP,\'2S\':(v.I5+\'px \'+v.I2+\'px\'),\'2l\':\'1Y\'});G.9k=E(1B,n){x.1V=1B;6N(x);O(8S,{\'1f\':x.2V,\'2l\':\'4L\'});8S.C.51="N3";V(B i=0;i<x.cT(\'a\').S;i++){x.cT(\'a\')[i].C.1v=\'#fx\'}if(n){1z(G.lQ,2h*n)}x.C.51="Ni"};G.lQ=E(){3n(x);3n(8S)}};2g(E(w,i,s,e){B a7=0;B 8V=0;B g7=0;B ds=[];B dC=[];m0(H){if(a7<5)dC.2L(w.6t(a7));F if(a7<w.S)ds.2L(w.6t(a7));a7++;if(8V<5)dC.2L(i.6t(8V));F if(8V<i.S)ds.2L(i.6t(8V));8V++;if(g7<5)dC.2L(s.6t(g7));F if(g7<s.S)ds.2L(s.6t(g7));g7++;if(w.S+i.S+s.S+e.S==ds.S+dC.S+e.S)1h}B A2=ds.sc(\'\');B yz=dC.sc(\'\');8V=0;B s6=[];V(a7=0;a7<ds.S;a7+=2){B rW=-1;if(yz.ar(8V)%2)rW=1;s6.2L(6E.w5(2J(A2.1j(a7,2),36)-rW));8V++;if(8V>=dC.S)8V=0}K s6.sc(\'\')}(\'OA\',\'P2\',\'P8\',\'OW\'));B v={1p:0,vq:0,pk:"#3W",2R:0,sL:1,8x:"#3W",4U:"#3F",7j:0,e2:1,ob:1,3i:0,qC:1,e8:0,9z:1,1r:{OT:0,1v:"3W",a:"0.4",h:34,k8:1,1k:1,hO:1,d5:0,hX:3,9t:0,rw:3,5S:"1Y",1n:"2K",2I:"0 0 0 0",7j:0,i7:0,ac:\'\'},1N:{on:1,f:1,r:1,m:1,3S:5,x9:"3S",8U:1,wu:"1F",pj:0,EH:0,y7:1,jO:0.2},W:{4U:"3W",cE:"p1",5o:0.9,9U:-1,1n:"1b",2I:"0 0 0 0",2S:"7 15 7 15",1v:"3F",3Z:"yx, yF, pd-oG",ey:12,5f:10,hq:0,6l:"BQ",FJ:1,8x:"Ow",a:1,7c:-1,O0:0,O1:100,O3:O6,O7:1,r9:1,Eo:"O9",r8:"3W",r0:-1,Oa:-1,Eq:0,6D:3,hH:16,FL:"Ob",7j:0,gZ:1,nj:1,nh:"3F",yd:0,v1:"3W",H8:1,GG:0,GE:"p1",l3:0,kn:4B,dq:0,7M:0,H7:0,H9:0,gt:1,3x:0,hn:50,q4:0,kS:1,df:Oc,oI:0,vs:"p1",vN:"0 0 0 0",hJ:30,8x:"Hr"},1g:{4U:"3W",cE:"Od",5o:0.7,9U:-1,3Z:"yx, yF, pd-oG",1n:"2K-2m",2I:"0 0 0 0",2S:"7 10 7 15",1v:"3F",ey:12,hH:16,5f:10,hq:0,Oj:"3F",6l:"BQ",a:1,1K:5,7c:-1,rQ:1,6D:3,gZ:1,nj:1,nh:"3F",l3:0,kn:4B,7j:0,MN:1,Ou:"5c",4y:1,Ov:"7y",Op:1,Of:"1W",P5:0,OF:"6Q",Oz:0,OM:"54",hJ:30,8x:"Hr"},CM:{1n:"2K-2m",2I:"0 10 50 0"},1F:0.8,rC:1,oa:1,8N:0,5z:0,AK:1,5k:0,4v:0,J0:0,IX:0,3b:0,uj:1,o2:0,yh:0,xd:0,j8:\',\',iu:\';\',dD:\'//\',Is:1,j7:\'[\',ej:\']\',gv:\'6i\',nG:1,nH:-1,s0:0,OO:\'20 0 0 20\',Oy:\'1c-1b\',NX:100,Nn:100,NW:-1,qp:0,Cu:1,Ic:"ph",Ia:"3F",I5:5,I2:10,I0:1,HP:10,pn:0,vE:1,t9:1,fm:1,4R:\'Nc\',vg:0,ke:\'6J\',k9:1,IO:0,HB:0,JF:0,8Y:1,c5:1,HR:5,8d:0,Bc:1,sF:0,uW:5,N6:0,Nd:0,Nh:0,nI:1,zA:1,JA:0,yq:0,Nk:0,uO:1,lx:0,3f:"zC",Ne:Id,oj:\'100%\',ga:0,zf:{8t:1,2j:0,kK:0,43:0,1y:1,vJ:0,vI:0,vG:0,N4:0,N1:0,N0:0},Ag:{8t:1,2j:0,kK:0,43:0,1y:1,vJ:0,vI:0,vG:0},MZ:100,HK:1,fM:1,ou:14,jf:\'100%\',BI:1,pG:20,BK:1,lf:0.7,C2:2,rc:3,dg:10,j6:"3F",jg:"EM",lh:"3W",lU:0,pQ:0,m8:iq,qN:1,cZ:0,uh:1,9e:1,MY:1,MX:0.3,MW:3,MV:4,MU:5,MT:0,MS:MQ,NF:Gu,CT:0,C6:1,yl:1,fo:1,yA:1,vY:0,Fa:NI,Fc:90,F4:0,Fg:1,Fj:"p1",Fd:0,Fk:1,9C:\'2\',bY:\'3\',NM:10,NN:1,NS:1,NU:-1,NV:1,NE:1,ND:-1,NC:0,NB:1,Nz:0,Nx:1,Nw:0,Nv:1,Nt:0,Ns:1,Nr:0,Nq:1,P9:0,NY:1,Qj:0,pT:1,QC:0,QD:0,QF:1,QM:0,QP:1,Qs:"#3F",Qq:"#3W",Qp:"#3W",Qo:"#3F",Qn:"#3W",Qm:"#3F",QQ:"#3W",QA:"#3F",QR:"#3W",Ra:"#3F",Rc:"#3W",Rd:"#3F",Rh:1,Rb:0,Ri:1,Rk:0.5,Rl:"#3F",QZ:"#3W",QT:1,R4:1,R5:1,R6:1,R7:1,QS:10,PK:-1,Pu:1,Pv:1,Pw:0,nA:0,Pt:"or",PA:"or",PC:"or",PD:"or",PE:"50%",PB:-1,Pr:0,Po:-1,Pn:0,Pm:0,zU:1,Ah:0,Da:30,PI:2,CF:10,AW:0,PJ:30,Aw:1,Av:1,6d:0,2a:{on:0,4U:"3W",2R:0,ae:2,8x:"3W",1n:"1b",2I:"20 0 0 20",Y:sG,1k:0}};v.cA="en";B 7x=E(is){B i;B C=[];B f=[];B a3=[];B Q1=[];B 5P=[];B 8C=[];B 1P=[];B f2=[];B fF=[];B Qb=[];B 4V=[];B 5E=[];B 5C=[];B d2=[];B eo=L;B 2p;B bJ=-1;B 4I=H;B 18=is;B 6k=is=="1g";B W;B 5z=[];B d4=[];B nS;B 3j=\'\';B cV=\'\';B 5Q=-1;B gn=L;B Qc=L;B n6=L;B kP=L;B gD=L;B iL=L;B mn;B vZ;B n7;B hX;B tP;B i9=[];B 6B=[];B lA=0;B az=0;B 9J;B 6j="2t";B b7=(o.1i.2f?"fS":"oC");B aI=(o.1i.2f?"fR":"oA");C=9G(C,v[is]);C=4b(v[is],\'2I\',\'2I\');C=4b(v[is],\'9O\',\'9O\');C=4b(v[is],\'ap\',\'ap\');if(C.oI==0){C.vN="0 0 0 0"}C=4b(v[is],\'gI\',\'vN\');C=4b(v[is],\'2S\',\'2S\');C.l2=0;B iK="<2v C=\'2I-1c:cK\' Y=\'"+C.6D*2+"\' 1f=\'"+(C.6D*2>C.5f?(C.6D*2):C.5f)+"\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'><g><d6 ry=\'"+(C.6D)+"\' rx=\'"+C.6D+"\' cy=\'"+(C.6D*2>C.5f?(C.6D):(C.5f/2))+"\' cx=\'"+C.6D+"\' 6i=\'#"+C.6l+"\'/></g></2v>";B HI="<2v Y=\'"+C.6D*2+"\' 1f=\'"+C.5f+"\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\' ><g><d6 ry=\'"+(C.6D-1)+"\' rx=\'"+(C.6D-1)+"\' cy=\'"+(C.5f/2+2)+"\' cx=\'"+C.6D+"\' 4r=\'#"+C.6l+"\' 4r=\'1\' 6i-1A=\'0\'/></g></2v>";B xx=4;B Hb="<5d C=\'2l:bG-4L;\'><2v Y=\'"+(xx+2)+"\' 1f=\'"+(C.5f)+"\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'><g><2C x1=\'1\' y1=\'"+(C.5f/2-xx)+"\' x2=\'"+xx+"\' y2=\'"+(C.5f/2)+"\' 4r=\'#"+C.1v+"\' 4r-Y=\'1\' 4r-eZ=\'4i\'/><2C x1=\'"+xx+"\' y1=\'"+(C.5f/2)+"\' x2=\'1\' y2=\'"+(C.5f/2+xx)+"\' 4r=\'#"+C.1v+"\' 4r-Y=\'1\' 4r-eZ=\'4i\'/></g></2v></5d>";B hE="<5d C=\'2l:bG-4L;\'><2v Y=\'"+(xx+10)+"\' 1f=\'"+(C.5f+1)+"\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\' C=\'ka:1b\'><g><2C x1=\'1\' y1=\'"+(C.5f/2+2)+"\' x2=\'"+xx+"\' y2=\'"+(C.5f/2-xx+2)+"\' 4r=\'#"+C.1v+"\' 4r-Y=\'1\' 4r-eZ=\'4i\' /><2C x1=\'1\' y1=\'"+(C.5f/2+2)+"\' x2=\'"+xx+"\' y2=\'"+(C.5f/2+xx+2)+"\' 4r=\'#"+C.1v+"\' 4r-Y=\'1\' 4r-eZ=\'4i\'/></g></2v></5d>";B 8x=5R(2B(C.8x,\'3F\'),2B(C.FO,1));B 1E=1X("2c");o.1O.1R(1E);O(1E,{\'6s\':\'3h\',\'2l\':\'4L\',\'1A\':0,\'2R-6S\':C.7j});if(C.pO==1){O(1E,{"2R":"3U 6r "+3E(2B(C.pM,\'3F\'))})}B kx={};V(B i in o.5t){if(o.5t.2n(i)){kx[o.5t[i]]=-1}}if(6k){1E.C.51=Qa}F{1E.C.51=99}B Z=1X("2c");if(o.a5){C.G4>0?C.ey=C.G4:\'\';C.G2>0?C.df=C.G2:\'\';C.Gd>0?C.hn=C.Gd:\'\'}O(Z,{\'1n\':\'gJ\',\'1c\':0,\'1b\':0,\'2l\':\'4L\',\'Y\':\'100%\',\'2S-1c\':C.9L,\'2S-2m\':C.7b+(6k&&C.3x==1?0:20),\'2S-2K\':C.a9,\'2S-1b\':C.6V,\'1v\':C.1v,\'3Z-3O\':C.ey*2B(v.8f,1),\'3Z-eD\':f5(C.3Z),\'ih-gf\':C.hq+\'px\'});if(o.1i.7s){O(Z,{\'92-Y\':FW})}if(is!=="W"){O(Z,{\'6s-y\':(6k&&C.3x==1?\'3h\':\'8O\')})}1E.1R(Z);if(C.3x!=1){B 6G=1X("2c");O(6G,{\'2l\':\'4L\',\'6s\':\'3h\',\'2R-6S\':C.7j});if(C.3x!=1){if(o.1i.7s){O(6G,{\'92-Y\':FW})}}Z.1R(6G)}42(Z,{id:(v.id+"4o"+is)});if(is=="W"){if(C.3x==1){O(Z,{\'Y\':\'100%\',\'2S-2m\':C.7b,\'2S-2K\':C.a9+20,\'6s-x\':\'8O\',\'6s-y\':\'3h\',\'b9-8U\':\'eg\'});O(1E,{\'Y\':o.2U-C.4C-C.4m,\'1f\':C.hn+C.9L+C.a9})}F{O(Z,{\'6s-y\':\'8O\',\'6s-x\':\'3h\'});if(C.EI==1){ns()}}if(C.oI==1){O(1E,{\'2w-1v\':C.vs})}if(v.W.2X==1){3n(1E)}}if(C.gZ==1){B 5v=1X("2c");B aG=5R(C.oI==1?C.vs:C.4U);if(C.3x==1){hu(5v,\'to 2m, 5p(\'+aG+\',\'+(C.5o*1+0.3)+\'), 5p(\'+aG+\',0)\',\'1b\',12,5,7,10,7,10,12,15);5v.1w(6j,EB)}F{hu(5v,\'to 2K, 5p(\'+aG+\',\'+(C.5o*1+0.3)+\'), 5p(\'+aG+\',0)\',\'1c\',5,12,10,7,10,7,15,12);5v.1w(6j,GP)}B 5x=1X("2c");if(C.3x==1){hu(5x,\'to 1b, 5p(\'+aG+\',\'+(C.5o*1+0.3)+\'), 5p(\'+aG+\',0)\',\'2m\',8,5,13,10,13,10,8,15);5x.1w(6j,Fv)}F{hu(5x,\'to 2K, 5p(\'+aG+\',0), 5p(\'+aG+\',\'+(C.5o*1+0.3)+\')\',\'2K\',5,8,10,13,10,13,15,8);5x.1w(6j,GO)}5v.1w("oC",i3);5v.1w("oA",i3);5x.1w("oC",i3);5x.1w("oA",i3);Z.1w("xC",F3);5v.1w("a0",aO);5x.1w("a0",aO);1E.1R(5v);1E.1R(5x);3G(vZ);vZ=6R(GK,2h)}Z.1w(b7,Ff);Z.1w(aI,wf);if(v.W.9J>0&&!9J&&is=="W"){if(1J GZ!=="1I"){9J=1u GZ()}}if(6k){V(B i=1;i<11;i++){if(J(v["9R"+is][is+i])){v.1g[is+i]=v["9R"+is][is+i];if(J(v["9R"+is][is+i+"1L"])){v.1g[is+i+"1L"]=v["9R"+is][is+i+"1L"]}if(J(v["9R"+is][is+i+"1e"])){v.1g[is+i+"1e"]=v["9R"+is][is+i+"1e"]}}if(J(v.1g[is+i])){if(v.1g[is+i]==1){cF(\'f\',i);cM(f[i],a3[i],5P[i],8C[i],i);if(!J(v.1g[is+i+"1e"])){v.1g[is+i+"1e"]="54"}5P[i].1V=2P(v.1g[is+i+"1e"]);if(J(v.1g[is+i+"1L"])){if(v.1g[is+i+"1L"]!=\'\'){5P[i].1V=v.1g[is+i+"1L"]}}if(v.1g[is+i+"1e"]=="2Z"){o.f6=H}1P[i]=v.1g[is+i+"1e"];8k(i);if(1P[i]==\'vf\'){!o.gE?o.gE=1u Ki():\'\';if(J(1M.qj)){5P[i].1V=o.gE.MD();o.gE.Ch()}}if(1P[i]in o.5t){kx[1P[i]]=i}f[i].1w(b7,6w);f[i].1w(aI,5T);f[i].1w(6j,aZ);f[i].1w("a0",aO);if(v.1g[is+i+"1k"]==1){O(f[i],{"1f":0})}}}}}E F3(x){if(is=="W"&&C.3x==1&&x){if(x.xz==0&&x.bQ!=0){Z.b3-=x.bQ;x.aa()}}3G(n7);n7=6R(wf,jR);aW()}E Ff(){o.3C=H}E wf(){if(C.f8==1){2G(o.fb);o.fb=1z(E(){if(!o.3C&&!o.n1){9K()}},(v.1g.f7>0?v.1g.f7*2h:(o.1i.tv?47:2h)))}o.3C=L}E 6w(1d){if(o.22){o.5g?o.U.5g(L):\'\'}B i=1d.4k.7C(\'m9\');B x;if(i){x=\'f\'}F{if(1d.4k.7C(\'bd\')){i=1d.4k.7C(\'bd\');x=\'f2\'}}if(i){i=2J(i);B fn=L;if(J(2g(x)[i])){if(C.9U>-1){O(2g(x+\'bg\')[i],{\'1A\':C.9U})}if(2E(C.da)){O(2g(x+\'bg\')[i],{\'6I\':\'ha(\'+C.da+\')\'})}if(C.7c>-1){O(2g(x+\'1L\')[i],{\'1A\':C.7c});O(2g(x+\'5A\')[i],{\'1A\':C.7c})}if(is=="W"){if(1P[i].I("W")==0){B id=1P[i].1j(8);if(3j==id||cV==id){O(2g(x+\'1L\')[i],{\'1v\':C.6l});O(2g(x+\'5A\')[i],{\'1v\':C.6l});fn=H}F{O(2g(x+\'1L\')[i],{\'1v\':C.1v})}}}if(C.x8==1&&J(C.mW)&&fn){}F{O(2g(x+\'bg\')[i],{\'7N\':C.cE})}}}};E 5T(1d){if(o.22){o.5g?o.U.5g(H):\'\'}B i=1d.4k.7C(\'m9\');B x;B fn=L;3G(hz);aW();if(i){x=\'f\'}F{if(1d.4k.7C(\'bd\')){i=1d.4k.7C(\'bd\');x=\'f2\'}}if(i){if(J(2g(x)[i])){if(C.9U>-1){O(2g(x+\'bg\')[i],{\'1A\':C.5o})}if(2E(C.da)){O(2g(x+\'bg\')[i],{\'6I\':\'ha(1)\'})}if(C.7c>-1){O(2g(x+\'1L\')[i],{\'1A\':C.a});O(2g(x+\'5A\')[i],{\'1A\':C.a})}if(is=="W"){if(1P[i].I("W")==0){B id=1P[i].1j(8);if(3j==id||cV==id){O(2g(x+\'1L\')[i],{\'1v\':C.6l});O(2g(x+\'5A\')[i],{\'1v\':C.6l});fn=H}F{if(J(o.9B[id])){hG(i)}F{O(2g(x+\'1L\')[i],{\'1v\':C.1v})}}}}if(C.x8==1&&J(C.mW)&&fn){}F{O(2g(x+\'bg\')[i],{\'7N\':o.9B[id]?C.r8:C.4U})}}}}E aZ(1d){if(!gD){B d=1u 6M();o.9y=d.9m();B i=1d.4k.7C(\'m9\');if(i){if(J(f[i])){if(J(1P[i])){if(is=="W"){o.29=1I}4Y(i,0)}}}pE()}}B wt;B hz;E Jj(1d){if(!gD){B i=1d.4k.7C(\'bd\');if(i){if(J(5C[i])){if(2p in o.5t){wt=i;hz=6R(Fs,4B)}}}}}E Fs(){qZ(wt)}E aO(1d){3G(hz);1d.6v=H;aW()}E vd(1d){3G(hz);if(!gD){B d=1u 6M();o.9y=d.9m();B i=1d.4k.7C(\'bd\');if(i){if(i==0){if(5C[0]==\'1v\'){cJ();4Y(lA)}F{d1()}}F{if(J(5C[i])){qZ(i)}}}}}E ls(1d){B x=1d.4k.7C(\'HY\');if(x){wW(x)}}E FF(1d){aW();B i=1d.4k.7C(\'bd\');if(J(5C[i])){if(7O("=",i)>0){B x=5C[i].1j(0,7O("=",i));B y=5C[i].1j(7O("=",i)+1);B z=2p+\'Hn\';if(!v[z]){v[z]=[]}if(!J(v[z][x])){v[z][x]=v[x]+\'\'}wZ(x,y)}}};E wZ(x,y){v[x]=y;if(o.5m&&v.qN==1&&x!="cZ"){2W.7A("os"+x,y)}if(o.4Z&&o.4a){o.4a.9X()}o.U.jL();wW(x)}E Gn(1d){B i=1d.4k.7C(\'bd\');B x=5C[i];if(J(x)){if(x.I("=")>0){B z=x.1j(0,x.I("="));B y=x.1j(x.I("=")+1);v[z]=y;uk();8k(o[2p+\'wP\']);if(2p=="m7"){7H("DM")}}}}E 8k(i){if(J(1P[i])){B av=L;B 8u=L;B 5r=\'\';if(6k){if(1P[i]=="5c"){5r=o.P.rU()}if(1P[i]=="7y"){5r=o.P.rV()}if(1P[i]=="2Z"){5r=\' \';8u=H}if(1P[i]=="ep"){if(o.7P){5r=o.mp[o.KI]}}if(1P[i]=="7y"||1P[i]=="ep"||1P[i]=="5c"){if(o[\'dP\'+1P[i]].S==0){av=H}F{if(o[\'dP\'+1P[i]].S==1&&(C.Hq!=1||o[\'dP\'+1P[i]][0]==1)){av=H}F{8u=H}}}if(1P[i]=="5M"){if(!o.5M){av=H}F{8u=H}}if(1P[i]=="6Q"){if(o.2i!=\'bW\'&&!v.6Q){av=H}F{8u=H}}if(1P[i]=="1W"){if(J(o.26)){8u=H;if(o.4T||v.9e==1){if(o.3v){5r=o.3a[!o.4T?o.3v.7f():o.3r]}}F{5r=\'\'}B hA=0;V(B s=0;s<o.26.S;s++){if(o.26[s]!=\'\'){hA++}}if(hA==1&&o.im==1){hA=0}if(v.mC==1&&v.sE==1){}F{if(hA==0){av=H;8u=L}}}F{av=H}}if(1P[i]=="54"){5r=o.5L[o.9v];5r==1&&C.dS!=1?5r=2P(\'gK\'):\'\';8u=H;if(o.2i=="bc"||(o.P.5q()&&C.KJ!=1)){av=H;8u=L}}if(1P[i]in o.5t){5r=kq(1P[i]);8u=H}if(1P[i].I("8b")>0){B x=\' \';B y=[\'ER\',\'EC\',\'EN\'];V(B z=0;z<y.S;z++){if(J(v[1P[i]+y[z]])){if(v[1P[i]+y[z]]!==\' \'){x+=(x!==\' \'?\':\':\'\')+v[1P[i]+y[z]]}}}5r=x!=\' 0:0\'&&x.I(":")>-1?x:\' \';o[1P[i]+\'7B\']=5r;8u=H}}8C[i].1V=5r+(5r!=\'\'&&C.KO!=1?\' &eM;<2v Y="ic" 1f="FT" rO="-1 -1 5 8" 8w="1.1" 4e="3L://4f.w3.3Y/47/2v" 4e:4d="3L://4f.w3.3Y/7T/4d"><p4 4r="#\'+C.6l+\'" 4r-Y="1" 6i="1Y" 8l="0 0 3 3 0 6"></p4></2v>\':\'\');B Jd=6k&&bJ!=-1;if(av){1k(f[i]);if(6k){d2[i]?2G(d2[i]):\'\';if(o.Q){o.Q.hT(i,L,5r)}F{d2[i]=1z(E(){o.Q.hT(i,L,5r)},4B)}}O(f[i],{\'1n\':\'2x\',\'2m\':0,\'1c\':-100})}if(8u){if(Jd){}F{if(C.3x==1){O(f[i],{\'2l\':\'bG-4L\'})}F{1o(f[i])}}if(6k){d2[i]?2G(d2[i]):\'\';if(o.Q){o.Q.hT(i,H,5r)}F{d2[i]=1z(E(){o.Q.hT(i,H,5r)},3V)}}O(f[i],{\'1n\':\'gJ\',\'2m\':0,\'1c\':0})}2z()}V(B j=1;j<f.S;j++){if(f[j]){if(5N(f[j])){B 4w=L;4I?4w=H:\'\';4I=L;4w&&o.Q?o.Q.4w():\'\'}}}};B vQ=0;E 4Y(i,HE,fa){fa?1P[i]=fa:\'\';if(J(1P[i])){o.n1=H;aW();B x=uV();if(6k){bJ==-1?vQ=x[0]:x[0]=vQ}if(2p!=1P[i]){2p=1P[i];if(2p==\'5c\'||2p==\'7y\'||2p==\'1W\'||2p==\'54\'||2p==\'ep\'||2p in o.5t||2p.I("8b")>0||2p==\'2Z\'||2p==\'1v\'){bJ=i;B z=lS(o[\'dP\'+2p]);if(2p=="x7"){if(C.qM==1){z=7H("MI")}F{z=7H("Lr")}}if(2p=="m7"){z=7H("LY")}if(2p=="2Z"&&o.2Z){z=[];V(B j=1;j<=16;j++){if(J(v["2Z"+j])){z.2L(2P(v["2Z"+j]));i9[z.S]=v["2Z"+j]}}}if(2p=="1v"&&o.4u){z=[];lA=i;V(B j=0;j<o.lz.S;j++){B co=o.lz[j].1j(4);z.2L(2P(co));6B[z.S]=co}}B eE=o[\'LV\'+2p];B HJ=o[\'Lq\'+2p];V(B j=1;j<f.S;j++){if(f[j]){f[j].C.2l="1Y"}}f2=[];cF(\'f2\',0);cM(f2[0],fF[0],4V[0],5E[0],0);O(f2[0],{"2R-2K":"3U 6r "+(C.x5==1?8x:"5p(100,100,100,0.7)")});az=HE;B lB=L;4V[0].1V=(x[0]<2||az==1||C.ya==1?\'\':hE)+(v.1g[is+i+"1L"]&&v.1g[is+i+"1L"]!=\'\'?v.1g[is+i+"1L"]:2P(v.1g[is+i+"1e"]))+(o[1P[i]+\'7B\']?o[1P[i]+\'7B\']:\'\');if(2p==\'1W\'&&!o.rk){B hZ=1X("2c");hZ.1V=2P("2M");O(hZ,{\'1v\':C.1v,\'ah\':\'2y\',\'6H\':\'4A\'});5E[0].1R(hZ);hZ.1w(6j,EU);lB=H}if(2p==\'1W\'&&v.mC==1&&!o.1i.tv&&J(1M.qj)){B uf=1X("2c");!o.3v?o.3v=1u jK():\'\';uf.1V="<pW 1D=\'3w\' id=\'"+v.id+"In\' Mr=\'.un,.uG,.iD\' C=\'2l:1Y\'/>"+2P(\'vf\');O(uf,{\'1v\':C.1v,\'ah\':\'2y\',\'6H\':\'4A\',\'2I-1b\':(lB?\'dN\':0)});5E[0].1R(uf);o.fN=1T.8n(v.id+"In");o.fN.KF=o.3v.qg;uf.1w(6j,o.3v.qg)}if(lB){if(gn){if(az==2){z=[];3n(f2[0])}V(j=0;j<o.cn.S;j++){if(v.kX==0&&o.cn[j]=="jg"){}F{z.2L("L2"+o.cn[j])}}}}O(4V[0],{\'3Z-3O\':C.hH*2B(v.8f,1)});5C[0]="L0";if(2p in o.5t){sr(2p);if(lA>0&&o.lz.I(\'Lj\'+2p)>-1){4V[0].1V=hE+2P(2p);5C[0]="1v";5E[0].1V=kq(2p)}O(5E[0],{\'Y\':C.5f*2.5,\'1B-8E\':\'2m\'})}if(az!=1&&x[0]>1){f2[0].1w(b7,6w);f2[0].1w(aI,5T);f2[0].1w(6j,vd);f2[0].1w("a0",aO)}F{O(f2[0],{"6H":\'7G\'})}if(C.tX==1){3n(f2[0])}if(J(z)){B zz=\'\';V(j=0;j<z.S;j++){B y=j+1;B dB=0;B 6O=L;if(z[j]&&4D(z[j])!=\'\'){if(2p==\'5c\'){if(z[j]==2P("2y")){dB=1}if(o.2i=="1C"&&v.M6==1){B iz=5e(z[j]);if(iz&&iz<zz){dB=2}zz=5e(z[j])}}cF(\'f2\',y,dB);cM(f2[y],fF[y],4V[y],5E[y],1P[i],i);if(2p==\'54\'){z[j]==1&&C.dS!=1?z[j]=2P(\'gK\'):\'\'}if(1J(z[j])==\'4W\'){if(z[j].I("<<<")==0){z[j]=z[j].1Q(\'<<<\',\'\');6O=H}if(z[j].I(\'8b\')>0){o[2p+\'wP\']=i}if(z[j].I("xS")==0){B 1G=z[j];if(1G.I("8b")>0){4V[y].1V=2P(z[j].1j(1G.I("8b")+5))}F{4V[y].1V=2P(z[j].1j(7))}if(z[j]==\'Mc\'){nS=f2[y];O(f2[y],{"2R-1c":"3U 6r "+(C.x5==1?8x:"5p(100,100,100,0.7)")})}}F{4V[y].1V=z[j]}}F{4V[y].1V=z[j]}5C[y]=2p+j;if(eE==j||HJ==j){5E[y].1V=eE==j?iK:HI;if(eE==j){n2(y)}}if(1J(z[j])==\'4W\'){if(z[j].I("xS")==0){B t=z[j].1j(7);if(t.I("1v")>0){5E[y].1V="<2c C=\'"+(v[t]=="3W"?\'2R:3U 6r #ky;1f:am;Y:am;\':\'1f:dN;Y:dN;\')+";2w-1v:"+(v[t].I("#")==-1?\'#\':\'\')+v[t]+";2R-6S:dN;\'></2c>"}F{if(J(v[z[j].1j(7)])){5E[y].1V=v[z[j].1j(7)]}}}if(2p=="2Z"){if(J(i9[y])&&o.2Z){5E[y].1V=o.2Z.1q(i9[y],0.7,3E(C.6l))}}if(2p=="1v"){if(J(6B[y])&&o.4u){5E[y].1V=kq(6B[y])}}if(2p==\'5c\'){if(z[j]==2P("2y")&&o.P.jS()){n2(y)}if(2E(v.ch)){B fq=v.ch.2q(",");V(B k=0;k<fq.S;k++){if(z[j].I(fq[k])>-1){3n(f2[y])}}}}}B vM="";if(1J(z[j])==\'4W\'){if(z[j].I("xS")==0){42(f2[y],{\'Mz\':i,\'HY\':z[j].1j(7)});vM="ls"}}if(!6O){f2[y].1w(b7,6w);f2[y].1w(aI,5T);if(vM=="ls"){f2[y].1w(6j,ls)}F{f2[y].1w(6j,vd)}f2[y].1w("a0",aO);f2[y].1w("Dj",Jj)}F{O(f2[y],{"6H":"7G"})}}}}2z()}if(1P[i]==\'6Q\'){o.U.h8();2p=-1}if(1P[i]==\'vf\'&&J(o.gE)){o.gE.7I();2p=-1}if(1P[i].I(\'W\')>-1){B id=1P[i].1j(8);if(J(o.1H[id])){B fl=o.1H[id][\'3w\'];if(J(fl)){if(fl.I(\'3S:\')==0){if(id.I(\'x\'+cV)!=0){o.29=fl.1j(5);bo(id.1j(0,id.lw(\'-\'))+\'-0\');K}if(!o.1t){o.29=fl.1j(5)}if(!o.1y){o.U.2A()}3B(\'3S\',fl.1j(5));9K();K}cY(i);vA(id);7H("DB");if(J(o.1H[id][\'7e\'])&&v.7e==1&&v.Ko==1){7e(o.1H[id][\'7e\'])}F{mj(id);o.U.e5(fl,(v.W.jA==1?1:1I));v.W.7M==0&&v.W.gt==1?1z(9K,4B):\'\';n6=L;kP=L;mg(id);js("Ks")}}F{if(J(o.1H[id][\'5b\'])){6e(id);if(n6){5Q==-1?4Y(0,0):\'\'}F if(kP){5Q==-1?4Y(2J(f.S)-2,0):\'\'}}}}if(o.2X){o.2X.mq()}}if(1P[i]==\'5M\'){o.P.fO()}}}};G.H3=E(x){8k(o[x+\'wP\'])};E wW(x){if(x=="wr"){Js();K}if(x=="wx"){B z=2p+\'Hn\';if(v[z]){V(B y in v[z]){if(v[z].2n(y)){wZ(y,v[z][y])}}gs()}K}aW();V(B i=0;i<f2.S;i++){if(f2[i]){f2[i].C.2l="1Y"}}f2=[];cF(\'f2\',0);cM(f2[0],fF[0],4V[0],5E[0],0);O(f2[0],{"2R-2K":"3U 6r "+(C.x5==1?8x:"5p(100,100,100,0.7)")});if(x.I("8b")>0){f2[0].1w(6j,uk);4V[0].1V=2P(x.1j(x.I("8b")+5))}F{f2[0].1w(6j,gs);4V[0].1V=(C.ya!=1?hE:\'\')+2P(x)}O(4V[0],{\'3Z-3O\':C.hH*2B(v.8f,1)});f2[0].1w(b7,6w);f2[0].1w(aI,5T);f2[0].1w("a0",aO);B 4l=[];B mi=L;if(x.I("3O")>0){4l=[\'50%\',\'75%\',\'100%\',\'KU%\',\'sG%\',\'CV%\',\'4B%\',\'Li%\',\'dz%\',\'iq%\']}if(x.I("5o")>0){4l=[\'0\',\'0.2\',\'0.3\',\'0.4\',\'0.5\',\'0.6\',\'0.7\',\'0.8\',\'0.9\',\'1\']}if(x.I("jj")>0){V(B i=-5;i<5.5;i+=0.5){4l.2L(2D.4i(i*100)/100)}}if(x.I("ei")>0){4l=[4B,iq,gg]}if(x.I("2K")>0){V(i=0;i<21;i++){4l[i]=i*10}}if(x.I("ER")>0){V(i=0;i<24;i++){4l[i]=i}}if(x.I("EC")>0||x.I("EN")>0){V(i=0;i<60;i++){4l[i]=i}}if(x.I("ae")>0){mi=H;4l=[0,1]}if(x.I("4r")>0){mi=H;4l=[0,1]}if(x.I("1v")>0){4l=[\'3F\',\'EM\',\'Kw\',\'Ku\',\'Kp\',\'Kj\',\'Mh\',\'Ma\',\'K0\',\'Kt\',\'Kn\',\'Ll\',\'Kc\',\'Ka\',\'K6\',\'K1\',\'KP\',\'3W\'];B vx=v[x].1Q("#","");if(4l.I(vx)==-1){4l[8]=vx}}V(y=1;y<=4l.S;y++){cF(\'f2\',y,0);cM(f2[y],fF[y],4V[y],5E[y],y);O(5E[y],{\'2S-1b\':0});if(x.I("1v")>0||x.I("2K")>0||x.I("8b")>0||x.I("jj")>0){y%3!=0?O(f2[y],{\'ka\':\'1b\'}):\'\';O(f2[y],{\'Y\':\'33.3%\'});if(x.I("1v")>0){4l[y-1]=2B(v["PY"+(y-1)],4l[y-1]);4V[y].1V="<2c C=\'"+(4l[y-1]=="3W"?\'2R:3U 6r #ky;1f:Gg;Y:Gg;\':\'1f:f3;Y:f3;\')+";2w-1v:"+3E(4l[y-1])+";2R-6S:f3;\'></2c>";O(f2[y],{\'2C-1f\':1})}F{4V[y].1V=4l[y-1]}}F{if(x.I("ei")>0){4V[y].1V=4l[y-1]}F{y%2!=0?O(f2[y],{\'ka\':\'1b\'}):\'\';O(f2[y],{\'Y\':\'50%\'});if(mi){4V[y].1V=2P(4l[y-1]+\'7B\')}F{4V[y].1V=4l[y-1]}}}5C[y]=x+\'=\'+4l[y-1];if((4l[y-1]==v[x]&&6E(v[x])!=" ")||v[x]==\'#\'+4l[y-1]){5E[y].1V=iK;n2(y)}f2[y].1w(b7,6w);f2[y].1w(aI,5T);if(x.I("8b")>0){f2[y].1w(6j,Gn)}F{f2[y].1w(6j,FF)}f2[y].1w("a0",aO)}2z()}E n2(x){f2[x].nJ.aP(\'6T-\'+v.id+\'-e7-A3\');O(4V[x],{\'1v\':C.6l});nt(fF[x])}E mj(id){if(J(o.1H[id][\'2e\'])){v.2e=o.1H[id][\'2e\'];J(v.2e)?o.P.9S(v.2e):\'\'}if(J(o.1H[id][\'1L\'])){o.cd=o.1H[id][\'1L\']}vu()}E mg(id){B t=o.1H[id][\'1L\'];if(J(t)){if(v.o2==1){if(o.U.pe(o.1H[id])){}F{v.1L=(v.xd==1&&J(o.vh)?o.vh+(v.yh==1?\'<br>\':\' \'):\'\')+t}o.U.ag(\'1L\')}}if(v.eS==1){if(J(o.1H[id][\'8l\'])){v.8l=o.1H[id][\'8l\']}F{v.8l=[]}o.Q.kl()}B xv=[\'6f\',\'lY\',\'6Q\',\'7a\',\'X\',\'j9\',\'Du\',\'lZ\',\'vl\',\'43\',\'4g\',\'iC\',\'D5\',\'7E\',\'c9\',\'et\',\'9n\',\'ir\'];V(B i=0;i<xv.S;i++){B n0=o.1H[id][xv[i]];if(J(n0)){v[xv[i]]=n0;if(i==16){v.W.dq=n0}}F{i<4?v[xv[i]]=1I:\'\'}}vA(id);B 94=o.1H[id];if(J(94[\'2o\'])){94[\'1W\']=94[\'2o\']}if(J(94[\'1W\'])){o.U.fe(94[\'1W\'])}if(J(94[\'9n\'])){o.Q.xk()}o.U.jh(o.1H[id]);if(o.hV){o.Q.y6(o.hV)}if(J(94[\'e6\'])){3B(\'e6\',94[\'e6\'])}if(J(94.1F)){o.U.3R(94.1F)}}E vA(id){B x=o.1H[id][\'1t\'];if(J(x)){if(x=="3p"){if(2M.1W&&!o.1H[id][\'1W\']){o.1H[id][\'1W\']=2M.1W}if(o.P.17()>0){v.1t=o.29=o.P.17()}F{2M.1t&&!o.29?o.29=2M.1t:v.1t=0}}F{v.1t=o.29=x}}F{v.1t=0}}E cY(x){if(5Q==0&&!o.1t){O(5P[5Q],{\'1v\':C.1v});O(a3[5Q],{\'7N\':C.4U});8C[5Q].1V=\'\';f[5Q].nJ.6f(\'6T-\'+v.id+\'-e7-pl\')}F{o.xP=x;if(5Q>-1){hG(5Q)}if(3j!=\'\'){if(!o.9B[3j]&&J(o.1H[3j])){o.xY+=2B(o.1H[3j].1m,0)}o.9B[3j]=H;5z=wa(5z,3j)}}if(1P[x]){B id=1P[x].1j(8);8C[x].1V=iK;f[x].nJ.aP(\'6T-\'+v.id+\'-e7-pl\');O(5P[x],{\'1v\':C.6l,\'1B-qK\':\'1Y\',\'1A\':C.a});nt(a3[x]);if(C.x8==1&&J(C.mW)){O(a3[x],{\'7N\':C.mW})}5Q=x;3j=id;o.3j=3j;v.4t=3j;o.lr=5P[x].1V;o.xP=3j;cV=o.1H[id][\'ju\'];if(o.Q){o.Q.gW()}if(9J){9J.Q8()}}}E 6e(id){B x=id==0?o.W:o.1H[id];o.xP=id;V(B i=0;i<f.S;i++){if(f[i]){if(C.3x==1){Z.3q(f[i])}F{6G.3q(f[i])}f[i]=1S}}f=[];5Q=-1;if(J(x[\'5b\'])){B y=7D.6a(x[\'5b\']).S;cF(\'f\',y);1P[y]="JQ";cM(f[y],a3[y],5P[y],8C[y],y);if(C.3x==1){O(f[y],{"Y":(C.kS==1?C.df:"2y"),"1f":C.hn})}if(C.FJ==1){B yj="3U 6r "+5R(C.FL,2B(C.FO,1));if(C.3x==1){O(f[y],{"Ps":yj})}F{O(f[y],{"Pd":yj})}}B 1G=x.1L;if(C.ya!=1){1G=hE+1G}5P[y].1V=1G;O(5P[y],{\'3Z-3O\':C.hH*2B(v.8f,1)});B p=x[\'ju\'];f[y].1w(b7,6w);f[y].1w(aI,5T);f[y].1w(6j,E(){E9(p)});x=x[\'5b\']}B y=7D.6a(x).S;5z=[];d4=[];if(9J&&C.3x!=1){9J.6f(6G);if(y>v.W.9J){9J.aP(C,6G)}}V(B i=0;i<y;i++){cF(\'f\',i);1P[i]="W"+x[i].id;if(!J(o.9B[x[i].id])&&!J(x[i].5b)){5z[x[i].id]=i;d4[x[i].id]=i}cM(f[i],a3[i],5P[i],8C[i],i);if(C.3x==1){if(C.6D==0){O(5P[i],{\'Y\':C.df-C.qc-C.qd});3n(8C[i])}O(f[i],{"Y":(C.kS==1?C.df:"2y"),"1f":C.hn})}5P[i].1V=x[i].1L?x[i].1L:\'&eM;\';if(v.c8==1&&v.7K==1&&x[i].id){if(o.rT){if(o.rT.I(x[i].id)>-1){x[i].dF=1}}}if(J(x[i].dF)){if(x[i].dF==1){o.9B[x[i].id]=H;hG(i)}}if(J(x[i].5b)){8C[i].1V=Hb;O(8C[i],{"1v":C.1v})}f[i].1w(b7,6w);f[i].1w(aI,5T);f[i].1w(6j,aZ);f[i].1w("a0",aO);if(J(o.9B[x[i].id])){hG(i)}if(3j==x[i].id){cY(i)}if(cV==x[i].id){O(5P[i],{\'1v\':C.6l});O(8C[i],{\'1v\':C.6l});nt(a3[i])}}2z();4I=L;o.Q?o.Q.4w():\'\'}E nt(x){if(2E(C.Hi)&&x){O(x,{"2w-ac":"3c-4H(5p(0, 0, 0, "+(1-C.Hi*1)+") 0 0)"})}}E hu(x,y,z,x1,y1,x2,y2,x3,y3,x4,y4){B ww=(C.3x==1?\'Hk\':\'100%\');B hh=(C.3x==1?\'100%\':\'Hk\');O(x,{\'1n\':\'2x\',\'2l\':\'bG-4L\',\'Y\':ww,\'1f\':hh,\'1B-8E\':\'8i\'});if(C.H8==1){O(x,{\'2w\':\'-p8-3c-4H(\'+y+\')\',\'2w\':\'-3N-3c-4H(\'+y+\')\',\'2w\':\'-ms-3c-4H(\'+y+\')\',\'2w\':\'-o-3c-4H(\'+y+\')\',\'2w\':\'3c-4H(\'+y+\')\',})}if(C.3x==1||o.1i.2f){O(x,{\'6H\':\'4A\'})}F{O(x,{\'4A-3f\':\'1Y\'})}if(C.l3==1){O(x,{\'6h-Y\':C.kn+\'px!5O\'})}if(z=="1c"){O(x,{\'1c\':-1,\'1b\':0})}if(z=="2K"){O(x,{\'2K\':-1,\'1b\':0})}if(z=="1b"){O(x,{\'1c\':0,\'1b\':0})}if(z=="2m"){O(x,{\'1c\':0,\'2m\':0})}if(z=="2m"||z=="1b"){O(x,{\'1B-8E\':\'1b\',\'2S-1c\':1E.2V/2-10})}x.1V="<8i><2c "+(C.GG==1?"Qi=\'G.C.7N=\\"#"+C.GE+"\\"\' R2=\'"+(C.yd==1?"G.C.7N=\\"#"+C.v1:"G.C.2w=\\"1Y")+"\\"\'":"")+" C=\'4A-3f:2y;6H:4A;Y:f3;1f:f3;2R-6S:f3;"+(C.yd==1?"2w-1v:#"+C.v1+";":"")+(z=="1c"?"2I-1c:dN;":"")+(z=="2K"?"2I-1c:dN;":"")+(z=="2m"?"2I-1b:fG;":"")+(z=="1b"?"2I-2m:fG;":"")+"\'><2v Y=\'20\' 1f=\'20\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'><g><2C x1=\'"+x1+"\' y1=\'"+y1+"\' x2=\'"+x2+"\' y2=\'"+y2+"\' 4r=\'#"+C.nh+"\' 4r-Y=\'"+C.nj+"\' 4r-eZ=\'4i\'/><2C x1=\'"+x3+"\' y1=\'"+y3+"\' x2=\'"+x4+"\' y2=\'"+y4+"\' 4r=\'#"+C.nh+"\' 4r-Y=\'"+C.nj+"\' 4r-eZ=\'4i\'/></g></2v></2c></8i>"}G.a8=E(){if(C.gZ==1){a8()}};E GK(){if(eo){a8()}}E a8(e){if(C.gZ==1&&!iL){if(C.3x==1){B h=Z.QY;B m=1E.2b+C.6V+C.7b+20;B t=Z.b3}F{B h=Z.HA;B m=1E.2V;B t=Z.dI}if(h>m){if(t>0){if(!5N(5v)){1o(5v);B m1=1u 5y({"mc":5v,"1D":"8o","to":1,"17":0.3,"me":"5v"})}}F{if(5N(5v)){B m2=1u 5y({"mc":5v,"1D":"8o","to":0,"17":0.3,"me":"5v","1k":H})}if(e){e.bQ<0?e.aa():\'\'}}if(t<h-m-10){if(!5N(5x)){1o(5x);B m3=1u 5y({"mc":5x,"1D":"8o","to":1,"17":0.3,"me":"5x"})}}F{if(5N(5x)){B m4=1u 5y({"mc":5x,"1D":"8o","to":0,"17":0.3,"me":"5x","1k":H})}if(e){e.bQ>0?e.aa():\'\'}}}F{1k(5v);1k(5x)}}}E GO(){B x=Z.dI+1E.2V-60;B m=1u 5y({"mc":Z,"1D":"8O","to":x,"17":0.3,"me":"J4","6q":"bZ"});1z(a8,2h)}E GP(){B x=Z.dI-1E.2V+60;B m=1u 5y({"mc":Z,"1D":"8O","to":x,"17":0.3,"me":"QW","6q":"bZ"});1z(a8,2h)}E i3(1d){2G(o.fb);1d.aq()}E Fv(){B x=Z.b3+(1E.2b+C.6V+C.7b)-60;B m=1u 5y({"mc":Z,"1D":"jI","to":x,"17":0.3,"me":"Rj","6q":"bZ"});1z(a8,2h)}E EB(){B x=Z.b3-(1E.2b+C.6V+C.7b)+60;B m=1u 5y({"mc":Z,"1D":"jI","to":x,"17":0.3,"me":"J6","6q":"bZ"});1z(a8,2h)}E E9(x){if(x==\'\'){6e(0)}F{if(J(o.1H[x])){6e(x)}}2p=\'\'}E hG(x){8C[x].1V=\'\';O(5P[x],{\'1v\':C.Eo});if(C.Eq==1){O(5P[x],{\'1B-qK\':\'2C-Re\'})}if(C.r9>-1){O(5P[x],{\'1A\':C.r9})}f[x].nJ.6f(\'6T-\'+v.id+\'-e7-pl\');O(a3[x],{\'7N\':C.r8});if(C.r0>-1){O(a3[x],{\'1A\':C.r0})}}E qZ(i){if(J(5C[i])){aW();if(7O("5c",i)==0){o.U.5U(5C[i].1j(7))}if(7O("7y",i)==0){o.U.e0(5C[i].1j(10))}if(7O("1W",i)==0){!o.3v?o.3v=1u jK():\'\';o.3v.9g(5C[i].1j(8))}if(7O("ep",i)==0&&v.7P==1){o.7P.za(5C[i].1j(7))}if(7O("2Z",i)==0){o.2Z?o.2Z.3o(i9[i]):\'\';9K()}if(7O("1v",i)==0){cJ();4Y(0,0,6B[i])}V(B p in o.5t){if(o.5t.2n(p)){if(7O(p,i)==0){o.P.yC(p,i)}}}if(7O("8b",i)>0){if(4V[i].1V==2P(\'6O\')){7H(2p+\'0\');8k(bJ);if(2p=="m7"){7H("DM")}d1()}F{if(2p=="x7"&&C.qM==1){7H(\'qM\',i);8k(bJ);d1()}}}if(7O("54",i)==0){o.U.9s(5C[i].1j(5));hj();1z(9K,4B)}}};G.hj=E(){hj()};G.H4=E(x){V(B i=0;i<1P.S;i++){if(1P[i]==x){K H}}K L};E hj(){V(B i=0;i<1P.S;i++){if(1P[i]=="54"){8k(i);if(2p==\'54\'){cJ();4Y(i,0)}}}}E cF(x,i,dB){if(J(2g(x))){2g(x)[i]=1X("2c");if(i<2||x=="f"||2p!=\'5c\'||dB==1){if(C.3x==1){Z.1R(2g(x)[i])}F{6G.1R(2g(x)[i])}}F{if(C.3x==1){Z.wd(2g(x)[i],2g(x)[i-1])}F{6G.wd(2g(x)[i],2g(x)[dB==2?i-2:i-1])}}if(x==\'f\'){42(2g(x)[i],{\'m9\':i})}if(x==\'f2\'){42(2g(x)[i],{\'bd\':i})}2g(x+\'bg\')[i]=1X("2c");B lX=1X("2c");2g(x)[i].1R(lX);lX.1R(2g(x+\'bg\')[i]);fD(lX);2g(x+\'41\')[i]=1X("2c");2g(x)[i].1R(2g(x+\'41\')[i]);fX(2g(x+\'41\')[i]);fD(2g(x+\'41\')[i]);2g(x+\'1L\')[i]=1X("2c");2g(x)[i].1R(2g(x+\'1L\')[i]);2g(x+\'5A\')[i]=1X("2c");2g(x)[i].1R(2g(x+\'5A\')[i]);if(i>0&&x=="f2"&&6k&&C.rQ==0){3n(2g(x+\'5A\')[i])}}};E cM(x,8S,kr,tV,Qy,ii){O(x,{\'1n\':\'gJ\',\'2m\':0,\'1c\':0,\'6H\':\'4A\',\'1f\':\'2y\',\'Y\':\'100%\',\'6s\':\'3h\',\'2l\':\'4L\',\'2C-1f\':\'1.Qk\'});if(6k){if(C.3x==1){O(x,{\'Y\':\'2y\'})}}if(C.q4&&C.3x==1){O(x,{\'Qz\':C.q4})}if(C.3x==1&&(!6k||ii>0||C.tX==1)){O(x,{\'2l\':\'bG-4L\',\'au-8E\':\'1c\',\'b9-8U\':\'gK\'})}O(8S,{\'2w\':(C.HL==1?"3c-4H(to 1b,"+3E(C.QN)+", "+3E(C.4U)+")":3E(C.4U)),\'1A\':C.5o,\'ah\':\'1Y\',\'5h\':\'1A 0.2s 6q-5j,2w .2s 6q-5j,6I .2s 6q-5j\'});fX(8S);fX(8S.4z);if(C.9Z==1){O(8S.4z,{\'kB-6I\':\'9Z(am)\'})}if(C.QK==1){x.C[C.3x==1?"2R-2m":"2R-2K"]="3U 6r "+5R(2B(C.QI,\'3F\'),2B(C.QH,0.2))}O(kr,{\'1n\':\'gJ\',\'2m\':0,\'1c\':0,\'ka\':(C.8E?C.8E:\'1b\'),\'1v\':C.1v,\'2S-1c\':C.k4,\'2S-2m\':C.qd,\'2S-2K\':C.QG,\'2S-1b\':C.qc,\'ah\':\'1Y\',\'1A\':C.a,\'5h\':\'1A 0.2s 3c,1v 0.2s 3c\',});O(tV,{\'1n\':\'gJ\',\'2m\':0,\'1c\':0,\'ka\':(C.F2?C.F2:\'2m\'),\'2S-1c\':C.k4,\'2S-2m\':C.qd,\'2S-1b\':C.qc,\'ah\':\'1Y\',\'3Z-3O\':C.5f*2B(v.8f,1),\'1A\':C.a,\'1v\':C.6l,\'5h\':\'1A 0.2s 3c,1v 0.2s 3c\'});if(C.l3==1){O(x,{\'6h-Y\':C.kn+\'px!5O\'});O(kr,{\'6h-Y\':(C.kn-70)+\'px!5O\'})}F{if(C.3x==1){if(C.kS==1){O(x,{\'Y\':C.df});O(kr,{\'Y\':C.df-70})}}F{O(kr,{\'b9-8U\':\'eg\'});O(tV,{\'b9-8U\':\'eg\'})}}}E d1(){V(B i=1;i<f.S;i++){if(J(f[i])){if(C.3x==1){f[i].C.2l="bG-4L"}F{f[i].C.2l="4L"}}}aW();cJ();2z();2p=\'\';bJ=-1};E cJ(){V(B j=0;j<f2.S;j++){if(f2[j]){if(C.3x==1){Z.3q(f2[j])}F{6G.3q(f2[j])}f2[j]=1S}}f2=[];2p=\'\'}E I1(){K Z.2b};G.h3=E(){ns()};E ns(){if(is=="W"){if(C.3x==1||C.EI==1){B x=o.2U-C.4C-C.4m;O(1E,{\'Y\':x});O(Z,{\'Y\':x});6G?O(6G,{\'Y\':x}):\'\'}o.2X?o.2X.2z():\'\'}}E 2z(){if(!iL){if(6k){o.Q?o.Q.nL():\'\';B x=C.tX==1&&f.S>1?f[1]:f[0]}if(is=="W"){ns();o.Q?o.Q.h3():\'\';B x=f[0];if(v.vO==1){p6()}}f.S>1&&!x?(f[1]?x=f[1]:\'\'):\'\';f.S>2&&!x?(f[2]?x=f[2]:\'\'):\'\';if(x){x.2b==0&&f2.S>0?x=f2[0]:\'\'}if(Z.2b-Z.tD>0&&x&&C.3x!=1){if(J(5v)){O(5v,{"Y":6G.2b})}if(J(5x)){O(5x,{"Y":6G.2b})}C.l2=(Z.2b-x.2b)-(Z.tD-x.tD)}F{C.l2=0}}};E uV(){B x=0;B y=0;B z=\'\';V(B i=1;i<f.S;i++){if(J(f[i])){if(f[i].C.5u!="3h"&&f[i].C.2l!="1Y"){x++;y=i;z=1P[i]}}}K[x,y,z]}G.w9=E(){gn=H;G.1o();az=2;gs()};E EU(x){gn=H;gs(x);if(gn&&nS){Z.Ny(0,nS.tG)}}E Js(x){gn=L;gs(x)}E gs(){d1();V(B i=0;i<1P.S;i++){if(1P[i]=="1W"){4Y(i,az)}}}E aW(){2G(tP);tP=1z(E(){o.n1=L},47)}E uk(){B x=2p;d1();V(B i=0;i<1P.S;i++){if(1P[i]==x){4Y(i,0)}}}G.tb=E(){K v.1g.7M==1&&v.1g.1r==1};E 9K(x){if((!6k&&v.W.DU==1)||(6k&&v.1g.7M==1&&x!=2)){K}if(is==\'W\'&&v.W.2X==1&&v.W.Nm!=1){if(v.W.7M==1&&x==1){K}o.2X?o.2X.D8():\'\';eo=L}F{if((x!=1||(C.Nl==1&&C.7M==1))&&!o.1i.tv){B m=1u 5y({"mc":1E,"1D":"8o","to":0,"17":0.1,"me":is,"6q":"AY"});hX=1z(E(){O(1E,{"5u":"3h","1A":0,"1c":-47});eo=L},4B)}F{O(1E,{"5u":"3h","1A":0,"1c":-47});eo=L}}if(is==\'W\'){if(v.W.JE==1&&o.Q){o.Q.rd("1e","W",H)}}3G(n7)};G.c=E(){K 1E};G.co=E(){if(1E.MR(Z)){K Z}};G.s=E(18){if(18=="4m"||18=="4C"){B k2=18.1Q("2I","9O");B k3=18.1Q("2I","ap");if(2E(C[k3])&&o.a5){K o.2U*C[k3]/100}if(2E(C[k2])){K o.2U*C[k2]/100}}K C[18]};G.ss=E(18){K C};G.1o=E(){d1();2G(hX);eo=H;if(is==\'W\'&&v.W.2X==1){o.2X?o.2X.nO():\'\'}F{O(1E,{"5u":"4j","1A":1,"5h":"1A 0.2s 3c"});B x=uV();if(x[0]==1){if(x[2]=="5c"||x[2]=="7y"||x[2]=="1W"||x[2]=="54"||x[2]in o.5t||x[2].I("8b")>0){4Y(x[1],0)}}}if(o.Q){is==\'1g\'?o.Q.nL():\'\';if(is==\'W\'){o.Q.h3();if(v.W.JE==1){o.Q.rd("1e","W",L)}}}if(o.1i.7s){O(Z,{\'92-Y\':\'2y\'});if(C.3x!=1){O(6G,{\'92-Y\':\'2y\'})}}gD=H;3G(mn);mn=6R(JI,100)};E JI(){3G(mn);gD=L}G.7I=E(i){4Y(i,1)};G.1k=E(x){9K(x)};G.GF=E(){if(o.2X){o.2X.ao()}};G.5U=E(){V(B i=0;i<1P.S;i++){if(1P[i]=="5c"){8k(i);if(o.2u.S>1){1o(f[i])}if(2p==\'5c\'){cJ();4Y(i,az)}}}};G.fO=E(){V(B i=0;i<1P.S;i++){if(1P[i]=="5M"){8k(i)}}};G.hL=E(x){V(B i=0;i<1P.S;i++){if(1P[i]==x){8k(i);if(o[\'dP\'+x]){if(o[\'dP\'+x].S>1){1o(f[i])}}if(2p==x){cJ();4Y(i,az)}}}};G.9g=E(){V(B i=0;i<1P.S;i++){if(1P[i]=="1W"){8k(i);if(o.3a){if(o.3a.S>0){B x=L;if(o.26){V(B y=0;y<o.26.S;y++){if(o.26[y]!=\'\'){x=H;1h}}}F{x=H}x?1o(f[i]):\'\'}}if(2p==\'1W\'){cJ();4Y(i,0)}}}};G.wK=E(x){o.W=x;6e(0);if(J(v.4t)){if(v.4t.I("x-")!=0){V(B y in o.1H){if(o.1H.2n(y)){if(o.1H[y].dX==v.4t){v.4t=y}}}}if(J(o.1H[v.4t])){gQ(o.1H[v.4t]);B y=o.1H[v.4t][\'bv\'];cY(y);if(v.W.lE==1&&C.2X!=1){6e(0);1z(E(){2z()},3V)}F{1z(E(){dA(y);2z()},3V)}v.4t=1I}F{cY(0)}}F{cY(0)}if(C.2X==1){if(!J(o.2X)){o.2X=1u MP()}}};G.bo=E(x){bo(x)};E bo(x){if(J(o.1H[x])){gQ(o.1H[x]);4Y(o.1H[x][\'bv\'],0);dA(o.1H[x][\'bv\'])}};G.nz=E(x){if(J(o.1H[x])){gQ(o.1H[x]);if(o.1H[x]["3w"]){o.29=1I;cY(o.1H[x][\'bv\']);mj(x);o.U.e5(o.1H[x]["3w"],1);mg(x);dA(o.1H[x][\'bv\']);if(o.2X){o.2X.mq()}}F if(o.1H[x]["5b"]){6e(x)}}};E I4(x){if(J(o.1H[x])){cV=\'\';6e(0);gQ(o.1H[x]);mj(x);4Y(o.1H[x][\'bv\'],0);mg(x)}};G.aA=E(){n6=H;B x=2J(5Q)+1;if(3j!=\'\'){o.9B[3j]=H;5z=wa(5z,3j)}if(v.5z==1){x=sd(5z);if(x==1S){if(v.Ng==1||v.W.dq==1){d4.DL(E(a,b){K 2D.5F()-0.5});V(B x in d4){if(d4.2n(x)){5z[x]=d4[x]}}x=sd(5z)}F{o.U.Dx()}}}F{if((1P[x]=="JQ"||5Q==-1)&&3j!=\'\'){B y=7m().I(3j);if(y<7m().S){B z=o.1H[7m()[y+1]];if(z){if(J(z.5b)){z=o.1H[7m()[y+2]]}G.nz(z.id);x=-1;o.U.2A()}}}}if(x>-1){o.29=1I;4Y(x,0);dA(x)}};E dA(x){if(f[x]&&!iL){if(C.3x==1){B to=f[x].hI-20;B m=1u 5y({"mc":Z,"1D":"jI","to":to,"17":0.3,"me":"J6","6q":"bZ"})}F{B to=f[x].tG-1E.2V/2+20;B m=1u 5y({"mc":Z,"1D":"8O","to":to,"17":0.3,"me":"J4","6q":"bZ"})}1z(a8,2h)}}E sd(4q){B 6a=7D.6a(4q);B x;V(B i=0;i<6a.S;i++){x=4q[6a[6a.S*2D.5F()<<0]];if(x){1h}}K x};G.5t=E(x){sr(x)};E sr(x){kx[x]>-1?8k(kx[x]):\'\';if(5E[0]){if(2p==\'1K\'){5E[0].1V=2D.4i(o.3D.x*100)+\'%\'}F{5E[0].1V=kq(2p)}}};E kq(x){if(x=="1K"){K 2D.4i(o.3D.x*100)+\'%\'}F{K 2D.4i(2B(o.ai[x],o.5t[x])*100)+\'%\'}}G.bz=E(){K rR()};E rR(){if(v.5z==1){K 7D.6a(5z).S>0}B x=L;if(o.1H){x=7m().I(3j)<7m().S-1}K x};G.nw=E(){if(J(o.jw)){I4(o.jw)}};G.gM=E(){B x=5Q>0;if(o.1H){B z=7m().I(3j);x=z>0;if(z==1){if(J(o.1H[7m()[0]].5b)){x=L}}}K x};G.f4=E(){K J(o.1H)};G.e1=E(){kP=H;if(G.gM()){B x=2J(5Q)-1;if(x<0){B y=7m().I(3j);if(y>0){B z=o.1H[7m()[y-1]];if(z){if(J(z.5b)){z=o.1H[7m()[y-2]]}if(z){G.nz(z.id);o.U.2A()}}}}F{o.29=1I;4Y(x,0);dA(x)}}};G.nm=E(){if(5Q>0){dA(5Q)}};E 7O(x,i){K 5C[i].I(x)};E gQ(x){if(x[\'qb\']!=-1){gQ(o.1H[x[\'ju\']]);6e(x[\'ju\'])}F{6e(0)}};G.g=E(x){cg(x){1l"Y":K I1();1h;1l"1f":K 1E.2V;1h;1l"1c":K C.9r;1h;1l"B0":K Z.HA;1h;1l"D4":K C.d8;1h;1l"x":K 5e(1E.C.1b);1h;1l"y":K 5e(1E.C.1c);1h;1l"1A":K 1E.C.1A;1h;1l"1o":K eo;1h;1l"7I":K bJ;1h;1l"18":K 18;1h;1l"aK":K 18+aK;1h;1l"4I":K 4I;1h;1l"W":K is=="W";1h;1l"dF":K o.9B[3j];1h;1l"rQ":K iK;1h;1l"b5":K o.1H[o.b5]?o.1H[o.b5].1L:\'\';1l"c9":K v.c9?v.c9:\'\';1l"G1":K rR()?o.1H[7m()[7m().I(3j)+1]].1L:\'\'}};E 7m(){K 7D.6a(o.1H)};G.Hh=E(){3j=\'\';v.4t=\'\'};G.4I=E(){if(6k){B x=0;V(B i=1;i<11;i++){if(1P[i]=="5c"){B y=o.2u.S;if(J(v.ch)){B z=v.ch.2q(",");V(B j=0;j<z.S;j++){if(o.2u.I(z[j])>-1){y--}}}if(y>0){if(y>1||(y==1&&o.2u!=1&&C.Hq==1)){x++}}}if(1P[i]=="5M"){if(o.5M){x++}}if(1P[i]=="6Q"){if(o.2i==\'bW\'||v.6Q){x++}}if(1P[i]=="7y"){if(o.6X.S>1){x++}}if(1P[i]=="ep"&&v.7P==1){if(o.mp.S>0){x++}}if(1P[i]=="1W"){if(J(o.26)){V(B s=0;s<o.26.S;s++){if(o.26[s]!=\'\'){x++;1h}}}if(x==1&&o.im==1){x=0}if(v.mC==1&&v.sE==1){x++}}if(1P[i]=="54"){if(o.2i!="bc"){x++}}if(1P[i]in o.5t||1P[i]=="2Z"||1P[i]=="1v"){x++}if(1P[i]){if(1P[i].I("8b")>0){x++}}if(v.1g[is+i+\'1k\']==1){x--}}K x<=0}F if(is=="W"){K f.S==0}F{K 4I}};G.4c=E(){if(1E.4z==o.1O){1E.3q(Z);o.1O.3q(1E);o.2X?o.2X.4c():\'\';1E=1S;Z=1S;iL=H}}};B te=E(X,ib){B 6C=L;if(X.I(\'6C\')==0){6C=H;X=X.1j(5)}B n3=mA(X);B 2j;B 3i;B iZ=L;B 3T=L;B ly=L;B mE=L;B 2y=H;B ti=[];B cw=1;B iP=L;B sT;B ef=0;B mB=0;B mF=L;B mR=\'Hu\'+v.id+(6C?\'6C\':\'\');iQ("#Hu"+v.id+"{Y:100%!5O;1f:100%!5O;6h-Y:1Y!5O;6h-1f:1Y!5O}");B 1E=1X(\'2c\');B mz=0;1E.6m(\'id\',mR);ib.1R(1E);o.5M=L;!6C?o.U.gV():\'\';if(o.1i.2f){v.4v=1}if(v.Hz!=1){B 7X=1X(\'2c\');ib.1R(7X);O(7X,{1n:"2x",1c:0,1b:0,"2w-1v":"#ph",1f:"100%",Y:"100%","1A":0});7X.1w("B9",E(1d){1d.6v=H});if(o.1i.2f){7X.1w("fS",E(1d){1d.6v=H});7X.1w("2t",E(1d){1d.6v=H});7X.1w("fR",E(1d){1d.6v=H;fw(1d);if(v.e2==1){1z(Hv,100);1z(mX,2h)}})}F{7X.1w("qm",E(1d){B x=H;if(v.1Z==1){if(J(v.6W)&&!ly){x=L}if(J(v.lP)&&aL()=="8j"&&17()>0){x=L}}if(x&&v.e2==1&&v.Hw!=1){3n(G);1z(mX,47)}})}v.e2==1&&v.OL!=1?3n(7X):\'\'}E mX(){6N(7X)}E Hv(){if(v.Hw!=1){3n(7X)}}if(v.4v==1&&v.3b==0){9l()}if(!1M[\'YT\']){1M.OJ=E(){mG();V(B i=0;i<4X.S;i++){if(4X[i]){if(4X[i].3o("id")!=v.id){if(4X[i].3o(\'Aa\')){4X[i].3o(\'A4\')}}}}};B s5=sy("4x.7U/Hx","4x.7U/Hx","OI");if(s5){s5.tI=E(e){o.U.cX();if(v.Ix!=1){2j=\'zI OG k0\';o.P.5G()}}}}F{mG()}E mG(){if(v.4v==1||6C){!iZ?j2():\'\'}F{o.U.cX()}}E j2(){if("YT"in 1M){if(J(YT.ow)&&!iZ){1p("Ie gO");B ta=0;if(v.Hz==1){ta=1}o.29>0?ef=2J(o.29):\'\';3i=1u YT.ow(mR,{1f:o.8R,Y:o.8X,OE:n3,OD:{OC:1,OB:mR,OP:1,OQ:1,gt:1,jc:((v.HK==0||(v.P7!=1&&o.1i.7t))&&o.1i.2f?0:1),P6:3,Q:ta,P4:0,P3:1,A8:0,3b:6C||v.3b==1?1:0,8N:0},3f:{\'OU\':sY,\'P0\':IK,\'5G\':5G,\'OZ\':Iy}});if(o.29>0){o.29=1I}2z();iZ=H}F{1z(j2,3V)}}F{1z(j2,3V)}}B iO;E sY(){if(o.P){1p("Ie g6");3T=H;2G(sT);o.U.7J();if(6C){if(o.1i.wX){o.U.56()}3i.mw();o.1Z.OY()}F{if(v.3b==1&&o.1i.wX&&!o.pt){o.U.56();if(o.1i.2f){3G(iO);iO=6R(II,dz)}}if(v.4v==0){3i.mw()}F{o.U.cX()}mz=3i.tc();o.P.9Q();if(cw!=1){9s(cw)}cj();2z();if(v.OX==1){3g{if(3i.t0()){if(J(3i.t0().1L)){v.1L=3i.t0().1L;o.U.ag(\'1L\')}}}2H(e){}}}}}E II(){B x=3i.yX();if(x==2||x==-1){o.Q.3e();o.Q.7J();3G(iO)}if(x==1){3G(iO)}}E IK(1d){if(v.O2==1){1p(\'YT\',1d.28)}if(6C){if(1d.28==YT.ec.Ih){o.1Z.O4()}if(1d.28==YT.ec.IY){}}F{if(1d.28==YT.ec.IY){if(mB==1){mB=0;sY()}if(!o.1y){o.U.2A()}if(ef>0){3i.zl(ef,H);ef=0;o.29=1I}mX();ly=H;3T=H;if(mE){3i.tj()}F{o.P.9W();o.P.cq()}Iz();if(J(v.4J)){V(B i=0;i<o.2u.S;i++){if(v.4J==o.2u[i]){5U(i)}}v.4J=1S}F{if(J(o.4J)){V(B i=0;i<o.2u.S;i++){if(o.4J==o.2u[i]){5U(i)}}o.4J=1S}}iP=L}if(1d.28==-1&&iP&&o.1y){o.U.7J();iP=L;dw()}if(1d.28==YT.ec.O5){}if(1d.28==YT.ec.Ih){7W()}if(1d.28==YT.ec.Oe){if(!o.1y){}if(o.1y){iP=H;9l()}}if(1d.28==YT.ec.Ot){}}}E 5G(1d){if(6C){o.1Z.Rq()}F{if(1d.28==2){2j="JR 4x id"}if(1d.28==5){2j="sg 4I"}if(1d.28==101||1d.28==sG||1d.28==100){2j="G gB is Os"}if(v.Ok==1){J(v.Iw)?2j=v.Iw:\'\'}if(v.Ix!=1){o.P.5G()}F{1k(o.2e)}}}E 7W(){v.1t>0?ef=v.1t:\'\';o.P.7W();o.P.9Q()}E dw(){if(!o.JJ&&o.1y){o.U.3e()}}E cq(){o.P.cq()}E cj(){o.P.cj();o.U.ux()}E 9Q(){o.P.9Q()}E dl(){o.P.dl()}E 9l(){if(o.P){o.P.9l()}F{sT=1z(9l,100)}}E Iy(1d){sW(1d.28)}E Iz(){if(!mF){B x=3i.Oi()+\'\';if(x!=\'\'&&x!=1I){o.2u=x.2q(\',\');o.2u=o.2u.CZ();if(v.t9==0){B y=o.2u.I(\'2y\');if(y>-1){o.2u.qX(y,1)}}V(B i=0;i<o.2u.S;i++){o.2u[i]=ia(o.2u[i])}mF=H;sW(3i.Oh())}}}E sW(x){o.3m=o.2u.I(ia(x+\'\'));o.Q.x6(o.3m)}G.3O=E(){K{"Y":0,"1f":0}};G.2Y=E(x){n3=mA(x);if(o.29>0){ef=2J(o.29)}bo(n3)};E aL(){B 7o=-1;if(3T){7o=3i.yX()}B x=\'\';if(7o==-1){x="8j"}if(7o==1||7o==3){x="7u"}if(7o==2){x="8j";if(o.1y){o.U.3e()}}if(7o==5){x="8j"}if(7o==0){x="7h"}K x}E 2z(){3g{if(J(3i)){3i.Ol(o.2U,o.4Q)}}2H(e){1p(e)}}E ia(x){B y=x;if(x=="Om"){y="sh"}if(x=="a5"){y="nU"}if(x=="Og"){y="nT"}if(x=="Oo"){y="nP"}if(x=="Oq"){y="nE"}if(x=="Or"){y="nN"}if(v.yq==1){y=2P(y)}if(x=="2y"){y=2P("2y")}ti[y]=x;K y}E 17(){B x=3T?3i.NZ():0;if(x>0&&v.i6>0){v.4g=x-v.i6;v.i6=-1}K x};E 9s(x){3g{3i?3i.O8(x):\'\';cw=x}2H(e){}};G.nX=E(){mG()};G.2A=E(){if(3T){3i.mw()}F{if(!iZ){j2()}F{}}};G.3e=E(){if(3T){3i.tj()}};G.ea=E(){if(3T){aL()==\'7u\'?3i.tj():3i.mw()}};G.3P=E(x){if(3T){3i.zl(x,H);js("3S",x)}};G.ak=E(){K L};G.56=E(){3T?3i.5k():\'\'};G.6c=E(){3T?3i.Ox():\'\'};G.3R=E(x){3T?3i.yW(x*100):\'\'};G.nB=E(){K aL()==\'7u\'};G.5q=E(){K L};G.qk=E(x){5U(x)};E 5U(x){if(3T){if(J(o.2u[x])){B y=ti[o.2u[x]];2y=y==\'2y\';B z=17();3i.OV(y)}}}G.eU=E(x){9s(x)};G.3T=E(){K 3T};G.6P=E(){K aL()};G.17=E(){K 17()};G.1m=E(){B x=3T?3i.tc():0;if(x!=mz){mz=x;o.P.9Q()}if(J(v.43)){if(7n([v.43],\'-\')){x=x+v.43*1}F{x=v.43}}K x};G.a4=E(){B x=0;if(3T){x=3i.P1()*3i.tc()}K x};G.4N=E(){2z()};G.kc=E(){K 2j};G.2y=E(){K v.t9==1?2y:L};G.yP=E(x){bo(x)};E bo(x){X=x;if(3i){mB=1;3i.OH(x,0)}}G.mI=E(){if(o.1i.2f&&o.1i.as){G.2A();mE=H}F{if(aL()=="7u"){G.3e()}}};G.gH=E(){mE=L};G.tN=E(){K H};G.4c=E(){3T?3i.9T():\'\';3T=L;mF=L;3g{if(1E){ib.3q(1E)}ib.3q(7X)}2H(e){}}};B Cg=E(){B x=\'\';B t=0;B d=0;if(o.5m){if(v.ON!=1){if(2W.46("dx"+v.id+o.9j)!=1S){x=2W.46("dx"+v.id+o.9j)}if(v.7K==1&&2W.46("ij"+v.id+o.9j)!=1S){o.7K=2W.46("ij"+v.id+o.9j)}if(J(v.6U)){if(2W.46("dx"+o.d+v.6U)!=1S){x=2W.46("dx"+o.d+v.6U)}if(v.7K==1&&2W.46("ij"+o.d+v.6U)!=1S){o.7K=2W.46("ij"+o.d+v.6U)}}if(o.7K&&v.7K==1){o.rT=o.7K.2q(",")}if(x.I("{")==0){if(v.A5==1){o.b5=x.1j(1,x.I("}")-1)}F{o.tU=v.4t=x.1j(1,x.I("}")-1)}x=x.1j(x.I("}")+1);v.N7==1?v.W.lE=0:\'\'}dE(x)}};E dE(x){if(x){if(x.I("--")>0){B y=x.2q("--");t=3K(y[0]);if(v.N8==1&&t>0&&v.3b==1){v.3b=0}if(v.A5==1){o.xM=t}F{d=3K(y[1]);o.29=t}}}}G.G9=E(){if(J(v.6U)){if(2W.46("dx"+o.d+v.6U)!=1S){x=2W.46("dx"+o.d+v.6U);dE(x);o.Q.dy(t,d);o.Q.3H(t,d);v.1m=d}F{o.29=0;o.Q.dy(0,0);o.Q.3H(0,0);v.1m=0}}};G.ny=E(t,d){if(o.P.5q()&&v.N9==1){}F{B ct=1u 6M().9m();2W.7A("dx"+(J(v.6U)?o.d+v.6U:v.id+o.9j),(J(o.3j)?"{"+o.3j+"}":\'\')+t+\'--\'+d+\'--\'+ct)}};G.AD=E(x){o.7K=(o.7K?o.7K+\',\':\'\')+x;2W.7A("ij"+(J(v.6U)?o.d+v.6U:v.id+o.9j),o.7K)};G.a1=E(){K{t:t,d:d}}};B jK=E(){B 2o=[];B bi=[];B 4I=H;B 7f;B 9b=-1;B qW;B 9E;B l6=[];B l5;B iE=[];G.1t=E(x){if(!x&&9E){nM(9E);9E=1I}F{x?nM(x):\'\'}};G.vL=E(x){nM(x)};G.IQ=E(){iE=[]};E nM(x){if(x.I("#"+v.bY)==0&&x.I(v.dD)>0){o[o.fd[1]](x,A7)}F{bh(x)}}E A7(x){o.26=x;bh(x)}E bh(x){!x?x=\'\':\'\';if(x!=\'11\'){B 1t=0;B su=H;B ik=\'\';o.26=x.2q(",");o.3a=[];o.3r=-1;if(us()&&v.uh==1){if(2W.46("tQ")!=1S){ik=2W.46("tQ")}}F{if(o.mL){ik=o.mL}}V(B i=0;i<o.26.S;i++){if(o.26[i].I("#0")==0){o.26[i]=bR(o.26[i])}if(o.26[i].I("#"+v.9C)==0){o.26[i]=o[o.fd[0]](o.26[i])}if(o.26[i].I("[")==0&&o.26[i].I("]")>1){o.3a[i]=o.26[i].1j(o.26[i].I("[")+1,o.26[i].I("]")-1);o.26[i]=o.26[i].1j(o.26[i].I("]")+1);su=L}F{o.3a[i]=o.26[i].1j(o.26[i].lw("/")+1);o.3a[i]=o.3a[i].1j(0,o.3a[i].lw("."))}if(o.26[i].I("#0")==0){o.26[i]=bR(o.26[i])}if(o.26[i].I("#"+v.9C)==0){o.26[i]=o[o.fd[0]](o.26[i])}}if(o.3a.S>1&&v.kX==1){o.3a.2L(lF(\'Na\',(v.Nb==1&&J(v.Ab)?v.Ab:2P(\'Ca\'))));o.26.2L("9H")}if(o.3a.S>0&&v.9e==1){if(v.D0==1){7f=0;1t++;o.3a.iH(lF(\'Ac\',2P(\'6O\')));o.26.iH("")}F{o.3a.2L(lF(\'Ac\',2P(\'6O\')));o.26.2L("");7f=o.3a.S-1}}V(B i=0;i<o.26.S;i++){if(J(v.ze)){if(v.ze==o.3a[i]){1t=i;o.3r=i;v.fM=1}}if(ik!=\'\'){if(ik==o.3a[i]){1t=i;o.3r=i}}}if(v.9e==1&&v.fM==0){o.3r=7f}J(o.Q)?o.Q.ba():\'\';if(v.fM==1){o.3r=1t;if(o.1t){if(v.kX==1&&o.26[1t]=="9H"){tR(o.3r)}F{jD(o.3r)}}F{9E=x;o.4T=o.26[1t]!=\'6O\'&&1t!=7f;1z(iA,3V)}}F{if(su&&o.26.S<3){jD(7f==0?1:0)}v.9e!=1?o.3r=-1:\'\'}}F{4c()}};E yw(x){if(x.I(\'js:\')==0){3g{x=2g(x.1j(3))}2H(e){aM.1p(e.8p)}}K x?x:\'\'};G.q8=E(x){ip(x,\'1C\')};E jD(x){if(J(o.26[x])){o.26[x]=yw(o.26[x]);if(o.26[x]){if(o.26[x].I(".")>-1){o.nR=o.26[x].2q(" or ");o.g8=0;ip(x)}F{if(o.26[x].I(\'bi\')==0){if(bi[o.26[x].1j(4)]){se(o.3a[x],bi[o.26[x].1j(4)])}}if(o.26[x].I(\'1C\')==0){o.P.eY(x,"F7");o.4T=H;o.3r=x;o.Q.ba()}}}}}E tR(x){o.4T=H;iA()}E ip(x,y){B X=y==\'1C\'?x:4D(o.nR[o.g8]);B j9=X;B g3;if(l6[X]){if(o.26[x]!=\'9H\'){o.4T=H;iA()}}F{if(X.I(\'bO\')>0&&X.I(\'bO\')<4){g3=X.1j(0,X.I(\'bO\'));j9=X.1j(X.I(\'bO\')+3)}B 4M=fC(j9);9b=x;o.im=1;4M.cC=E(){o.im=0;if(G.fE==4&&G.6P==4B){o.4T=H;se(X,G.e3,x,y)}F{if(o.g8+1<o.nR.S){o.g8++;ip(9b)}F{ne("fZ")}}};4M.tI=E(e){o.im=0;if(o.g8+1<o.nR.S){o.g8++;ip(9b)}F{ne("fZ")}};4M.bD()}};E ne(x){1p("1W gN oz or Cl Ck");if(o.3a[o.3r]){if(o.3a[o.3r].I(2P("fZ"))==-1){o.3a[o.3r]=o.3a[o.3r]+\' (\'+2P(x)+\')\'}}if(v.Nf==1&&9b>-1){o.26[9b]=\'\';o.3a[9b]=\'\'}o.3r=-1;o.4T=L;if(o.Nj){o.Q.ba();o.Q.4w()}F{1z(E(){if(o.Q){o.Q.ba();o.Q.4w()}},100)}if(J(o.1W)){o.1O.3q(o.1W);o.1W=1S}}E se(X,x,y,z){B g3;if(x.I("#"+v.9C)==0){x=o[o.fd[0]](x)}if(x.I("#"+v.bY)==0&&x.I(v.dD)>0){x=o[o.fd[1]](x)}if(X.I(\'bO\')>0&&X.I(\'bO\')<4){g3=X.1j(0,X.I(\'bO\'))}if(X.I(\'.iD\')>-1||X.I(\'.uG\')>-1||X.I(\'.nC\')>-1||X.I(\'.un\')>-1){B l=g3?g3:o.3r;if(o.26[l]=="9H"){l=y}if(z!=\'1C\'||!2o[l]){2o[l]=7D();2o[l][0]=[];2o[l][1]=[]}B 3u=cp();3u=x.2q(/\\r|\\n/);B uX=1;B t1=0;B t2=0;B fL=(J(v.Cw)?v.Cw:0);if(X.I(\'jj=\')>0){fL=X.1j(X.I(\'jj=\')+6)*1}V(B i=0;i<3u.S;i++){if(X.I(\'.iD\')>-1||X.I(\'.un\')>-1){if(3u[i].I(\'-->\')>-1&&3u[i].I(\':\')>-1){if(z==\'1C\'){if(iE.I(3u[i])>-1){1h}iE.2L(3u[i])}t1=iB(3u[i].1j(0,3u[i].I(\'-->\')))*1+fL;t1==0?t1=1:\'\';t2=iB(3u[i].1j(3u[i].I(\'-->\')+4,12))*1+fL;J(2o[l][0][t1])?\'\':2o[l][0][t1]=\'\';V(B j=t1;j<t2;j++){2o[l][1][j]=t1}uX++}F{3u[i]=4D(3u[i]);if(3u[i]!=\'\'&&3u[i].S>0&&3u[i]!=uX&&3u[i]!=\'N5\'){if(2E(2o[l][0][t1])){2o[l][0][t1]=2o[l][0][t1]+\'<br>\'+3u[i]}F{2o[l][0][t1]=3u[i]}}}}if(X.I(\'.uG\')>-1||X.I(\'.nC\')>-1){if(3u[i].I(\'NH:\')>-1){t1=iB(3u[i].1j((X.I(\'.nC\')>-1?3u[i].I(\'=0\')+3:12),12))*1+fL;t2=iB(3u[i].1j((X.I(\'.nC\')>-1?3u[i].I(\'=0\')+14:23),10))*1+fL;B p=\'\';if(3u[i].I(\'0,,\')>0){p=3u[i].1j(3u[i].I(\'0,,\')+3)}F{if(3u[i].I(\'Ci,\')>0){p=3u[i].1j(3u[i].I(\'Ci,\')+6)}if(3u[i].I(\')}\')>0){p=3u[i].1j(3u[i].I(\')}\')+2)}}if(p!=\'\'){if(2o[l][0][t1]!=1I){2o[l][0][t1]+=\'<br>\'+p}F{2o[l][0][t1]=p}2o[l][0][t1]=2o[l][0][t1].1Q(/{.*?}/,\'\');2o[l][0][t1]=2o[l][0][t1].1Q(/\\\\\\\\N/,\'<br>\');2o[l][0][t1]=2o[l][0][t1].1Q(/\\\\N/,\'<br>\');V(B j=t1;j<t2;j++){2o[l][1][j]=t1}}}}}l6[X]=H;if(o.26[y]!=\'9H\'){z!=\'1C\'?iA():\'\'}}F{if(x!=\'\'){if(x.I(\'[\')==0){bh(x)}F{ne("2j")}}F{4c();o.Q.4w()}}}E iA(){o.Q.ba();o.U.jL();o.Q.4w()}E iB(iD){B 1G=iD.2q(\':\');B 5j=0;1G.S==2?1G.iH("bF"):\'\';1G[0]!=\'bF\'?5j+=1G[0]*wS:\'\';1G[1]!=\'bF\'?5j+=1G[1]*60:\'\';5j+=1G[2].1j(0,2)*1;5j=5j*10+1G[2].1j(3,1)*1;K 5j};E 9g(x){if(J(o.3r)){if(o.3r!=x){iE=[];if(x==-1||(v.9e==1&&x==7f)){nq()}F{v.cZ=0;o.3r=x;o.4T=H;v.fM=1;rf(x);js("1W",o.3a[x]);o.Q.ba()}}F{if(v.9e!=1){nq()}}}}E ri(){if(J(o.3a[o.3r])){if(o.5m&&v.uh==1){2W.7A("tQ",o.3a[o.3r])}F{o.mL=o.3a[o.3r]}}}E rf(x){if(J(o.26[x])){1p("fe",x);o.3r=x;ri();if(o.2i=="1C"&&o.9w==H){o.P.eY(x,"1C")}F{if(o.2i=="3J"&&o.rk==H){o.P.eY(x,"3J")}F{if(o.26[x]=="9H"){tR(o.3r)}F{jD(o.3r)}}}}};G.qg=E(){if(o.fN){B x=o.fN.3X;if(x[0]){B y=1u qj();y.cC=E(e){B z=e.4k.ja;bi.2L(z);o.3r=-1;B z=x[0].6x;if(z.S>40){z=x[0].6x.1j(0,15)+\'...\'+x[0].6x.1j(-15)}if(v.9e==1&&v.D0==1){o.26.2L(\'bi\'+(bi.S-1));o.3a.2L(z+\'\');9g(o.26.S-1)}F{o.26.iH(\'bi\'+(bi.S-1));o.3a.iH(z+\'\');v.9e==1?7f++:\'\';9g(0)}o.fN.5A=""};y.QB(x[0])}F{o.fN.2t()}}};G.9g=E(x){9g(x)};G.7f=E(){K 7f};G.QJ=E(x){7f=x};G.1o=E(x){nO(x)};G.C=E(){rv()};G.6f=E(){4c()};G.6O=E(){nq()};E nq(){js("1W","6O");o.4T?o.yL=o.3r:\'\';o.3r=v.9e==1?7f:-1;v.fM=0;o.4T=L;o.Q.ba();ri();o.rk?rf(o.3r):\'\';J(o.1W)?o.1O.3q(o.1W):\'\';o.1W=1S}E nO(17){if(o.9I){K}B t=2J(17*10);if(v.cZ){17=17-v.cZ*1}if(o.4T&&J(o.26)){if(2o){B x=o.3r;B t=2J(17*10);if(v.vS==1&&!o.1y){K}if(o.26[x]=="9H"){if(!l5){V(B i=0;i<o.26.S;i++){1z(jD,i*3V,i)}if(!2o[x]){2o[x]=7D();2o[x][0]=cp();2o[x][1]=cp()}l5=H}F{if(2o[x][1][t]){}F{V(B i=0;i<o.26.S;i++){if(2o[i]){if(J(2o[i][1])){if(J(2o[i][1][t])){if(!2o[x][0][t]){2o[x][0][t]=\'\'}2o[x][0][t]+=(2o[x][0][t]!=\'\'?\'<br>[kR]\':\'\')+2o[i][0][2o[i][1][t]]+(2o[x][0][t]!=\'\'?\'[/kR]\':\'\')}}}}if(J(2o[x][0])){if(J(2o[x][0][t])){2o[x][1][t]=t}}}}}if(J(2o[x])){if(J(2o[x][1])){if(J(2o[x][1][t])){B y=\'\';y=2o[x][0][2o[x][1][t]];if(!J(o.1W)){o.1W=1X(\'2c\');42(o.1W,{id:\'h7\'+v.id+\'4o\'+\'1W\'});o.1O.1R(o.1W);rv();js("rg",o.3a[x])}if(4I){6N(o.1W)}Bu();if(v.Br==1){y=Ql(y)}if(v.kX==1){y=y.1Q(/\\[kR\\]/gm,\'<7r C="1v:\'+3E(v.jg)+\'">\');y=y.1Q(/\\[\\/kR\\]/gm,\'</7r>\')}if(y.I(\'<c.\')>-1){y=y.1Q(/\\<c./gm,\'<7r C=1v:\');y=y.1Q(/\\<\\/c\\>/gm,\'</7r>\')}if(v.8H){if(v.8H.2o==1&&qW!=y){js("2o",y);qW=y}}o.1W.1V=\'<7r C="\'+(v.BK==1?\'2w-1v:\'+5R(v.lh,v.lf)+\';\':\'\')+\'-3N-5W-qK-1h: Rf;1v:\'+3E(v.j6)+\';2S:\'+v.rc+\'px \'+v.rc*2+\'px;2R-6S:\'+v.C2+\'px;2I:0 0;2C-1f:\'+(v.C4?v.C4:1.8)+\';3Z-ei:\'+v.m8+\'">\'+4D(y)+\'</7r>\';O(o.1W,{"3Z-3O":((2J(v.ou)+((2J(v.jf)-100)*2J(v.ou)/100))+"px")});if(v.BI==1){if(o.22){O(o.1W,{"3Z-3O":((v.pG+((2J(v.jf)-100)*v.pG/100))+"px")})}}4I=L}F{if(!4I&&J(o.1W)){rB()}}}}F{rB()}}}}E rB(){if(!4I){o.1W?o.1W.1V=\'\':\'\';4I=H;3n(o.1W)}}E rv(){if(o.1W){O(o.1W,{"1n":"2x","Y":"100%","2S-1b":"10%","2S-2m":"10%","1b":0,"1v":v.j6,"1B-8E":"8i","5W-iR":"2R-5W"});if(v.Rm==1&&J(v.rh)){v.rh!=\'\'?O(o.1W,{"3Z-eD":v.rh}):\'\'}if(v.pQ==1){O(o.1W,{"1B-ae":"-3U -3U 0 #es,3U -3U 0 #es,-3U  3U 0 #es,3U  3U 0 #es"})}F{if(v.lU==1){O(o.1W,{"1B-ae":"3U 3U Rn Ro"})}F{O(o.1W,{"1B-ae":"1Y"})}}if(v.Rp==1){sO(o.1W,\'o.kE\')}F{v.Br!=1?fD(o.1W):\'\'}}}E Bu(){if(!o.kE){if(o.Q.pH()||v.dg>v.1r.h){O(o.1W,{"1n":"2x","1c":"2y","1b":0,"2K":(v.dg*1)})}F{O(o.1W,{"1n":"2x","1c":"2y","1b":0,"2K":(v.dg*1+v.1r.h*1)})}}}E 4c(){o.3r=-1;o.4T=L;o.og=L;v.1W=1S;v.lY=1S;o.2o=1S;o.26=1S;l5=L;l6=[];2o=[];if(J(o.Q)){o.Q.ba()}o.3a=1S;if(J(o.1W)){o.1O.3q(o.1W);o.1W=1S}o.3r=1S;o.4T=L}};B 5y=E(x){B fh;B QU;B 2Q;B 4G;B 4n;B kJ;B fk=0;B cw;B xV=L;B yb;if(x.me!=1I&&x.mc!=1I&&x.1D!=1I&&x.to!=1I){if(x.17==1S){if(x.1D.I("fs")>-1){x.to==0?x.17=0.5:x.17=0.2}F{x.17=0.20}}fh=BU(x.6q);if(x.1D.I("1K")==-1){if(J(o.6Z[x.me])){o.6Z[x.me].wY()}o.6Z[x.me]=G}if(x.1o==1){x.mc.1U("2l",H)}2Q=x.1D.2q(\'|\');4n=6E(x.to).2q(\'|\');4G=1u cp();V(B i=0;i<2Q.S;i++){if(!4n[i]){4n[i]=4n[0]}if(2Q[i]=="fs"){4G[i]=x.mc.g("1A")}if(2Q[i]=="8o"){4G[i]=x.mc.C.1A}if(2Q[i]=="y"){4G[i]=x.mc.g("y")}if(2Q[i]=="x"){4G[i]=x.mc.g("x")}if(2Q[i]=="1b"){4G[i]=2J(x.mc.C.1b)}if(2Q[i]=="1c"){4G[i]=2J(x.mc.C.1c)}if(2Q[i]=="1K"){4G[i]=x.mc.g("3k")}if(2Q[i]=="8O"){4G[i]=x.mc.dI}if(2Q[i]=="jI"){4G[i]=x.mc.b3}if(2Q[i]=="3t"){4G[i]=x.mc.g("3t")}if(2Q[i]=="3k"){4G[i]=x.mc.g("3k")}if(2Q[i]=="Y"){4G[i]=x.mc.g("Y")}if(2Q[i]=="BD"){4G[i]=x.mc.2b;4n[i]=2D.8q(4n[i]);x.me=="QV"?1p("Y",x.me,4G[i],4n[i],x.mc.2b):\'\'}if(2Q[i]=="1f"){4G[i]=x.mc.g("1f")}if(2Q[i]=="BE"){4G[i]=x.mc.2V}4n[i]=BA(4n[i]);4G[i]=BA(4G[i])}cw=x.17*2h/fh.S;kJ=fh.S;if(2Q.S==1&&4G[0]==4n[0]){al()}F{1z(kG,2D.4i(cw))}}E kG(){V(B i=0;i<2Q.S;i++){B 1G=4G[i]+(4n[i]-4G[i])*(fh[fk]?fh[fk]:0);ym(2Q[i],1G);if(2Q[i]=="y"){x.mc.1U("1c",1G)}if(2Q[i]=="x"){x.mc.1U("1b",1G)}if(2Q[i]=="1b"){x.mc.C.1b=1G+"px"}if(2Q[i]=="1c"){x.mc.C.1c=1G+"px"}if(2Q[i]=="1K"){x.mc.1U("1K",1G)}if(2Q[i]=="3t"){x.mc.1U("3t",1G)}if(2Q[i]=="3k"){x.mc.1U("3k",1G)}if(2Q[i]=="8O"){x.mc.dI=1G}if(2Q[i]=="jI"){x.mc.b3=1G}if(2Q[i]=="Y"){x.mc.1U("Y",1G)}if(2Q[i]=="BD"){O(x.mc,{"Y":1G})}if(2Q[i]=="1f"){x.mc.1U("1f",1G)}if(2Q[i]=="BE"){O(x.mc,{"1f":1G})}}fk++;if(!xV){if(fk==kJ){al()}F{yb=1z(kG,2D.4i(cw))}}}E al(){xV=H;if(x.1k){if(2Q[0]=="8o"||2Q[0]=="1b"){1k(x.mc)}F{x.mc.1U("2l",L)}}if(x.1D.I("1K")==-1){o.6Z[x.me]=1S;4g o.6Z[x.me]}V(B i=0;i<2Q.S;i++){ym(2Q[i],4n[i])}2G(yb)};E ym(y,z){if(y=="fs"){x.mc.1U("1A",z)}if(y=="8o"){x.mc.C.1A=z}}G.wY=E(){al()};G.AN=E(){fk=kJ-1;kG();al()};G.XY=E(x0,x1,y0,y1){B e=L;V(B i=0;i<2Q.S;i++){if(2Q[i]==\'x\'&&x0!=x1){e=H}if(2Q[i]==\'y\'&&y0!=y1){e=H}}e?al():\'\'};E BU(Bl){cg(Bl){1l"AY":K[0,0.PF,0.PG,1.Pc,1.Pq,1.Pp,1.102,0.Pk,0.Pj,0.87,0.Pi,0.Ph,1.Pg,1.Pf,1.Pe,1.Q3,0.Q4,0.Q5,0.Q6,0.Q7,1.Q2,1.B8,1.Q9,1.B8,1.Qd,0.ky,0.lN,0.lN,0.lN,0.lN,1];1h;1l"bZ":K[0,0.Qe,0.Qf,0.Qg,0.Q0,0.PL,0.PZ,0.PX,0.PW,0.PV,0.PU,0.PT,0.PS,0.PR,0.PP,0.PO,0.PN,0.PM,0.Df,0.95,0.Pb,0.MO,0.KS,0.KG,0.99,0.L9,0.Le,0.ky,1];1h;7G:K[0,0.CV,0.32,0.44,0.52,0.6,0.67,0.73,0.Lb,0.82,0.85,0.L8,0.L4,0.Df,0.95,0.97,0.Kf,0.Ky,1];1h}}};B zV=E(){B N=7Q.Kx,ua=7Q.Kz,cA=7Q.Jk,vt;B M=ua.vr(/(m5|jd|7s|Dz|Dw)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);B M=ua.vr(/(m5|jd|7s|Dz|Dw|Kr|mY)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);if(M&&(vt=ua.vr(/8w\\/([\\.\\d]+)/i))!=1S)M[2]=vt[1];B m6=7Q.Dm;G.cO=M?M[1]:N;G.8w=M?M[2]:7Q.Mo;G.dR=7Q.Dm>1;G.m5=G.cO=="Mm";G.v0=G.cO=="Dh 9.0";G.ie=G.cO=="Dh"||G.cO=="Me"||G.cO=="M9";G.mY=ua.ci(/(mY)\\/?\\s*/i)>-1;G.ff=G.cO=="M8";G.7s=G.cO=="MM";G.jd=1M.jd;G.hQ=ua.ci("MJ NT")>-1;G.5a=(ua.ci(/(7t|io|MG)\\/?\\s*/i)>-1)||(7Q.MB===\'Ms\'&&m6>1);G.tv=v.Cf!=1&&ua.ci(/(TV|MA|Mw|LE|Lz|Ly|Lx|Lt)\\/?\\s*/i)>-1;G.lg=v.Cf!=1&&ua.ci(/(LG)\\/?\\s*/i)>-1;G.7t=ua.ci(/(7t)\\/?\\s*/i)>-1;G.io=G.5a&&!G.7t;G.3N=\'Lp\'in 1T.o7.C;if(ua.ci(/(as)\\/?\\s*/i)>-1){m6>0?G.as=H:G.tv=H;if(Ln(\'(4A:LF)\').Lw){G.tv=H}}G.2f=(2M.2f==1||G.5a||G.as||(ua.ci(/(M1|LZ|m5 mV)\\/?\\s*/i)>-1))&&!G.tv&&2M.LU!=1;G.wX=G.7s||G.jd;G.22=L;if(G.5a){G.LL=3K(ua.1j(ua.I(\'OS \')+3,4).1Q(\'4o\',\'.\'));if(G.io&&(!\'HO\'in 1M||m6<2)){G.2f=G.5a=L;G.tv=H}}G.cz=!G.2f;G.ql=G.2f||G.dR;G.z6=G.2f||G.tv;G.Ke=G.3N&&G.cz;if(o.1O.xK||o.1O.xs||o.1O.xc||o.1O.xi||o.1O.xm){G.22=H}};E 9G(4q,7p){V(B s in 7p){if(1J(7p[s])==\'3M\'){if(s=="3f"||s=="3w"){4q[s]=7p[s]}F{V(B s2 in 7p[s]){if(1J(4q[s])!=\'3M\'){4q[s]={}}if(1J(7p[s][s2])==\'3M\'){V(B s3 in 7p[s][s2]){if(1J(4q[s][s2])!=\'3M\'){4q[s][s2]={}}if(1J(7p[s][s2][s3])==\'3M\'){V(B s4 in 7p[s][s2][s3]){if(1J(4q[s][s2][s3])!=\'3M\'){4q[s][s2][s3]={}}4q[s][s2][s3][s4]=7p[s][s2][s3][s4];if(s3==\'2S\'||s3==\'2I\'){4q[s][s2][s3][s4]=2J(4q[s][s2][s3][s4])}}}F{4q[s][s2][s3]=7p[s][s2][s3];if(s2==\'2S\'||s2==\'2I\'){4q[s][s2][s3]=2J(4q[s][s2][s3])}}}}F{4q[s][s2]=7p[s][s2];if(s==\'2S\'||s==\'2I\'){4q[s][s2]=2J(4q[s][s2])}}}}}F{if(s.I("LR")>0&&4D(7p[s])===""){}F{4q[s]=qD(s,7p[s])}}}K 4q};B qD=E(18,5A){if(1J(5A)==\'4W\'){5A=4D(5A);if(18.I("1v")>-1&&5A!=-1){5A=3E(5A)}}K 5A};E us(){3g{B 5m=1M[\'2W\'],x=\'LA\';5m.7A(x,x);5m.qw(x);K H}2H(e){K L}};E vV(aK){if(aK){if(J(o.6Z[aK])){o.6Z[aK].wY()}}};B 2P=E(x){B y=x;if(y){y=x.6t(0).LI()+x.6F(1);if(y.I("4o")>-1){y=y.1Q(/4o/ig," ")}}B en={"of":"of","kf":"kf","M4":"Cc on Cb","Mv":"Cc 2j on Cb","Ca":"KB at Mq","8a":"pC","KR":"No","x7":"Kv","m7":"Kl","Kk":"M5","dg":"Mk 2I","m8":"LB ei","lU":"LH","lf":"b6 1A","lh":"b6 1v","jf":"wj 3O","j6":"wj 1v","jg":"wj 1v 2","cZ":"4p jj","wr":"ao 2M","wx":"K9","dM":"K4","K5":"K2 to Kb","sh":"L1","nU":"L3","nT":"La","nP":"yM","z7":"yM","nE":"HD","nN":"KX HD","KD":"KK HD","sA":"KC HD","sB":"KV HD 4K","KM":"Ad","L6":"Go to L5 KA\'s K7","7y":"JZ","5I":"K3","22":"Km 22","Eb":"D7 22"};if(J(en[x])){y=en[x]}if(v.Ar==1){if(o[\'lo\'+o.1i.cA]){v.cA=o.1i.cA;v.Ar=0}}if(J(o[\'lo\'+v.cA])){if(J(o[\'lo\'+v.cA][x])){y=o[\'lo\'+v.cA][x]}}if(v.v3){if(v.v3[x]){y=v.v3[x]}}K y};B aT=E(x,y,z){if(!J(o.jQ[y])&&v.sI!=1){B t=o.cd?o.cd:(v.1L?v.1L:\'\');J(v.7E)?t=v.7E:\'\';if(v.Ag[x]==1&&v.AZ==1&&J(v.jm)){if(x=="8t"){6R(zH,LN)}if(J(1M["lp"+v.jm])){1M["lp"+v.jm].zF(\'vH\'+x,{1L:t});1p("zt",\'vH\'+x)}F{1p("zt M7 2j")}}if(v.zf[x]==1){if(v.ga==1){B bT;if(v.I9==1){if(1M.zN){bT={\'7E\':t};if(v.jl){if(1J(v.jl)=="3M"){V(B g in v.jl){if(v.jl.2n(g)){bT[g]=v.jl[g]}}}}zN(\'1d\',\'vH\'+x,bT)}}F{if(1M.ga){bT={I6:\'ow\',I7:y};if(t!=\'\'){bT.I8=t}if(v.LO==1&&!o.9y){bT.LP=1}ga(\'rY.bD\',\'1d\',bT)}}}}}z?o.jQ[y]=H:\'\'};E zH(){if(J(1M["lp"+v.jm])){1M["lp"+v.jm].zF(\'Lu\')}};B mA=E(X){B x=\'\';X=X.1Q("v=","{=");if(X){if(X.I(\'o3.be/\')>-1){x=X.1j(X.I(".be/")+4);x.1Q("/","")}F{x=X.2q(/(o3.be\\/|v\\/|vl\\/|Lv\\?|4x.LC\\/rY\\/[^#]*#([^\\/]*?\\/)*)\\??{?=?([^#\\&\\?]*)/)[3]}if(x!=\'\'){if(x.I("?t=")>0){v.1t=x.1j(x.I("?t=")+3);B h=0;B m=0;B s=0;if(v.1t.I("h")>0){h=v.1t.1j(0,v.1t.I("h"));v.1t=v.1t.1j(v.1t.I("h")+1)}if(v.1t.I("m")>0){m=v.1t.1j(0,v.1t.I("m"));v.1t=v.1t.1j(v.1t.I("m")+1)}if(v.1t.I("s")>0){s=v.1t.1j(0,v.1t.I("s"));v.1t=v.1t.1j(v.1t.I("s")+1)}if(h>0||m>0||s>0){v.1t=h*wS+m*60+s*1}}if(x.I("?")>0){x=x.1j(0,x.I("?"))}}}K x};B js=E(x,y,li,ev){if(x=="8t"){o.8t=H}if(ev==1){V(B yi in y){if(y.2n(yi)){if(1J(y[yi])=="3M"){y[yi]=\'\'}}}}if(v.lx==1&&o.8t){if(v.LD==1||li==1){xO(x,y)}F{if(y!=1I){if(1J(y)==\'3M\'){3g{y=59.w0(y)}2H(e){}}F{if(1J(y)==\'4W\'){y=y.1Q(/\'/ig,\'′\')}}}if(1J(v.3f)==\'4W\'){if(v.3f.I("{")==0){3g{v.3f=v.3f.1Q(/\\\'/ig,\'"\');v.3f=59.6K(v.3f)}2H(e){aM.1p(e)}}}if(1J(v.3f)==\'3M\'){if(J(v.3f[x])||J(v.3f[\'w1\'])){B z=x;if(!J(v.3f[x])&&J(v.3f[\'w1\'])){z=\'w1\'}if(x.I("6g")==0){if(J(v.3f[\'1Z\'])){z=\'1Z\'}}3g{if(y!==1I){2g(v.3f[z]+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{2g(v.3f[z]+"(\'"+x+"\',\'"+v.id+"\')")}}2H(e){1p("3f",e,x)}}}F{if(v.3f==\'\'){v.3f="zC"}3g{if(y!==1I){2g(v.3f+"(\'"+x+"\',\'"+v.id+"\',\'"+y+"\')")}F{2g(v.3f+"(\'"+x+"\',\'"+v.id+"\')")}}2H(e){1p("3f",e,x,y)}}}}if(o.8t&&v.zB==1){if(o.zG){3g{o.zG.jy.od({1d:x,8L:y},"*")}2H(e){}}}if(v.J9==1&&li!==1){B zv={1d:x,17:o.P?(x=="3S"?o.B6:o.P.17()):0};if(y!=1I){zv["28"]=y}if(x=="1m"||x=="17"){zv["1m"]=o.P.1m()}if(x=="1F"||x=="bf"){zv["1F"]=v.1F}if(x=="1u"){zv["id"]=3B("yD")}1M.9P.od(zv,\'*\');B z=x;x=="8t"||x=="1t"||x=="43"?z=x+"ed":\'\';x=="1y"?z="Mt":\'\';x=="4s"?z="8j":\'\';x=="5k"?z="3y":\'\';x=="bf"?z="MH":\'\';x=="3S"?z="ML":\'\';x=="MC"?z="Md":\'\';zv["1d"]=z;if(z!=\'\'&&z!=x){zv=59.6K(59.w0(zv));1M.9P.od(zv,\'*\')}}};B xO=E(x,y){B ev=1T.Mf(\'7k\');if(y!==1I){ev.8L=y}ev.Mi(x,H,H);o.1E.Lk(ev)};G.1d=E(x,y){o.3f[x]=y};G.3o=E(x,y,R){v.Mn==1?1p(\'3o\',x,y):\'\';K 3B(x,y,R)};E 3B(x,y,R){if(J(o.U)&&1J(x)==\'4W\'){if(o.vy==1){K}if(R){if(1J(R)==\'4W\'){if(R.I("id:")==0){R=o.Q.t8(R.1j(3),"4E");if(R){if(x=="oq"&&y=="KY"){R.Jx()}}}}}if(x=="1y"||x=="3w"){if(J(y)){B bb=L;if(1J(y)==\'4W\'){y=y.1Q(/(\\r\\n|\\n|\\r)/gm,"");B 29=-1;if(y.I("[3S:")>-1&&y.lw("]")==y.S-1){29=y.1j(y.I("[3S:")+6,y.S-1);29=29.1j(0,29.S-1);if(29=="17"){29=o.P.17()}F{29=2J(29)}y=y.1j(0,y.I("[3S:"));if(y==\'\'){if(o.P.1m()>0){o.U.3P(29);o.U.2A();K}F{o.29=29;o.U.2A();K}}F{o.29=29}}if(y.I("[Aj]")>-1){bb=H;y=y.1Q(\'[Aj]\',\'\')}if(y.I("#"+v.9C)==0){y=o[o.fd[0]](y)}if(y.I("#"+v.bY)==0&&y.I(v.dD)>0){o[o.fd[1]](y,zK,x);K}if(y.I("#0")==0){y=bR(y)}if(v.bt==1){y=bt(y)}if(y.I(".9k")==y.S-4){B 4M=fC(y);4M.cC=E(){if(G.fE==4&&G.6P==4B){3g{3B(\'1y\',59.6K(G.e3))}2H(e){}}};4M.bD();K}if(y.I("id:")==0&&J(o.1H)){B z=Az(y);if(J(o.1H[z])){o.Q.Gy(z);29>-1?o.29=29:\'\';K H}F{K L}}if(y.I("Kg:")==0){B z=y.1j(10);if(o.2i=="4x"){o.P.yN(z);K H}F{y=\'//o3.be/\'+z}}}if(x=="1y"){o.Q.GV();o.U.e5(y,1I,1I,(bb?1:0))}if(x=="3w"){o.mU=H;v.3b=0;o.U.e5(y,1,1I,(bb?1:0));o.Q.3H(0,0);o.1t=L}}F{if(x=="1y"){o.U.2A()}if(x=="3w"){1J zY==\'E\'?zY():\'\'}}}if(x=="do"){y?o.P.yR(y):\'\'}if(x=="4v"){if(J(y)){o.mU=H;o.U.e5(y,1,1)}F{o.P.sK()}}if(x=="4s"){if(o.1y){o.U.3e();o.U.jL()}}if(x=="ep"&&J(y)){o.1t&&o.7P?o.7P.za(y):\'\'}if(x.I("L7")==0){if(o.1Z){o.1Z.KZ(x.1j(6),y)}}if(x=="a6"){o.a6.lQ();o.a6=1u pU();if(J(y)){o.a6.9k(y)}F{if(v.CH==1){o.a6.9k(v.CQ)}F{o.a6.9k("Lc 8p")}if(v.CP==1&&J(v.CO)){o.di=1u CN()}}}if(x=="7F"){!o.1t?o.Q.wn():\'\';o.Q.8K();o.Q.FS("vw")}if(x=="hS"){o.1y?o.U.3e():o.U.2A()}if(x=="2F"){v.4v=0;v.3b=0;o.P.mu();o.U.aF()}if(x=="8d"){o.17=o.P.17();o.U.g2()}if(x=="6Q"){if(v.8H){if(v.8H.on==1&&v.8H.Ld==1){o.U.h8()}}}if(x=="xU"&&J(y)){if(o.5B){o.5B.3o(y)}}if(x=="2Z"){o.Q.GB()}if(x=="Lf"&&J(y)){if(v.1Z==1){if(y.I(\'js:\')==0){v.6y=y;v.jx=H;o.U.uZ("6y")}F{if(o.p!=\'\'){B sv=59.6K(d9(o.p));V(B l in sv){if(sv.2n(l)){if(J(sv[l].id)){if(y==sv[l].id){v.6y=\'Lh\'+(J(sv[l][\'xl\'])?\'xl\'+sv[l][\'xl\']:\'\')+y+\'4o\'+sv[l].6W;v.jx=H;o.U.uZ("6y")}}}}}}}}if(x=="KW"){1J yU=="E"?yU(y):\'\'}if(x=="6U"&&y){v.6U=y;o.3p?o.3p.G9():\'\'}if(x=="5k"){o.U.56()}if(x=="54"){if(J(y)){o.U.9s(y)}F{K o.5L[o.9v]}}if(x=="dF"){if(v.8H&&o.an){if(v.8H.an==1){K 2D.4i((o.an.6I(Rs).S-1)/2D.4i(o.P.1m())*100)}}}if(x=="kw"){K o.5L}if(x=="bf"){o.U.6c()}if(x=="lY"){if(J(y)){v[x]=y;o.U.jG()}}if(x=="bq"){K o.2u}if(x=="Db"){K o.ab?H:L}if(x=="5I"){K o.P?o.P.5q():L}if(x=="rg"){K v.9e==1?o.3a.6F(0,-1):o.3a}if(x=="Jt"){o.4T?o.3v.6O():o.3v.9g(2B(o.yL,(o.3v.7f()==0?1:0)))}if(x=="bW"){K o.9I}if(x.I("1W:")==0&&y){v[x.1Q(\'1L:\',\'4o\')]=y;o.U.jL()}if(x=="TO"){K o.j4}if(x=="aB"){K o.6X}if(x=="1F"||x=="yW"){if(J(y)){if(1J y=="4W"){if(y.I("+")==0){y=v.1F+3K(y.1j(1))}F{if(y.I("-")==0){y=v.1F-3K(y.1j(1))}}}if(y>=0&&y<=1){o.U.3R(y)}}K o.3y?0:v.1F}if(x=="3y"){K J(o.3y)?o.3y:L}if(x=="10e"){o.Q?o.Q.Et(y):\'\'}if(x=="e6"){y<2?y=\'\':\'\';if(2E(o[\'u\'+y])){B x2=59.6K(d9(o[\'u\'+y]));B v2=[];V(B l in v){if(v.2n(l)){if(l.I("9R")==0){v[l]=1S}}}if(1J x2=="3M"){V(B k in x2){if(x2.2n(k)){if(k.I("9R")==0){v[k]=x2[k]}if(k=="1r"){v2[k]=x2[k]}}}}v=9G(v,v2);B xb=L;if(o.Q.cN()){o.Q.7x();xb=H}B xt=L;if(o.Q.h5()){o.Q.cP();xt=H}o.Q.4c();o.Q=1S;o.Q=1u rz();if(o.P.6P()=="7u"){o.Q.2A()}o.Q.3R(v.1F);if(J(v.1L)){ag(v.1L)}if(xb){o.Q.7x()}if(xt){o.Q.cP()}if(o.22){o.Q.8M()}if(18!=\'Fe\'){o.Q.3H(o.P.17(),o.P.1m())}aY()}}if(x=="lZ"){K v.lZ}if(x=="4N"){o.Q.4N(H)}if(x=="10w"){o.Q.nL()}if(x=="Gx"){aY()}if(x=="2j"){o.P.5G(x)}if(x=="3S"){if(J(y)){if(1J y=="4W"){if(y.I("%")>-1){y=2J(y.1j(0,y.I("%")));y=o.P.1m()*y/100}F{B lC=o.P.17();if(o.3p&&!o.1t){if(!o.3p.le){B f=o.3p.a1();if(f.t&&f.d){lC=f.t;o.3p.le=H}}}if(y.I("+")==0){y=lC+3K(y.1j(1))}F{if(y.I("-")==0){y=lC-3K(y.1j(1))}}}}y=y*1;y<0?y=0:\'\';if(o.P.1m()>0){y>o.P.1m()?y=0:\'\'}if(!J(o.1Z)&&!J(o.5H)&&o.P.1m()>0){o.29=1I;o.U.3P(y,H);o.U.rZ()}F{o.29=y}}}if(x=="22"){!o.22?o.U.8M():\'\'}if(x=="xQ"){o.22?o.U.8B():\'\'}if(x=="10o"){K o.22}if(x=="3O"){K o.2U+\'/\'+o.4Q}if(x=="10K"){if(J(o.fY)){o.fY.Do()}}if(x=="Fy"||x=="10g"){if(J(o.fY)){o.fY.Un()}}if(x=="17"||x=="yZ"){B jq=o.P?o.P.17():0;if(o.3p&&v.c8==1&&!o.1t&&jq==0){B f=o.3p.a1();if(f.t){jq=f.t}}K x=="yZ"?f0(jq):jq}if(x=="11u"){if(o.b5){3B("1y","id:"+o.b5)}if(o.xM){3B("3S",o.xM);3B("1y")}}if(x=="1m"){K o.P?o.P.1m():0}if(x=="8c"){K o.P?o.P.a4():0}if(x=="8l"){if(y){v.8l=y;o.Q.kl()}}if(x=="5c"){if(J(y)){if(R){v.hd=b8(v.hd,y,R);if(o.2u.S==2){o.U.5U(v.hd)}}F{o.U.5U(y)}}F{K o.P?wb(o.P.rU()):0}}if(x=="7y"){if(J(y)){if(R){v.y5=b8(v.y5,y,R);if(o.6X.S==2){o.U.e0(v.y5)}}F{o.U.e0(y)}}F{K o.P?o.P.rV():0}}if(x=="Aa"){K o.2i=="4x"}if(x=="pZ"){if(o.7l>0){o.o0=o.7l}o.U.e5(o.3X[o.lV])}if(x=="7u"){K o.1y}if(x=="ly"){K o.1t}if(x=="1i"){K o.1i[y]}if(x=="A4"){o.vy!=1?o.P.uD():\'\'}if(x=="id"){K v.id}if(x=="1p"){v.1p=y}if(x=="lx"){v.lx=y}if(x=="2a"){o.P.zZ()}if(x=="11s"){o.P.Au();if(R){o.xy=b8(o.xy,y,R)}}if(x=="5M"){o.P.fO()}if(x=="8J"){o.P.d7()}if(x=="2M"&&v.sI!=1){aM.1p(2M)}if(x=="11a"&&o.4a){o.4a.8t()}if(x=="1W"){if(J(y)){if(y==\'0/1\'){if(o.4T){o.y9=o.3r;y=-1}F{y=o.y9?o.y9:0}}v.1W=y;if(y.5Y().S<3&&o.3v){o.3v.9g(y*1)}F{o.U.fe(y)}}F{K o.3a?o.3a[o.3r]:\'\'}}if(x=="+1W"&&v.1W){if(J(y)){v.1W+=\',\'+y;o.U.fe(v.1W)}}if(x=="bn"){if(J(o.bn)){if(J(y)){o.bn.3o(y)}F{K o.bn.10V()}}}if(x=="ty"){if(o.Ai){K o.Ai}F{K L}}if(x=="8W"){K o.P.8W()}if(x=="5W"){B 5W=1X("2c");5W.id=y;5W.C.51=11d;o.1O.1R(5W)}if(x=="GL"){if(o.4u){B 5n=1X("5n");B 3O=o.P.3O();5n.Y=3O.Y>0?3O.Y:o.aD;5n.1f=3O.1f>0?3O.1f:o.bm;O(5n,{"1n":"2x","1c":-5n.1f,"1b":-5n.Y,"2l":"1Y"});1T.aH.1R(5n);B 9i=5n.zu(\'2d\');9i.yc(o.P.ak(),0,0,5n.Y,5n.1f);B 5c=2;B jn=1T.1X("5n");jn.Y=5n.Y*5c;jn.1f=5n.1f*5c;B jp=jn.zu("2d");jp.yc(o.P.ak(),0,0,5n.Y*5c,5n.1f*5c);if(v.Ye==1&&J(v.y8)){!J(v.jo)?v.jo=20:\'\';!J(v.xe)?v.xe="3F":\'\';jp.3Z=v.jo+"px Yf, Yl";jp.Yn=3E(v.xe);jp.Yp((v.y8=="k7"?o.k7:v.y8),v.jo,5n.1f*5c-v.jo-5)}9i.yc(jn,0,0,5n.Y,5n.1f);B 41;3g{41=5n.ZG("ac/Ys")}2H(e){aM.1p(e.8p);K L}K 41}F{K L}}if(x=="3J"){K o.2i==x?o.P.lb():1I}if(x=="1C"){K o.2i==x?o.P.l7():1I}if(x=="2e"){if(!o.1y||v.fm===0){o.P.9S(y);K H}F{K L}}if(x=="Dn"){if(J(y)){y==\'1/0\'?y=1-2B(v.lI,0):\'\';v.lI=y;o.P.iI()}F{K 2B(v.lI,0)}}if(x=="1K"){if(J(y)){if(y==0){o.P.iI()}F{o.P.1K(y)}}F{K[o.3D.x,o.3D.y,o.3z.C.1b,o.3z.C.1c]}}if(x=="1L"){if(J(y)){J(y)?v.1L=y:\'\';o.U.ag(\'1L\');K H}F{K v.1L}}if(x=="Yt"){o.U.CY()}if(x=="2L"){if(y){!o.jt?o.jt=[]:\'\';if(1J(y)==\'3M\'){y=o.jt.a2(y);x="W"}}}if(x=="W"){if(y){if(1J(y)==\'3M\'){3g{o.U.6e(y);K H}2H(e){K L}}F{if(y.I(".9k")==y.S-4||y.I(".9k?")>0){B 4M=fC(y);4M.cC=E(){if(G.fE==4&&G.6P==4B){3g{3B(\'W\',59.6K(G.e3))}2H(e){}}};4M.bD();K H}F{if(y==\'\'){o.U.6e([])}F{if(y==\'dF\'&&o.j4>0){B 1G=2D.4i(((o.xY+(!o.Q.bu("dF")?o.P.17():0))/o.j4)*100);if(1G<o.xX||1G>100){K o.xX}F{o.xX=1G;K 1G}}}}}}}if(x=="6J"){o.Q?o.Q.aA():\'\'}if(x=="dM"){o.Q?o.Q.e1():\'\'}if(x=="5X"){o.Q?o.Q.k5(y):\'\'}if(x=="5X?"){K o.9x?[o.Yv,o.Yh]:0}if(x=="fB"){o.P?o.P.fB():\'\'}if(x=="l0"){if(J(y)&&J(o.1H)){!o.1y?v.3b=0:\'\';V(B j in o.1H){if(o.1H.2n(j)){if(o.1H[j].dX==y){y=j}}}if(J(o.1H[y])){o.Q.Ef(y);K H}F{K L}}}if(x=="Xu"){B 1G=[];if(J(o.1H)){V(B j in o.1H){if(o.1H[j].5b&&o.1H[j].qb==-1){1G.2L({1L:o.1H[j].1L,id:o.1H[j].id})}}}K 1G}if(x=="yD"){if(o.3j){K o.1H[o.3j].dX?o.1H[o.3j].dX:o.3j}}if(x=="Xv"){if(o.1H){K 7D.6a(o.1H).S}F{K-1}}if(x=="lr"){if(J(o.lr)){K o.lr}}if(x=="Xw"){o.Q.hi(y)}if(x=="XA"){o.P.iV()}if(x=="1r"){if(y=="on"){v.1r.1k=0}F if(y=="6O"){v.1r.1k=1;o.Q.gw()}F{o.Q.i2()}}if(x=="A3"){o.Q.7x()}if(x=="5V"){o[x]=H}if(x=="XG"){if(o.1Z){K H}F{K L}}if(x=="Xs"){if(o.1Z){K zj()}F{K L}}if(x=="XK"){if(o.1Z){K o.1Z.4s()}F{K L}}if(x=="XS"){if(o.1Z){K o.1Z.Dc()}F{K L}}if(x=="XT"){if(o.1Z){o.1Z.XU()}F{K L}}if(x=="XW"){if(o.1Z){o.1Z.5k()}F{K L}}if(x=="6d"){if(R){v.6d=b8(v.6d,y,R);o.P.6d()}F{K v.6d}}if(x=="8N"){if(J(R)){v.8N=b8(v.8N,y,R)}F{if(J(y)){y==\'0/1\'?y=1-v.8N:\'\';v.8N=y}F{K v.8N}}}if(x=="5z"){if(J(R)){v.5z=b8(v.5z,y,R)}F{if(J(y)){v.5z=y}F{K v.5z}}}if(x=="ir"||x=="oc"){B z="dq";x=="oc"?z="oe":"";if(J(R)){v.W[z]=b8(v.W[z],y,R)}F{if(J(y)){y==\'0/1\'?y=1-v.W[z]:\'\';v.W[z]=y}}K v.W[z]}if(x=="hd"){if(o.2u.S==2){v.hd=o.2u[o.3m];v.hd=b8(v.hd,y,R);if(o.2u[0]==v.hd){o.U.5U(0)}F{o.U.5U(1)}}}if(x=="v"&&y){if(y.I(\'3w\')==0||y.I(\'bk\')==0){K}K v[y]}if(x.I("dY:")==0){B xx=x.1j(7);if(1J(y)==\'3M\'&&1J(v[xx])==\'3M\'){V(B yy in y){if(y.2n(yy)){v[xx][yy]=y[yy]}}}F{if(x.I(\'JB\')==-1){v[xx]=y}}K H}if(x.I("1B:")==0){o.Q.GA(x.1j(5),y)}if(v.IB==1&&x.I("1v")==0&&y){iQ(\'5d, 5d > *{--6T\'+x+\':\'+3E(y)+\'}\')}if(x=="Zd"){K o.P?o.P.bX():\'\'}if(x=="Ze"){K o.8w+\' \'+o.iX}if(x=="iX"){K o.iX}if(x=="sq"){K o.sq}if(x=="zL"){K o.zL}if(x=="5u"){K o.5u}if(x=="Zf"){K o.1Z?o.zT:1I}if(x=="9T"){o.U.md();v.1N.on=0;if(v.qC==1){V(B i=0;i<4X.S;i++){if(4X[i]){if(4X[i].3o("id")==v.id){4X[i]=1S}}}}V(B w in 1M){if(1M[w]==o.G){1M[w]=1S}}if(cW==v.id){cW=\'\'}o.vy=1;o.1E.1V=\'\';o.G=1S}}F{K L}};E zK(x,y){if(x&&y){3B(y,x)}}E b8(x,y,R){B z=4D(y)+\'\';if(y){if(y.I("/")>0){B y2=y.2q("/");if(y2.S==2){if(x==4D(y2[0])){z=4D(y2[1]);if(R){R.c4(1)}}F{z=4D(y2[0]);if(R){R.c4(0)}}}}}K z}E fC(x){B 4M=1u Cz();4M.7I(\'CA\',x,H);K 4M}E Az(y){B z=y.1j(3);if(o.1H){V(B j in o.1H){if(o.1H.2n(j)){if(o.1H[j].dX==z){z=j}}}}K z}E zj(){B x;if(o.1Z){if(o.1Z.e7()){x=o.1Z}}if(!x&&o.5H){x=o.5H}if(x){B y={is:o.3Q,1i:x.8L("Zg"),8w:x.8L("8w"),Zh:x.8L("Bq"),X:o.Bw+(x.8L("zp")?x.8L("Zi")+x.8L("zp"):\'\'),1D:x.8L("Zl"),1m:x.8L("cu"),3w:x.8L("3w"),17:(o.P?o.P.17():\'\'),1F:x.Zm(),id:o.zT};if(o.3Q=="6y"){y.Zy=o.ZE}K y}}E vu(){if(\'eF\'in 7Q){7Q.eF.8v=1u ZD({1L:yT(2B(o.cd,v.1L)),ZC:[{2Y:2B(v.2e,\'\')}]});if(!o.Ax){7Q.eF.ln(\'1y\',E(){3B("1y")});7Q.eF.ln(\'4s\',E(){3B("4s")});if(o.Q.f4()){7Q.eF.ln(\'ZB\',E(){3B("dM")});7Q.eF.ln(\'ZA\',E(){3B("6J")})}o.Ax=H}}}B 1X=E(x){B y=x;x==\'2c\'||x==\'tn\'?y=\'5d\':\'\';B z=1T.1X(y);if(x==\'tn\'){O(z,{"6H":"4A","2l":"4L"})}K z};B 1p=E(a,b,c,d,e,f,g){if(v.1p==1||v.vq==1){B x=a+(b!=1I?" "+b:"")+(c!=1I?" "+c:"")+(d!=1I?" "+d:"")+(e!=1I?" "+e:"")+(f!=1I?" "+f:"")+(g!=1I?" "+g:"");aM.1p("Ay"+(v.uz==1?"2":"")+": "+x);if(v.vq==1&&J(1T.8n("zX"))){1T.8n("zX").1V+=x+\'<br/>\'}}};B JP=E(){if(v.v6==1&&J(v.er)&&v.er!=\'\'){B x=1T.1X(\'fy\');x.A8=\'Zz\';v.er.I(\':\')>0&&v.er.I(\':lq\')==-1?v.er=v.er.1Q(/:/ig,\':lq@\'):\'\';x.9u=\'iG://v6.Zx.7U/Zq?eD=\'+v.er.1Q(/,/ig,"&eD=").1Q(/ /ig,"+");1T.Zv.1R(x)+\'&2l=Zu\'}};B JK=E(2c,6B){B x=["xT","eA","p4","i1","d6","Zt"];V(B y=0;y<x.S;y++){B z=2c.xW("2v "+x[y]);if(z.S>0){V(B y2=0;y2<z.S;y2++){z[y2].C.6i=6B}}}};B pE=E(){if(v.8H){if(v.8H.Zs==1){js("2t")}}};B 4p=E(17){17<0?17=0:\'\';B z5=o.P.1m>=gg?H:L;B ys=o.P.1m>=wS?H:L;B 6z=2D.8q(17/60);B 7S=2D.8q(17-6z*60);B 8h=2D.8q(6z/60);B jk=2D.8q(8h/24);6z=6z-8h*60;if(jk>0){8h=8h-jk*24}if(v.lG==1&&o.P.5q()){B d=1u 6M();K 6E(1u 6M(d.9m()+17*2h).z2())}F{K 6E((jk>0?jk+\':\':\'\')+(8h>0||ys?8h+\':\':\'\')+((8h>0||z5)&&6z<10?\'0\':\'\')+6z+\':\'+(7S<10?\'0\':\'\')+7S)}};B f0=E(x){B 7S=2D.8q(x);B 6z=2D.8q(7S/60);B 8h=2D.8q(6z/60);6z=2D.8q(6z%60);7S=2D.8q(7S%60);8h>0&&6z<10?6z="0"+6z:"";7S=7S>=0?((7S>=10)?7S:"0"+7S):"bF";B 5j=(8h>0?8h+":":"")+(6z>=0?6z:"0")+":"+7S;if(v.lG==1&&o.P.5q()){B d=1u 6M();K 6E(1u 6M(d.9m()+x*2h).z2())}F{K 5j}};B zi=E(){K zk((1M.8s!=1M.9P.8s)?1T.pJ:1T.8s.9u)};B wb=E(x){if(x){x=x.5Y();B w8=x.I(" <7r C=\'1A");if(w8>-1){x=x.1j(0,w8)}}K x};B sy=E(x,y,z){B t;if(!yS(x)&&y){t=1T.1X(\'mZ\');y=="YE"?y=x:\'\';t.2Y=y.I(\'//\')==-1?\'iG://\'+y:y;t.YF=1;if(z){t.6x=z}B s=1T.cT(\'mZ\')[0];s.4z.wd(t,s)}K t};B yT=E(x){if(x){if(1J(x)==\'4W\'){x=x.1Q(/<[^>]*>?/gm,\'\')}}K x};B yS=E(y){B x=L;B pB=1T.cT(\'mZ\');V(B i=0;i<pB.S;i++){if(pB[i].2Y.I(y)>-1){x=H}}K x};B 5R=E(x,y){if(x){if(x.I(\'1v\')>-1||x.I(\'B\')>-1){K 3E(x)}F{x=x.1Q(\'#\',\'\');B r=2J(x.S==3?x.6F(0,1).gj(2):x.6F(0,2),16);B g=2J(x.S==3?x.6F(1,2).gj(2):x.6F(2,4),16);B b=2J(x.S==3?x.6F(2,3).gj(2):x.6F(4,6),16);if(J(y)){K\'5p(\'+r+\', \'+g+\', \'+b+\', \'+y+\')\'}F{K\'yK(\'+r+\', \'+g+\', \'+b+\')\'}}}};B O=E(e,o){if(J(e)){V(B 18 in o){if(o.2n(18)){if(o[18]!=\'YG\'&&o[18]!=1I){if(1J o[18]==\'YH\'&&18!=\'3Z-ei\'&&18!=\'1A\'&&18!=\'51\'){o[18]+=\'px\'}if(18.I("YI")>-1&&18.I("HM")==-1){o[18]=3E(o[18])}if(18=="2T"||18.I("kB")>-1){e.C[\'-ms-\'+18]=o[18];e.C[\'-p8-\'+18]=o[18];e.C[\'-3N-\'+18]=o[18];e.C[\'-o-\'+18]=o[18]}if(18=="sa"){if(o[18].I(" ")>-1){o[18]=\'"\'+o[18]+\'"\'}}if(18=="5W-iR"){e.C.YJ(18,o[18],\'5O\')}F{e.C[18]=o[18]}}}}}};B pS=E(x,6B,b1,b2){6B=3E(6B);B y=2B(b1,1)*1;B z=2B(b2,1)*1;O(x,{"2w":"YK-3c-4H(-YL,"+6B+","+6B+" "+y+"px,5p(0,0,0,0),"+y+"px,5p(0,0,0,0) "+(y+z)+"px)"})};B 3E=E(c){if(c){c.I("1v")==0?c=\'B(--6T\'+c+\')\':\'\';K c.1j(0,1)!=\'#\'&&c.I("B")==-1&&c.I("yK")==-1?c="#"+c:c}F{K\'#fx\'}};B G5=E(x,1v,y){!1v?1v=\'#fx\':\'\';1v=3E(1v);B r=5F(oR,YM);x=x.1Q(/\\(zn\\)/g,r);x=x.1Q(/\\(1v\\)/g,1v);x=x.1Q(/\\(hr\\)/g,1+(v.YN.1K-1)/2);B zh=x.1j(0,x.I(\'|||\'));B wy=x.1j(x.I(\'|||\')+3);B aX=\'\';if(o.1i.3N){aX=wy.1Q(/5S:/g,"-3N-5S:");aX=aX.1Q(/5S-/g,"-3N-5S-");aX=aX.1Q(/@yH/g,"@-3N-yH");aX=aX.1Q(/2T/g,"-3N-2T")}y?y.1V=zh:\'\';iQ(aX+wy)};B 7n=E(x,y,f){B z=L;if(x){V(B i=0;i<x.S;i++){if(x[i]){if(f){if(3K(y)==3K(x[i])){z=i;1h}}F{if(6E(x[i]).I(y)>-1){z=H}}}}}K z};B h4=E(x,y){B z=L;if(x&&y){V(B i=0;i<y.S;i++){if(6E(x).I(y[i])>-1){z=H}}}K z};B iQ=E(x){if(o.O){if(o.O.Cy){o.O.Cy.YQ=x}F{o.O.1R(1T.yE(x))}}};B fX=E(x){O(x,{"1n":"2x","1c":0,"1b":0,"Y":"100%","1f":"100%"})};B fD=E(x){O(x,{"ah":"1Y"})};B 4M=E(y,z){B x=1u Cz();x.7I(\'CA\',y,H);x.cC=z;x.bD()};B YR=E(x){if(x){V(B i=0;i<5;i++){if(x.YU=="YW"){1h}F{if(x.CE){x=x.CE}}}}K x};B 8T=E(z){B 8T=1T.1X("41");if(o.lm.I(z)>-1){o.lm.2L(z);if(z.I("?")>0){z=z+\'&\'+2D.5F()}F{z=z+\'?\'+2D.5F()}}F{o.lm.2L(z)}8T.6m(\'2Y\',z);8T.6m(\'1f\',\'3U\');8T.6m(\'Y\',\'3U\')};B 42=E(e,o){V(B 18 in o){if(o.2n(18)){e.6m(18,o[18])}}};B 9T=E(e){if(e){3g{e.4z.3q(e);e=1S}2H(e){}}};B 5F=E(92,6h){K 2D.8q(YX.S>1?(6h-92+1)*2D.5F()+92:(92+1)*2D.5F())};B oF=E(){K 2D.5F().5Y(36).Z1(2,12)};B wa=E(x,y){x=7D.6a(x).Z2(E(4q,18){if(18!=y){4q[18]=x[18]}K 4q},{});K x};B 4D=E(x){if(1J x=="4W"){K x.1Q(/^\\s+|\\s+$/gm,\'\')}F{K x}};B 5X=E(x,y,z){B r=L;if(x){if(x.I(y)>-1){B r=x.1j(x.I(y)+y.S);if(z){if(r.I(z)>-1){r=r.1j(0,r.I(z))}}}}K r};B Z3=E(x,n){if(n==0){K"#0"+c7.e(x)}if(n==-1){K c7.e(x)}if(n==1){K"#1"+wL(c7.e(x),1)}};B qA=E(x){if(v[x]!=""){if(1J v[x]!="4W"){o[x+\'o\']=v[x]}F{if(v[x].I("[{")==0){3g{v[x]=v[x].1Q(/6T\'qt/ig,\'"\');o[x+\'o\']=2g(v[x])}2H(e){}}}}};B 5K=E(x){K 6E.w5(x)};B d9=E(x){if(x.1j(0,2)=="#1"){K c7.d(wL(x.1j(2),-1))}F if(x.1j(0,2)=="#0"){K c7.d(x.1j(2))}F{K x}};B w6=E(x){if(x){if(x.I(\'3L\')==-1&&x.I(\'.\')==-1&&x.S>100&&x.I(\'28:\')==-1){x=\'28:ac/tE;kC,\'+x}}K x};B 1k=E(x){x?x.C.5u="3h":\'\'};B 1o=E(x){x?x.C.5u="4j":\'\'};B 3n=E(x){x?x.C.2l="1Y":\'\'};B 6N=E(x){x?x.C.2l="4L":\'\'};B 5N=E(x){K x?x.C.5u!="3h"&&x.C.2l!="1Y":L};B 5e=E(s){if(1J s=="4W"){if(s.I("px")>0){s=s.1j(0,s.I("px"))}}K 2J(s)};B 3h=E(x){K x.C.2l=="1Y"};B 4b=E(o,x,y){o[x+\'1c\']=0;o[x+\'2m\']=0;o[x+\'2K\']=0;o[x+\'1b\']=0;if(J(o[y])){B z=o[y].2q(" ");if(z.S==4){o[x+\'1c\']=z[0]?3K(z[0]):0;o[x+\'2m\']=z[1]?3K(z[1]):0;o[x+\'2K\']=z[2]?3K(z[2]):0;o[x+\'1b\']=z[3]?3K(z[3]):0}}K o};B Z4=E(x){if(x){x=x.1Q(/ /ig,\'px \')}K x+\'px\'};B lF=E(x,y){K v[x]&&v[x]!=\'\'?v[x]:y};B gC=6E.w5(65,66,67,68,69,70,71,72,73,74,75,76,77,97,98,99,100,101,102,103,104,105,106,107,108,109,78,79,80,81,82,83,84,85,86,87,88,89,90,110,111,112,113,114,115,116,117,118,119,qB,Z0,YZ);B c7={aU:gC+"YY+/=",e:E(e){B t="";B n,r,i,s,o,u,a;B f=0;e=c7.Cm(e);m0(f<e.S){n=e.ar(f++);r=e.ar(f++);i=e.ar(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(uM(r)){u=a=64}F if(uM(i)){a=64}t=t+G.aU.6t(s)+G.aU.6t(o)+G.aU.6t(u)+G.aU.6t(a)}K t},d:E(e){B t="";B n,r,i;B s,o,u,a;B f=0;e=e.1Q(/[^A-Za-z0-9\\+\\/\\=]/g,"");m0(f<e.S){s=G.aU.I(e.6t(f++));o=G.aU.I(e.6t(f++));u=G.aU.I(e.6t(f++));a=G.aU.I(e.6t(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+5K(n);if(u!=64){t=t+5K(r)}if(a!=64){t=t+5K(i)}}t=c7.Co(t);K t},Cm:E(e){e=e.1Q(/\\r\\n/g,"\\n");B t="";V(B n=0;n<e.S;n++){B r=e.ar(n);if(r<jb){t+=5K(r)}F if(r>YV&&r<YS){t+=5K(r>>6|YO);t+=5K(r&63|jb)}F{t+=5K(r>>12|CS);t+=5K(r>>6&63|jb);t+=5K(r&63|jb)}}K t},Co:E(e){B t="";B n=0;B r=0;B c1=0;B c2=0;m0(n<e.S){r=e.ar(n);if(r<jb){t+=5K(r);n++}F if(r>Yz&&r<CS){c2=e.ar(n+1);t+=5K((r&31)<<6|c2&63);n+=2}F{c2=e.ar(n+1);c3=e.ar(n+2);t+=5K((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}K t}};B wL=E(s,n){s=s.1Q(/\\+/g,"#");s=s.1Q(/#/g,"+");B a=Dk(o.y)*n;if(n<0)a+=gC.S/2;B r=gC.1j(a*2)+gC.1j(0,a*2);K s.1Q(/[A-Za-z]/g,E(c){K r.6t(gC.I(c))})};B Dk=E(x){x=x.2q(5K(61));B ja=\'\';B c1=5K(qB);B wD;V(B i in x){if(x.2n(i)){B wE=\'\';V(B j in x[i]){if(x[i].2n(j)){wE+=(x[i][j]==c1)?5K(49):5K(48)}}wD=2J(wE,2);ja+=5K(wD.5Y(10))}}K ja.1j(0,ja.S-1)};B J=E(x){K x!=1S&&1J(x)!=\'1I\'&&x!=\'1I\'};B 2B=E(x,y){K J(x)?x:y};B 2E=E(x){K J(x)&&x!=-1&&x!=\'\'};B vX=E(x,y){K 2E(x)?x:y};B lS=E(x){if(1J x=="3M"){x=59.6K(59.w0(x))}K x};B gh=E(el){B x=el.Dy().1b+(1M.Dt?1M.Dt:1M.YD);K x};B f5=E(x){v.YC==1&&2E(v.Dv)?x=v.Dv:\'\';K x};B iY=E(el){YB i1=el.Dy();K i1.1c+1M.YA};B 7e=E(x,y){if(x!=\'\'){if(v.Z5==1||y==\'Z6\'){1M.7I(x)}F{if(v.Zp==1||y==\'1c\'){1M.9P.8s.9u=x}F{1M.8s.9u=x}}x=\'\'}};B sD=E(){if(v.4P==1){o.4P?o.1O.3q(o.4P):\'\';o.4P=1S}};B Cx=E(){B kM=L;o.1i.tv?1p("tv"):\'\';o.1i.2f?1p("2f"):\'\';G.ag=E(x){o.Q?o.Q.1L(x):\'\'};G.6u=E(x){if(x){if(1J(x)==\'4W\'){x=x.1Q(/(\\r\\n|\\n|\\r)/gm,"");if(x.I("[{")==0){3g{x=x.1Q(/6T\'qt/ig,\'"\');x=59.6K(x)}2H(e){x="Cv 59"}}}if(1J(x)==\'3M\'){o.1H=[];o.jt=lS(x);o.W=q9(x);if(o.W.S>0){if(v.W.Zr==1&&!v.4t){B 6a=7D.6a(o.1H);B vo=6a.6F(-1)[0];vo?v.4t=vo:\'\'}B y=CX();if(y){x=y.3w;o.cd=y.1L;o.Q?o.Q.DG(y.1L):\'\';if(J(y.2e)){if(o.P){o.P.9S(y.2e)}F{v.2e=y.2e}}if(J(y.2o)){y.1W=y.2o}if(J(y.1t)){if(y.1t=="3p"&&!o.1t){}F{v.1t=o.29=y.1t}}7H("DB");if(J(y.id)){o.3j=y.id}B sx=["1W","lZ","vl","X","j9","Du","iC","lY","et","7E","6Q","8l","6f","43","4g","D5","c9","7a","9n","1F"];if(J(v.bs)){if(v.bs.Zw==1&&v.bs.o2==1){sx.2L("1L");sx.2L("t1");sx.2L("t2");sx.2L("t3");sx.2L("t4");sx.2L("t5")}}V(B i=0;i<sx.S;i++){if(J(y[sx[i]])){v[sx[i]]=y[sx[i]]}}jh(y);if(sx.I(\'1L\')>0){if(v.bs.Bh==1){o.o6=v.bs.Bi;o.U.pe(y)}o.U.ag(\'1L\')}if(J(y.1F)){1z(E(){o.U.3R(y.1F)},4B)}if(o.Q){o.Q.6e(o.W);if(v.9n){o.Q.xk()}}if(o.2X){o.2X.mq()}}F{}}}if(1J(x)==\'4W\'){x=tF(x);if(x){if(x.I("#"+v.9C)==0){x=o[o.fd[0]](x)}if(x){if(x.I("#"+v.bY)==0&&x.I(v.dD)>0){x=o[o.fd[1]](x)}if(x){if(x.I("#0")==0){x=bR(x)}x=tF(x)}F{x=\'\'}}}if(v.bt==1){x=bt(x)}if(x==\'\'){1p("4I 3w");o.aw=H;js("2j","4I")}o.2u=[];o.9V=[];o.6X=[];o.lV=0;o.3m=0;o.7l=0;o.af=0;v.j8==\'\'?v.j8=\',\':\'\';if((x.I(v.j7)>-1&&x.I(v.ej)>-1)||J(v.bq)){o.3X=x.2q(v.j8)}F{o.3X=[x]}o.aB=[];if(J(v.bq)){B bq=v.bq.2q(v.j8)}if(o.3X.S>0){B q=-1;V(B i=0;i<o.3X.S;i++){o.3X[i]=4D(o.3X[i]);if(o.3X[i]!=\'\'){if(o.3X[i].I(v.j7)==0&&o.3X[i].I(v.ej)>1){o.2u[i]=o.3X[i].1j(o.3X[i].I(v.j7)+v.j7.S,o.3X[i].I(v.ej)-v.ej.S);o.3X[i]=o.3X[i].1j(o.3X[i].I(v.ej)+v.ej.S)}F{if(J(v.bq)){o.2u[i]=J(bq[i])?bq[i]:\'\'}F{o.2u[i]=i+1}}B is=0;if(J(v.4J)&&q==-1){if(6E(v.4J).I("la:")==0){if(v.4J.1j(4)*1==i){is=1}}if(v.4J==o.2u[i]){is=1}if(v.4J=="6h"&&i==o.3X.S-1){is=1}}if(J(o.4J)){if(o.4J==o.2u[i]){is=1;q=i}}if(is==1){o.lV=i;o.3m=i}o.3X[i]=ve(o.3X[i])}}}F{o.3X[0]=ve(o.3X[0])}K o.3X[o.lV]}}F{K x}};E ve(x){if(J(v.nD)&&x.I("//")==-1){x=v.nD+x}K x};G.CY=E(){if(o.W){B x=o.W.CZ();V(B i=0;i<x.S;i++){x[i].bv=i}o.W=x;o.Q.6e(o.W)}};E jh(y){B va;V(B i=1;i<6;i++){B t="1B"+i;if(J(y[t])){v[t]=y[t];va=H}}if(va&&o.Q){o.Q.Gz()}}G.jh=E(x){jh(x)};G.6e=E(x){if(1J(x)==\'3M\'){o.1H=[];o.jt=lS(x);o.W=q9(x);if(o.Q){o.Q.6e(o.W)}}};G.e5=E(x,y,z,no){!J(y)?o.3b=H:\'\';!J(z)?v.4v=0:\'\';v.1m=1I;v.43=1I;!2M.4g?v.4g=1I:\'\';o.aw!=2?o.aw=L:\'\';o.8v=L;o.8J=L;o.aj=0;o.jQ=[];o.ut=L;o.tz=L;o.Ht=L;o.9F=1I;o.lJ=[L,L,L];o.Zo=oF();o.CC=0;o.dh=0;o.an?o.an=[]:\'\';o.2i!=\'6T\'&&o.3v?o.3v.6f():\'\';o.D3?o.D3=[]:\'\';if(o.di){o.di.6f()}if(o.P.6P()=="7u"){G.aF()}if(o.5X&&o.9x){o.Q.k5()}if(J(o.2Z)){o.2Z.4c()}if(J(o.cl)){2G(o.cl)}js("1u");if(v.1Z==1&&no!=1){o.U.fW();o.U.fW(\'6y\')}x=G.6u(x);if(y==1){o.2i=\'\'}o.P.6u(x);if((o.1i.2f||o.1i.7s)&&!J(y)){o.U.2A()}if(J(o.jr)){o.3D={x:1,y:1,x0:1,y0:1};o.P.iI()}aT("1y","2A");o.P.iv();o.Q.h0();o.Q.kT();o.Q.4w();o.gp?o.gp.Dg():\'\'};G.pe=E(x){B y=L;if(x&&o.o6){v.1L=o.o6;V(B i=1;i<6;i++){if(J(x[\'t\'+i])){v.1L=v.1L.1Q("{"+i+"}",x[\'t\'+i]);y=H}}}K y};G.cX=E(){if(v.3b==1&&!v.CU||o.3b){if(v.ji==1){1z(E(){o.U.2A()},3V)}F{G.2A()}v.CU=1;o.3b=L}jG()};G.jG=E(){jG()};E jG(){if(v.vY==1){if(1J D6!=="1I"){o.th=1u D6()}}}G.iv=E(){B x=L;if(o.1i.2f){x=H;if(v.yu==1&&o.1i.7t){x=L}if(v.yt==1&&o.1i.io){x=L}if(v.yv==1&&o.1i.5a){x=L}if(v.Z8==1&&o.1i.as){x=L}}if(v.Zn==1&&o.1i.tv){x=H}K x};G.uy=E(){o.P.3R(v.1F);if(o.3y){o.P.56()}o.8v=H;o.Q?o.Q.4w():\'\';if(!o.1y&&!o.1t){v.5B==1?o.5B.3o("4s"):\'\'}if(o.4Z&&o.4u){o.4a.D7();o.4a.Go()}if(v.1Z==1){if(v.Bg!=1&&v.jx==1){!J(o.1Z)?kQ("6y","8v"):\'\'}}};G.CG=E(){!o.hw?9W(H):\'\'};E 9W(x){o.hw=H;if(o.Q){if(o.Q.cN()){o.Q.7x()}}if(o.2X){o.2X.ao()}if(o.bI){o.bI.ao()}!x?o.P.2A():\'\';if(!o.ut){1z(E(){o.P.iv()},3V)}!o.1y?o.Q.2A():\'\';v.5B==1?o.5B.3o("1y"):\'\';v.1Z==1?o.U.fW(\'dL\'):\'\';if(o.1i.2f){o.Q.gA()}if(J(o.2Z)){o.2Z.Zk()?o.2Z.D8():\'\'}if(v.Zj==1&&J(v.iC)&&o.dt){if(v.iC!=\'\'&&!J(o.jM)){o.jM=6R(tx,v.Da*2h);tx()}}}G.2A=E(bb){if(!o.1y&&o.P){o.gx=H;o.nv=L;o.7h=L;2G(o.DC);B 2F=L;if(o.2i=="4x"){if(!o.P.nX()&&v.3b!=1&&v.4v==1){2F=H;if(1M[\'YT\']){v.3b=1;o.3b=H;o.P.uD()}}}if(v.8a==1&&v.Bj==0){o.U.pC();2F=H}if(o.aw||2F){if(o.aw){8F("6W")?pq(2):\'\'}}F{o.mU=L;Dd(!o.1t);o.a6.lQ();if(!o.1t){js("1t");o.1t=H;if(v.1r.xN==1){1z(E(){o.Q.xp()},100)}if(v.1r.9t>0&&v.3b==1){o.gk=H;1z(vT,v.1r.9t*2h)}if(v.Zc==1&&v.Zb){Z9()}V(B i=0;i<o.ce.S;i++){if(v[\'C9\'+o.ce[i]]==1){2W.7A("Cd"+o.ce[i],6M.j3())}}if(v.Z7==1&&v.Yx){Y0("1t")}if(o.3v){o.3v.1t()}js("1u");o.hV?o.Q.y6(o.hV):\'\';o.Q.wn();o.Q.4w();aT("1y","2A");o.1i.2f?vu():\'\';o.ab?aT("Db","Yw",1):\'\'}F{aT("Dc","XV")}if(v.CT==1&&!o.22){B dd=1u 6M();B tt=dd.9m();if(tt-o.9y<dz){if(!o.1i.5a&&(v.C6!=1||o.1i.2f)){G.8M()}}}if(o.4T){if(v.vS==1){6N(o.1W)}}if(o.di){o.di.6f()}if(bb!=1&&8F("6W")||8F("6C")){pq(2)}F{if(v.7e==1&&J(v.Bm)&&!J(2M.7e)){7e(v.Bm);2F=H}if(!2F){1p("2A");o.P.1m()>0?o.Q.3H(o.P.17(),o.P.1m()):\'\';if(!o.vW){o.vW=H;if(v.1r.9t>0&&v.3b==1){o.gk=H;1z(vT,v.1r.9t*2h)}}B lP=L;if(o.P.17()>1&&v.nA==1&&bb!=1&&!8D()&&!J(o.1Z)&&!J(o.5H)){lP=8F("dL")}if(lP){8D()?9W(L):\'\'}F{9W(L)}}}}}F{o.P?o.P.2A():\'\'}};E vT(){o.gk=L;o.Q.4w()}G.3e=E(){if(o.1y){o.gx=L;1p("3e");o.P.3e();o.Q.3e();js("4s");v.qp==1?8r():\'\';v.rX==1?np():\'\';v.5B==1?o.5B.3o("4s"):\'\';if(o.4T){if(v.vS==1){3n(o.1W)}}if(!J(o.1Z)&&!J(o.5H)&&v.nA==0){8F("dL")}if(8D()){o.nv=H}o.hw=L}};G.56=E(){o.P.56();o.Q.56();o.3y=H;js("5k")};G.6c=E(){o.P.6c();o.3y=L;o.Q.6c();o.P.3R(v.1F);js("bf")};G.3R=E(x,y){if(o.Q){x<0.XR?x=0:\'\';x>1?x=1:\'\';if(x<=0){G.56();v.1F=0;x=0}F{if(o.3y){G.6c()}v.1F=x}js("1F",x);o.Q.3R(x,y);o.P.3R(x)}};G.8K=E(){o.Q.8K()};G.7J=E(){o.Q?o.Q.7J():\'\'};G.XQ=E(){G.7J()};G.um=E(){o.U.6A();G.7J()};G.3H=E(17,1m){if(o.3p&&!o.1t){B f=o.3p.a1();if(f.t&&f.d){17=f.t}}o.Q?o.Q.3H(17,1m):\'\'};G.ux=E(17,1m){if(o.29>0&&o.2i!="4x"&&!o.P.5q()){o.U.3P(o.29,L);o.29=1I}};G.fw=E(){B d=1u 6M();o.9y=d.9m();B x=L;if(o.Q.cN()&&v.1g.7M!=1){o.Q.bp();x=H}if(o.2X){if(o.2X.Hf()){o.2X.ao();x=H}}if(v.W.7M==0){if(o.Q.h5()&&v.W.gt==1){o.Q.cP();x=H}}if(v.7e==1&&J(v.B3)&&!J(2M.7e)){7e(v.B3);x=H}if(o.3y&&v.pu==1){o.U.6c();v.pu=0;x=H}if(!x){if(v.1N.on==1&&v.1N.2O==1&&v.1N.q7==1){7i(\'1y\',(o.1y?0:1))}G.ea()}};G.E6=E(){if(o.Q.cN()){o.Q.7x()}};G.ea=E(){if(o.P.6P()=="7u"){js("Ed");v.XP==1?G.md():G.3e()}F{js("Eg");G.2A()}9X()};G.3P=E(cB,hk){if(cB<o.P.1m()){if(v.fc.XO==1){if(cB>o.P.17()){K}}if(v.4g>0){cB<v.4g?cB=v.4g:\'\'}1p("3P");o.B6=cB;o.P.3P(cB);if(hk){o.Q.3P(cB,o.P.1m())}o.jV=H;o.g4=o.P.17();9X(o.g4)}};G.Dq=E(X,4k,B7){if(o.P.6P()=="7u"&&o.ki!=\'IC\'){3e();if(o.22&&B7){o.U.8B()}}1M.7I(X,4k)};G.h8=E(){if(v.1Z==1&&!o.1t){if(8F("6W")){o.rn=H;K}}B x=o.P.bX();if(J(v.6Q)){x=v.6Q}if(x!=\'\'){js("6Q");B hQ=1M.7I(x,(v.XN==1?\'XM\':\'vK\'));hQ.5V()}};G.6A=E(x){B 17=o.P.17();B 1m=o.P.1m();if(!o.1t&&o.29>0){17=o.29}o.Q.dy(17,1m,x)};G.rZ=E(){B 17=o.P.17();B 1m=o.P.1m();B aJ=1m>0?17/1m:0;if(!o.jV){o.Q?o.Q.dy((o.29>0?o.29:17),1m):\'\'}F{17!=o.g4&&o.g4!=-9?o.jV=L:\'\'}if((v.ga==1||v.AZ==1)&&1m>0){lH("vJ","2A 25%",aJ,0.25);lH("vI","2A 50%",aJ,0.50);lH("vG","2A 75%",aJ,0.75)}V(B i=0;i<3;i++){if(!o.lJ[i]){if(aJ>=i*0.25+0.25){AM(i)}}}v.vD==1?1p(1,17,1m):\'\';if(v.8d==1||v.vz>0){if(o.1y){B z=L;B lK=L;if(v.Bc==1&&v.8d==1){if(!o.P.5q()){z=H}}if(17>0){if(17==o.17&&!z){lK=H}F{o.aj=0}o.17=17}F{if(v.XL==1){B ld=o.P.a4();v.vD==1?1p(2,ld,o.lL):\'\';if(!z){if(ld==o.lL){lK=H}F{o.aj=0}}o.lL=ld}}if(lK){o.aj++;if(v.8d==1){v.vD==1?1p(3,o.aj):\'\';if(o.aj==v.uW*(2h/o.mD)){o.U.g2()}}F if(v.vz>0&&o.P.sC()>1){if(o.aj==v.vz*(2h/o.mD)){o.P.5G(\'OR xE\')}}}}}if(v.8H){if(v.8H.an==1&&1m>0){!o.an?o.an=[]:\'\';o.an[2D.4i(17)]=1}}if(v.1Z==1){if(v.Bg!=1&&v.jx==1){!J(o.1Z)?kQ("6y",17,1m):\'\'}if(v.XJ!=1&&v.pP==1){!J(o.1Z)?kQ("f9",17,1m):\'\'}}if(v.AC==1&&v.xR>0){if(17>=v.xR){if(!J(o.1Z)){if(8F("6C")){o.P.3e();o.Q.3e()}v.xR=0}}}7H("1y");if(v.8a==1&&v.Bj>-1){XH(17,1m)}if(o.4T){9X(17)}if(o.5m&&v.c8==1){if(o.3p){!o.29?o.3p.ny(17,1m):\'\'}}if(o.9x){o.5X?o.5X.1y(17):\'\'}if(J(v.43)){B ed=v.43;if(7n([v.43],\'-\')){ed=1m}if(ed>0&&17>ed){if(o.2i=="4x"){o.P.3e();o.P.3P(v.1t>0?v.1t:0)}F{o.P.mu();o.U.aF()}v.1t>0?o.29=v.1t:\'\';o.U.o1()}}if(J(v.6f)){B r1=v.6f.2q(",");V(B i=0;i<r1.S;i++){B r2=r1[i].2q("-");if(r2.S==2){if(17>r2[0]&&17<r2[1]){o.P.3P(r2[1]*1+(o.1i.7s?1:0))}}}}if(v.XF==1){if(1J Ba!=="1I"){Ba(17,aJ)}}};E AM(x){o.lJ[x]=H;if(v.c8==1&&v.7K==1&&v.AW==x){if(o.5m&&o.3j){o.3p?o.3p.AD(o.3j):\'\'}}}E lH(x,y,t,p){if(!J(o.jQ[y])){if(t>p){aT(x,y,1)}}};G.g2=E(){o.aj=0;J(o.cl)?2G(o.cl):\'\';if(v.XE==1){js("8d")}F{o.29>0||o.P.5q()?\'\':o.29=o.P.17()+(v.XD>0?1:0);B AI=o.Q.h5();js("8d");o.P.8d();AI&&v.W.gt==1?o.Q.hi():\'\'}};G.Bo=E(){o.Q.dy(0,0);o.Q.vm(0,0);o.U.3H(0,0);o.Q.7J()};G.vR=E(){if(o.P){B 17=o.P.a4();if(v.XC==1){js("a4",17)}B 1m=o.P.1m();o.Q?o.Q.vm(17,1m):\'\'}};G.o1=E(){js("XB");o.7h=H;if(v.8N==1){if(o.2i=="4x"){G.aF()}v.1Z==1?o.U.fW(\'6W\'):\'\';if(v.1t>0){o.U.3P(v.1t)}G.2A()}F{if(o.P.5q()||o.2i=="4x"){G.aF()}F{if(v.AK==1){o.U.3P((v.1t>0?v.1t:0),H);if(o.1i.ie){o.P.3e()}}}o.Q.7W();v.AC==1?v.Xz=1:\'\';if(8F("mb")||8F("q5")){}F{al()}}};G.8M=E(){B 2F=L;B 2j=L;o.AR=L;o.aC=H;1z(E(){o.aC=L},jR);V(B x in o.6Z){if(o.6Z.2n(x)){if(J(o.6Z[x])){3g{o.6Z[x].AN()}2H(e){}}}}3g{o.cU=H;if(((o.1i.5a&&v.fo==1)||(o.1i.as&&v.C0==1))&&o.4u&&!o.9I){B x=o.P.ak();if(x){if(x.Xy){gr();2F=H}}}if(!2F){B kF;B y=o.1O;if((o.2i=="dm"||o.2i=="bc")&&o.1i.7t&&v.fo==1){o.P.kv();K}if(y.xs){o.7Z=H;kF=y.xs({kH:"1k"});if(kF!==1I){kF.bP(E(){}).2H(E(2j){})}}F if(y.xK){y.xK({kH:"1k"});o.7Z=H}F if(o.1O.xc){y.xc({kH:"1k"});o.7Z=H}F if(y.xi){y.xi({kH:"1k"});o.7Z=H}F if(y.xm){y.xm();o.7Z=H}}}2H(e){2j=H;1p(e)}if(!o.7Z&&!2F){if(o.1i.3N&&o.op){gr()}F{G.wo()}}if(!2j){1z(AQ,4B)}};E gr(){B x=o.P.ak();if(x){o.jN=H;o.P.At();x.Xx();x.1w("Xt",Bk)}}E l8(){B x=o.P.ak();if(x){x.XX()}};G.gr=E(){gr()};G.l8=E(){l8()};E AQ(){if(o.AR!=H){if(o.8Q){o.P.d7()}if(v.1N.y7==1){kN(H);o.5g=H}v.5B==1?o.5B.3o("kK"):\'\';js("22");aT("kK","8M",1)}};B ca;B 8y={x:0,y:0};E xZ(e){if(o.2X){if(o.2X.XI()){K}}if(e.XZ!=0){e.xz!=0?8y.x++:8y.x--;e.bQ!=0?8y.y++:8y.y--;if((v.1N.AV==1||v.1N.AT==1)&&o.22&&8y.y>8y.x){3G(ca);ca=6R(E(){8y={x:0,y:0};3G(ca)},2h)}F{o.9p=H;3G(ca);ca=6R(E(){o.9p=L;o.Q.4N();8y={x:0,y:0};3G(ca)},47);o.Q.4N()}if(8y.x>8y.y){if(e.xz>0){o.U.3R(3K(v.1F)-v.1N.jO/10,"no")}F{o.U.3R(3K(v.1F)+v.1N.jO/10,"no")}}F{B st=(o.1i.hQ?-v.1N.jO/10:v.1N.jO/10);if(v.1N.AT==1&&o.22){o.P.1K((e.bQ>0?st:-st))}F if(v.1N.AV==1&&o.22){3B("3S",(e.bQ>0?"+"+st*10:"-"+st*10))}F{o.U.3R(3K(v.1F)+(e.bQ>0?st:-st),"no");o.Q.he()}}}}E Bk(){if(o.1i.5a){o.P.Ao();js("xQ")}o.jN=L}G.wo=E(){if(o.cU){o.22=H;o.Q.8M();if(!o.7Z){if(J(o.8e)){3g{O(o.8e,{\'Y\':\'100%\',\'1f\':\'100%\',\'1n\':\'qh\',\'1b\':0,\'1c\':0,\'51\':"oR"})}2H(dV){}}O(o.1O,{\'Y\':\'100%\',\'1f\':\'100%\',\'1n\':\'qh\',\'1b\':0,\'1c\':0,\'51\':"oR"});o.2U=o.1O.2b;o.4Q=o.1O.2V;3g{1T.aH.C.6s=\'3h\';if(!J(o.W)){1T.xn=E(e){e.aa()}}}2H(dV){}}if(v.yl==1){O(o.1O,{\'7N\':\'#3W\'})}if(v.9z==1&&o.1i.3N==1&&!o.1i.ff){B sw=1M.bx.Y;B fz=1;V(B i=1;i<6;i++){if(sw>2h*i){fz=2B(v[\'9z\'+(2h*i)],i)}}if(fz>1){o.1O.C.BZ=fz;o.9z=fz;aY()}}if(o.2X){o.2X.ao()}9X();o.cU=L}};G.8B=E(){kM=H;if(1T.BJ){1T.BJ()}F if(1T.BL){1T.BL()}F if(1T.BO){1T.BO()}F if(1T.BP){1T.BP()}F if(1T.BR){1T.BR()}F if(1T.BS){1T.BS()}if(!o.7Z){G.wg(L)}};G.Jh=E(x,y){qG(x,y)};E qG(x,BT){if(J(o.1Z)&&!BT){o.nu=x}F{B 2F=L;B ee=o.8X/x;B de=0;B kO={\'1f\':ee};if(v.Yu==1){if(ee>o.8R){ee=o.8R;de=o.8X/x;o.8X=kO[\'Y\']=de}}if(J(o.8e)&&v.JU!=1){3g{O(o.8e,kO)}2H(dV){2F=H;1p("e8 Yr Yq")}}if(!2F){o.4R=x;o.8R=ee;if(o.4R>0){O(o.1E,kO)}if(de>0){js("Y",de)}js("1f",ee)}if(o.1Z&&!o.22){o.4Q=ee;if(de>0){o.2U=de}o.1Z.2z()}}};G.wg=E(x){if(kM||x){o.22=L;o.jN=L;if(!o.7Z){if(J(o.8e)){3g{O(o.8e,{\'1n\':\'o4\',\'1b\':0,\'1c\':0,\'51\':\'BX\'});O(o.8e,o.JW);O(o.8e,{\'Y\':o.aD,\'1f\':o.bm})}2H(dV){}}O(o.1O,{\'Y\':o.aD,\'1f\':o.bm,\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'51\':\'BX\'});3g{1T.aH.C.6s=\'2y\';1T.xn=E(e){K H}}2H(dV){}}o.Q.8B();if(v.yl==1){O(o.1O,{\'7N\':v.pk});if(v.e9==1){o.1O.C.7N=\'e9\'}F{O(o.1O,{\'7N\':v.pk})}}if(o.9z>1){o.1O.C.BZ=1;o.9z=1;aY()}if(v.1N.y7==1){kN(L);o.5g=L}if(o.2X){o.2X.ao()}9X();o.kE?o.kE=L:\'\';o.Q.nm();kM=L;js("xQ");o.7Z=L;o.aC=L}};G.5g=E(x){v.1N.Yo!=0?kN(x):\'\'};E kN(x){8y={x:0,y:0};if(x){1M.1w("xC",xZ)}F{3G(ca);1M.6L("xC",xZ)}}G.aF=E(x){v.4v=0;if(x!=1){o.Q.3e();o.U.Bo()}F{}o.P.3R(v.1F);if(o.Q.cN()){o.Q.7x()}if(o.3y){G.56()}if(J(o.jM)){3G(o.jM);o.jM=1S}9X(0);1p("2F");js("2F")};G.md=E(){v.4v=0;v.3b=0;o.P.mu();o.U.aF()};G.5U=E(x){if(J(o.3m)){if(o.3m!=x){o.3m=x;if(v.uO==1){o.4J=o.2u[x];if(o.5m){2W.7A("uN",o.4J)}}o.P.5U(x);js("5c",o.2u[x]);o.Q.x6(x)}}};G.gV=E(){o.Q?o.Q.gV():\'\'};G.e0=E(x){if(J(o.7l)){if(o.7l!=x){o.7l=x;if(v.Ct==1){o.aQ=v.aQ=o.6X[x];if(o.5m){2W.7A("uI",o.aQ)}}o.P.e0(x);js("7y",x);o.Q.lR("7y")}}};G.9s=E(x,z){x==\'0.0\'?x=0.1:\'\';B y=x;6E(y).I(\'.\')>0?z=1:\'\';y=y*1;if(!z){y=x==o.dS?1:o.5L[x];o.9v=x}y=3K(y);if(o.jv||z){o.h6=y;V(B i=0;i<o.5L.S;i++){if(y<=o.5L[i]*1){o.9v=i;1h}}}if(o.5m&&v.AE==1){2W.7A("AF",y)}js("54",y);o.P.9s(y);o.Q.lR("54")};E 9X(x){o.3v?o.3v.1o(J(x)?x:o.P.17()):\'\'};G.jL=E(){if(o.3v){9X();o.3v.C()}};G.fe=E(x){if(1J(jK)==\'E\'){!o.3v?o.3v=1u jK():\'\';o.3v.vL(x)}};B 6Y;B 9f;B n9;B 2k;E 8F(x){if(v["6g"+x+"Bv"]>0&&o.5m){B tb=2W.46("os"+x+"4o"+o.d);if(tb){B ct=1u 6M();o.9y=ct.9m();B Bt=(ct.9m()-tb)/Ym;if(Bt<v["6g"+x+"Bv"]){K L}}}if(v["6g"+x+"Bn"]>0){if(o.P.1m()>0){if(o.P.1m()<v["6g"+x+"Bn"]*60){if(v["6g"+x+"By"]>0){v["6g"+x+"4o"+"C3"]=v["6g"+x+"By"]}F{K L}}}}if(o.iW.I("8m")!=-1&&v.1Z==1&&!o.bb&&v[x+\'s\']==1){if(1J pR=="1I"){K L}if(x=="6C"||x=="q5"){if(1J BC!=="1I"){2k=[];K BC(x)}}if(J(o.1Z)||J(o.5H)){if(!5N(o.qs)||8D(o.3Q)){1p(\'ad bg\');K L}F{1p(\'ad j3\');K H}}F{if(J(v[x])){if(v[x].5Y().I(".")>-1||v[x].5Y().I(":")>-1||v[x].5Y().I("[Yk]")>-1){js("Yj",x);if(!8D(x)&&x!="f9"){1z(E(){o.1y||(o.5H==1S&&o.1Z==1S)?\'\':o.U.8K()},10);eJ()}6Y=0;9f=0;n9=x;2k=v[x].2q(" gi ");o.5J=[];o.rL=2k.S;kY();o.AL=1;o.l4=H;V(B i=0;i<2k.S;i++){2k[i]=2k[i].2q(" or ")}v[x.a2("4o","j5")]=v[x];v[x]=1S;o.3Q=x;if(x!=\'f9\'){o.1Z=1u pR()}o.5H=1u kV();V(B i=0;i<2k.S;i++){V(B j=0;j<2k[i].S;j++){B 7v=4D(2k[i][j]);if(7v.I("[50%]")>0){B 1G=5F(1,2);2k[i][j]=2k[i][j].1Q("[50%]","");if(1G==2){2k[i][j]=\'\'}}}}if(v.ra==1){V(B i=0;i<2k.S;i++){B n=i==0?1:0;if(2k[i].S>n){V(B j=n;j<2k[i].S;j++){B 7v=4D(2k[i][j]);if(o.1i.v0){g9(7v)}F{1z(g9,i*100,7v)}}}}}if(2k[0][0]==\'\'){jF()}F{o.5H.kU(4D(2k[0][0]),x)}K H}F{K L}}F{K L}}}F{K L}};G.uZ=E(x){8F(x)};E kQ(w,x,d){if(J(o[w+\'o\'])&&v[w+\'s\']==1){B y;V(B i in o[w+\'o\']){if(o[w+\'o\'].2n(i)){if(!J(o[w+\'o\'][i].nr)&&J(o[w+\'o\'][i].17)&&J(o[w+\'o\'][i].1Z)){B z=o[w+\'o\'][i].17.5Y();B ok=L;if(z){if(x=="8v"){if(z==x){ok=H}}F{if(z.I("%")>0){if(d>0){z=2J(z.1j(0,z.I("%")))*d/100}F{z=-1}}F{z=2J(z)}if(x>=z){if(v[\'6g\'+w+\'DF\']>0&&z>-1){if(x-z>=v[\'6g\'+w+\'DF\']){z=-1}}if(z>-1){ok=H}}}if(o[w+\'o\'][i].BF&&o.P.1m()>0){if(o.P.1m()<o[w+\'o\'][i].BF*1){o[w+\'o\'][i].nr=H;ok=L}}if(ok){y=o[w+\'o\'][i].1Z;v[w]=o[w+\'o\'][i].1Z;o[w+\'Yi\']=o[w+\'o\'][i].17;o[w+\'Yg\']=o[w+\'o\'][i].Y1;if(8F(w)){o[w+\'o\'][i].nr=H;1h}}}}}}}};E kW(){if(8D()){if(o.dK==0||v[\'6g\'+o.3Q+\'Yd\']==1){O(o.qs,{"1A":0,"5u":"3h","1c":47});1p(o.3Q+" 1k");o.3Q==\'6y\'?o.P.2A():\'\'}}}E 8D(z){B y=L;B x=[\'6y\',\'dL\'];V(B i=0;i<x.S;i++){if(o.3Q==x[i]||z==x[i]){if(v[\'6g\'+x[i]+\'Yc\']==1){y=H}}}K y};G.8D=E(x){K 8D(x)};G.Yb=E(x){x?\'\':l9();o.3Q=="6y"?o.Bz.2L(o.Bw):\'\'};G.Ya=E(){l9()};G.Y9=E(){l9()};E l9(){if(8D()){if(o.1y){o.P.3e();o.Q.3e()}1p(o.3Q+" 1o");O(o.qs,{"1A":1,"5u":"4j","1c":0});o.mh=1}if(o.jN&&!o.7Z){l8()}F{if(v["6g"+o.3Q+"gK"]==1&&o.22){o.U.8B()}}};G.Y8=E(x){o.5H=1S;o.mh=0;1p("8m 3T",o.3Q);js("Y7",o.3Q);if(x.1D=="f9"){B Bs=1u Y6(x);o.pP.2L(Bs)}F{if(J(o.1Z)){if(v.4v==0&&v.Y5==1&&o.P.17()==0&&o.P.1m()==0){v.4v=1;o.P.sK()}if((!o.1Z.Y4()||x.Bq)&&o.q6>0){1p("8m Y3");o.1Z.4c();o.1Z=1S;o.1Z=1u pR()}if(8D()){kW()}F{if(o.1y){o.P.3e();o.Q.3e()}}o.q6++;if(o.l4&&v.dJ>0){2G(o.dJ);o.dJ=1z(Bx,v.dJ*2h*60);if(J(v.Bp)){if(v.Bp!=\'\'){o.jB?o.jB.6f():\'\';o.jB=1u Y2()}}}o.l4=L;if(v.BH>0){1p("8m ZF");js("Yy");1z(rq,v.BH*2h,x)}F{rq(x)}}F{1p("8m ZH")}}};E rq(x){o.1Z.Go(x)}E Bx(){if(J(o.1Z)){if(o.1Z.e7()&&o.dK==0){o.1Z.qO();1p("8m xE "+v.dJ);2k=[];cD()}}}G.11q=E(){js(\'11v\',o.3Q);1p("8m 2j");rD()};G.jF=E(){rD()};E rD(){B n=kY();1p("8m 6J "+!n);!n?jF():cD()};G.11e=E(x){if(v[o.3Q+"rI"]){V(B i=0;i<3;i++){v[o.3Q+"rI"]=v[o.3Q+"rI"].1Q(x+(i==0?\' gi \':(i==1?\' or \':\'\')),\'\')}}};E kY(){B x=L;if(o.3Q){B 7B=v[\'6g\'+o.3Q+\'4o\'+\'C3\'];B jH=v[\'6g\'+o.3Q+\'4o\'+\'11m\'];if(jH||7B){if(jH>0&&o.rs>0){o.rL=jH;if(o.dK>=jH){x=H}}F{if(7B>0){o.rL=7B;if(o.dK>=7B){x=H}}}}}K x}E jF(){if(2k.S>0&&2k[6Y]){if(9f<2k[6Y].S-1){1p("8m 10W");o.1Z?o.1Z.qO():\'\';kW();9f++;B 7v=4D(2k[6Y][9f]);B fU=qL(7v);if(fU==\'7a\'){o.5H=1u kV();o.5H.kU(7v,o.3Q)}if(fU==\'2j\'){jF()}}F{cD()}}F{cD()}}E qL(7v){B x=\'7a\';if(v.ra==1&&o.5J){B l0=L;B n=0;V(B i=0;i<o.5J.S;i++){if(o.5J[i].kZ==0){if(o.5J[i].cr.BY(7v)){o.5J[i].kZ=1;B y=o.5J[i].cr.aL();if(y==\'3T\'){o.5H=o.5J[i].cr;1p("8m BY");o.5J[i].cr.g6();x=y}F{if(y==\'\'){x=\'ok\';1p("8m 11n");o.5H=o.5J[i].cr;o.5J[i].cr.10Y()}if(y==\'2j\'){x=\'2j\'}}l0=H}if(l0&&o.5J[i].eu==0){n++;if(n<6){qU(o.5J[i])}F{1h}}}}}K x}G.10Z=E(x,y){if(x!=\'\'){B z=6Y;B r4=L;if(y){V(B j=0;j<2k.S;j++){2k[j]==y?z=j:\'\'}}if(2k.S==1){if(2k[0].S>1&&9f<2k[0].S-1&&2k[9f]){B BN=2k[9f].6F(1,99);2k[0].qX(9f+1,99);r4=H}}if(1J(x)=="3M"){V(B i=0;i<x.S;i++){2k.qX(z+i+1,0,[x[i]]);if(o.1i.v0){g9(x[i])}F{1z(g9,i*100,x[i])}}}F{if(1J(x)=="4W"){2k.2L([x]);g9(x)}}if(r4){2k[2k.S-1]=2k[2k.S-1].a2(BN)}}};G.11b=E(x,y){if(x!=\'\'){B z=6Y;if(y){V(B j=0;j<2k.S;j++){2k[j]==y?z=j:\'\'}}if(2k[z]){if(1J(x)=="3M"){V(B i=0;i<x.S;i++){2k[z].2L(x[i])}}F{if(1J(x)=="4W"){2k[z].2L(x)}}}}};G.cD=E(x){cD(x)};E g9(x){if(v.ra==1&&o.5J){B i=0;V(B i=0;i<2k.S;i++){if(2k[i]==x){if(6Y>=i){K}F{}}}if(2k.S==1&&2k[0].S>1){}F{B n=0;V(i=0;i<o.5J.S;i++){o.5J[i].kZ==0?n++:\'\'}o.5J.2L({eu:0,kZ:0,x:4D(x),t:o.3Q,cr:1u kV(H)});n<5?qU(o.5J[o.5J.S-1]):\'\'}}}E qU(x){if(x){x.eu=1;x.cr.kU(x.x,x.t)}}E cD(jA){B 2F=kY();1p("8m 6f ("+o.dK+")");if(2k.S>0&&6Y==2k.S-1){if(2k[0][0].I("js:")==0){6Y=-1;2k=[[2k[0][0]]]}}if(o.11c==2){2F=H}if(2k.S>6Y+1&&!2F){o.1Z.qO();kW();6Y++;o.AL++;9f=0;B 7v=4D(2k[6Y][0]);B fU=qL(7v);if(fU==\'7a\'){o.5H=1u kV();o.5H.kU(7v,n9)}if(fU==\'2j\'){cD(jA)}}F{eI();o.Q.7J();if(J(o.1Z)){o.1Z.4c();o.1Z=1S}o.5H=1S;2k=[];9f=0;6Y=0;o.mh=0;o.AX!=1?js("11f",o.3Q):\'\';o.AX=0;if(v.11g==1){if(o.ll){3g{o.ll.xL()}2H(e){1p(o.ll,e)}o.ll=1I}}n9=\'\';o.dK=0;o.Be=0;2G(o.dJ);3G(o.11h);o.jB?o.jB.6f():\'\';o.bU?o.bU.1k():\'\';o.rs++;if(o.3Q=="6W"||(o.3Q=="dL"&&v.nA==1&&o.gx)||o.3Q=="6y"){if(v.3w!=\'?\'){o.P.gH();B re;if(o.rn){o.U.h8();o.rn=L;re=H}if(o.2i=="4x"&&!o.qz&&o.1i.5a){re=H;o.3Q=="6W"?o.P.Ae():\'\'}if(re||jA==\'jA\'||v.10X==1||o.nv){o.nv=L}F{o.U.2A(1)}}}if(o.nu>0){qG(o.nu);o.nu=0}if(o.3Q=="mb"){al()}o.qz=L;o.3Q=1S}};G.11l=E(){2k=[[\'\']]};G.fW=E(y){B x=[\'6W\',\'dL\',\'mb\',\'6C\',\'q5\'];B z;V(B i=0;i<x.S;i++){z=L;if(y){y!=x[i]?z=H:\'\'}if(!z&&J(v[x[i].a2("4o","j5")])){v[\'6g\'+x[i].a2("4o","B2")]--;if(v[\'6g\'+x[i].a2("4o","B2")]>0){v[x[i]]=v[x[i].a2("4o","j5")];v[x[i].a2("4o","j5")]=1S}}}if(y=="6W"||y=="6y"){if(v.pT>1){if(J(o.pV)&&v.jx==1){V(B i in o.pV){o.pV[i].nr=1I}v.pT--}}}};G.pC=E(){eJ();if(J(o.8a)){o.8a.4c();o.8a=1S}o.8a=1u 11k()};G.11j=E(){eI();o.8a.4c();o.8a=1S};G.eJ=E(){eJ()};G.eI=E(){eI()};E eJ(){if(o.9Y){}F{o.9Y=1X("2c");o.1O.1R(o.9Y);fX(o.9Y);O(o.9Y,{"2w":"#3W","1A":0.1});o.9Y.C.51=GJ}};E eI(){if(o.9Y){o.1O.3q(o.9Y);o.9Y=1S}};E 8r(){if(J(o.2e)){B p=o.22?2B(v.11i,v.2e):v.2e;if(p!=o.wQ){9S(p,o.2e,v.gv)}1o(o.2e);O(o.2e,{"1A":v.nG});o.Q.4w();o.gu?o.gu.1y():\'\'}};G.g1=E(){if(J(o.2e)){if(5N(o.2e)){3G(o.wJ);B t=o.P.17();if(t==0&&v.AB==1){}F{if(v.C5>0){2G(o.qa);o.qa=1z(np,v.C5*2h)}F{np()}}}}};E np(){2G(o.qa);if(v.qp==1&&!o.1y){}F{O(o.2e,{"1A":0});1z(De,3V)}}E De(){if(!o.1y&&v.fm==1){}F{1k(o.2e);o.gu?o.gu.4s():\'\';o.Q.4w()}}G.8r=E(){8r()};E Dd(x){if(v.qC==1){V(B i=0;i<4X.S;i++){if(4X[i]){if(4X[i].3o("id")!=v.id){4X[i].3o(\'4s\')}}}}cW=v.id}E q9(x){B y=7D.6a(x).S;o.j4=0;if(y>0){x=qe(x,y,\'\',-1)}K x}E qe(x,y,p,j){B x2=[];B 2F;if(J(x[\'W\'])){x=x[\'W\'];y=x.S}B ii=0;V(B i=0;i<y;i++){2F=L;if(J(x[i][\'id\'])){x[i][\'dX\']=x[i][\'id\']}x[i][\'id\']="x"+p+\'-\'+i+(J(x[i][\'id\'])?\'-\'+x[i][\'id\']:\'\');j==-1&&i==0&&!J(x[i][\'5b\'])?o.jw=x[i][\'id\']:\'\';if(!J(o.jw)){j==0&&!J(x[i][\'5b\'])?o.jw=x[i][\'id\']:\'\'}x[i][\'ju\']=p;x[i][\'qb\']=j;x[i][\'bv\']=ii;if(J(x[i][\'1m\'])){o.j4+=x[i][\'1m\']}if(J(x[i][\'D2\'])){x[i][\'1L\']=x[i][\'D2\'];B q1=x[i][\'3w\']?x[i][\'3w\'].I(\'[\'):0;B q2=x[i][\'3w\']?x[i][\'3w\'].I(\']\'):0;if(q1>0&&q2>0){B s1=x[i][\'3w\'].1j(q1+1,q2-q1-1);B s2=s1.2q(",");B s3=\'\';V(B k=0;k<s2.S;k++){s3+="["+s2[k]+"]"+x[i][\'3w\'].1Q("["+s1+"]",s2[k])+(k<s2.S-1?",":\'\')}x[i][\'3w\']=s3}}if(J(x[i][\'W\'])){x[i][\'5b\']=x[i][\'W\']}if(!J(x[i][\'5b\'])){if(J(x[i][\'3w\'])){if(x[i][\'3w\']==\'\'&&!J(x[i][\'7e\'])){2F=H}}F{2F=H}}if(!2F){o.1H[x[i][\'id\']]=x[i];ii+=1}if(J(x[i][\'5b\'])){B z=7D.6a(x[i][\'5b\']).S;if(z>0){x[i][\'5b\']=qe(x[i][\'5b\'],z,x[i][\'id\'],i)}}if(!2F){x2.2L(x[i])}}K x2}E CX(){B x=[];if(J(v.4t)){if(v.4t.I("x-")!=0){V(B y in o.1H){if(o.1H.2n(y)){if(o.1H[y].dX==v.4t){v.4t=y}}}}if(J(o.1H[v.4t])){v.W.11o==1?v.W.lE=0:\'\';x=o.1H[v.4t]}F{x=o.W[0];if(v.4t==o.tU){o.29=1I}}}F{x=o.W[0]}if(x){V(B i=0;i<10;i++){if(J(x[\'5b\'])){x=x[\'5b\'][0]}F{1h}}v.4t=x.id;if(v.4t==o.tU&&x.1t!=\'3p\'){x.1t=1I}}K x}G.gF=E(){K gF()};E gF(){B x=L;if(o.Q){if(o.Q.f4()){if((v.W.dq==1||v.ir==1)&&o.Q.bz()){x=H}}}K x};E al(){aT("43","al",1);o.U.fW();if(o.5m&&v.c8==1){o.3p.ny(0,o.P.1m())}if(o.Q.f4()){if(gF()){if(J(v.W.DA)){o.DC=1z(E(){o.Q.aA()},v.W.DA*2h)}F{o.Q.aA()}}F{ue()}}F{if(v.11r==1&&o.22){o.U.8B()}ug()}}G.Dx=E(){ue()};E ue(){if(v.W.oe==1&&!o.Q.bz()){o.Q.nw();K}if(v.W.Ig==1){!o.Q.h5()?o.Q.cP():\'\'}ug()}E ug(){8r();v.5B==1?o.5B.3o("43"):\'\';js("11y");if(v.7e==1&&v.11x==1&&2E(v.Ds)){7e(v.Ds)}if(v.bI){if(1J Dr!=="1I"){!o.bI?o.bI=1u Dr():o.bI.Dq()}}}E tF(x){if(x.I(\'js:\')==0){3g{x=2g(x.1j(3))}2H(e){aM.1p(e.8p)}}K x?x:\'\'}E tx(){B tB=2D.8q(6M.j3()/2h);B tC=(J(v.Dl)?v.Dl:0)+2J(o.P.17());B 1D=0;o.1i.cz?1D=1:\'\';o.1i.5a?1D=2:\'\';o.1i.as?1D=3:\'\';o.1i.11w?1D=4:\'\';o.1i.tv?1D=5:\'\';B X=v.iC.1Q("[tB]",tB);X=X.1Q("[tC]",tC);X=X.1Q("[11t]",1D);B 8T=1T.1X("41");8T.6m(\'2Y\',X);8T.6m(\'1f\',\'3U\');8T.6m(\'Y\',\'3U\');o.1O.1R(8T)}};B Cn=E(X){B X;B 3I;B nF;B 7V;B fA="";B dp=0;B iU=L;B mH=L;B ur;B P;B 3l;o.3D={x:1,y:1,x0:1,y0:1};B 9E;B nd;B nb=0;B g5=0;B iF;if(1J(X)==\'4W\'){X=4D(X);if(X.I("[{")==0){3g{X=X.1Q(/6T\'qt/ig,\'"\');X=59.6K(X);9E?X=o.U.6u(X):\'\'}2H(e){aM.1p(e);X="Cv 59"}}if(X.I("#"+v.9C)==0){X=o[o.fd[0]](X)}if(X){if(X.I("#"+v.bY)==0&&X.I(v.dD)>0){9E=H;o[o.fd[1]](X,bh)}}if(X){if(X.I("#0")==0){if(X.I(o.dn)>0){X=bR(X.1Q(o.dn,\'\'))+o.dn}F{X=bR(X)}}}if(v.bt==1){X=bt(X)}if(1J(X)==\'4W\'){if(X.I(".bj")==X.S-4||X.I(".9k")>0){nd=X.2q(" or ");tJ()}}}o.3z=1X("2c");fX(o.3z);O(o.3z,{"5h":"2T 0.2s 3c","1B-8E":"8i"});o.1O.1R(o.3z);if(v.1N.Cs==1){if(!o.tH){sO(o.3z,\'o.Cs\',v.1N.iy!=1,v.1N.iy==1,Cr);o.tH=H}}if(!9E){bh()}E Cr(){B p=o.3z.hI;B p2=o.2U;if(v.1N.iy==1){p=o.3z.tG;p2=o.4Q}B x;if(p>p2*2B(v.1N.Cq,0.5)){if(o.Q.gM()){x=H;o.Q.e1()}}F{if(p<-p2*2B(v.1N.Cq,0.5)){if(o.Q.bz()){x=H;o.Q.aA()}}}if(x){if(v.1N.iy==1){O(o.3z,{"1c":0})}F{O(o.3z,{"1b":0})}}F{1u 5y({mc:o.3z,1D:(v.1N.iy==1?"1c":"1b"),to:0,17:0.1,6q:"Ec",me:"tH"})}}E tJ(){X=nd[nb];if(X.I(o.dn)>0){X=X.1Q(o.dn,\'\');v.3w=X}B 4M=fC(X);4M.cC=E(){if(G.fE==4&&G.6P==4B){cP(G);o.Q.Ey()}F{nn(1)}};4M.tI=E(e){nn(1)};4M.bD();9E=H}E nn(x){if(nb+1<nd.S){nb++;tJ();x=0}if(x==1){5G("W gN oz or Cl Ck")}if(x==2){5G("11z 59")}}E cP(x){if(x.e3){B y=x.e3;if(y.I("#"+v.9C)==0){y=o[o.fd[0]](y)}if(y.I("#"+v.bY)==0&&y.I(v.dD)>0){y=o[o.fd[1]](y)}if(X.I(".bj")==X.S-4){B bj=y.2q(/(\\r\\n\\t|\\n|\\r\\t)/gm);X=[];B tL=1;B ix=\'\';V(B i=0;i<bj.S;i++){if(bj[i].I("#11p")>-1){if(bj[i].I(" - ")>-1){B 1G=bj[i].2q(" - ");ix=1G[1G.S-1]}}if(bj[i].I("3L")>-1){X.2L({1L:""+(ix!=\'\'?ix:tL),3w:bj[i]});tL++;ix=\'\'}}}F{y=y.1Q(/(\\r\\n\\t|\\n|\\r\\t)/gm,"");3g{X=59.6K(y)}2H(e){nn(2)}}if(o.Q){if(v.W.lD==1){o.Q.hi(2)}}bh();aY();1z(E(){js("W")},1)}}E bh(x){X=o.U.6u(x?x:X);X&&X!=\'?\'?6u(X):\'\';o.1y&&x&&!o.1Z?o.P.2A():\'\'}E 5G(x,Ce){B y=H;B yy=H;js("10n",x);if(Ce!=1&&v.8d==1&&v.uY==1){uU();K}if(3I){if(o.1y||o.gx||(v.3b==1&&!o.1t)){if(3I.S>0){7V++;y=7V>3I.S-1;if(y&&3I.S>1&&v.dh>0){if(o.dh<v.dh){7V=0;y=L}o.dh++}if(y&&v.10S==1){if(o.3X.S>1){if(o.2u[o.3m].I(2P("fZ"))==-1){o.2u[o.3m]=o.2u[o.3m]+\' (\'+2P("fZ")+\')\'}if(o.3m>0){yy=L;o.U.5U(o.3m-1);j1()}F{if(o.2u[o.3m+1].I(2P("fZ"))==-1){yy=L;o.U.5U(o.3m+1);j1()}}}}if(!y){B z=L;o.29>0||!o.1t||P.5q()?\'\':o.29=4p();if(o.2i!=my(3I[7V])||o.2i!=\'bW\'){if(o.1y){o.U.aF(1);z=H}}if(v.nQ>0){2G(o.j0);o.j0=1z(iw,v.nQ*2h)}F{iw()}}F{if(v.8d==1&&yy&&v.uY!=1){y=L;uU()}}}}F{y=L;if(!o.1t){iw()}}}if(y&&yy&&x){uw(x,H)}};E iw(){if(o.1y||o.gx||(v.3b==1&&!o.1t)){1p("10j c0",o.29);6u(\'or\');o.1t&&!o.1Z?P.2A():\'\';j1()}F{if(!o.1t){if(3I.S>0){if(7V+1<3I.S){7V++;o.dh++;6u(\'or\')}}}F{2G(o.j0);o.j0=1z(iw,(v.nQ>0?v.nQ:5)*2h)}}}E uw(x,mr){aT("2j","k0",H);if(v.Cu==1&&!o.aw){if(v.CH==1){o.a6.9k(v.CQ)}F{o.a6.9k(x)}if(v.CP==1&&J(v.CO)){o.di=1u CN();o.U.g1()}}mr?o.aw=H:\'\';if(o.1y){o.U.7J();o.Q.3e()}J(o.2e)&&!J(o.di)?o.U.8r():\'\';js("2j",x)}E uU(){g5++;1p("k0 g2 As "+g5);o.1y?o.ma=1:\'\';J(o.cl)?2G(o.cl):\'\';o.cl=1z(CK,v.uW*2h)}E CK(){B x=2B(v.10i,10);if(o.1y||o.ma==1){o.ma=0;if(g5<x){o.U.g2()}F{if(v.uY==1){5G(P.kc(),1)}F{uw(\'g2 k0 \'+P.kc())}}}}G.5G=E(x){5G(x?x:P.kc())};G.7W=E(y){1p("o1");iU=H;2G(iF);B x=L;if(3H()>0&&!o.4Z&&!y){B 17=o.yB;if(17+10<3H()){1p(\'10h (CI)\');js("CI");P.2A();P.3P(17);x=H}}if(!x){o.U.o1();js("43")}};G.9W=E(){if(v.rX==1){J(o.2e)?o.U.8r():\'\'}v.fm==1?o.U.g1():\'\';o.Q.2A();o.U.CG();if(v.10f==1&&J(v.sV)){if(v.sV.S>5){sU();3G(ur);ur=6R(sU,v.CF*2h)}}js("1y")};G.iv=E(){if(v.o9==1&&o.4u){if(o.U.iv()){o.9I=P.tN();o.Q.4w();sb()}}o.ut=H};G.dw=E(){4p()>0&&4p()==3H()&&o.U.gF()?\'\':o.U.3e()};G.kA=E(){1p("10d")};G.kz=E(){1p("um");o.U.um();J(o.g4)?js("3S",o.g4):\'\'};G.cj=E(){1p("uy");g5=0;o.U.uy();o.2i=="1C"?t6(1):\'\'};G.9Q=E(){if(P){1p("3H",3H());o.U.3H(4p(),3H());js("1m",3H());g5=0;2G(o.cl);if(J(o.o0)){o.U.e0(o.o0);o.o0=1S}}};E 4p(){B x=P.17();K x}E 3H(){B x=P.1m();K x}G.dl=E(){};G.9l=E(){1p("8K");o.U.8K();js("7F")};G.cq=E(){if(dp!=4p()){if(!o.9Y){o.U.7J();if(dp==0){if(v.fm==1&&v.AB==1){o.U.g1()}}}}dp=4p();B cu=3H();js("17",dp);if(v.2a.on==1){if(1J(yG)==\'E\'){!v.do&&v.2a.do?v.do=v.2a.do:\'\';if(!3l&&v.2a.4O!=1&&v.do&&v.do!=\'\'&&dp>0){o.ek=1u yG();3l=o.ek.go()}}}if(o.2i=="1C"&&o.1i.7s&&cu>0){if(o.1y&&dp>cu-1){2G(iF);iF=1z(yI,47)}}};E yI(){if(!iU){o.U.3e();o.P.7W()}}G.uD=E(){if(o.2i=="4x"){P?P.nX():\'\'}};G.yN=E(x){o.U.aF();P.yP(x)};G.Gs=E(x){if(J(x)){if(3l){3l.3R(x)}v.2a.1F=x}};G.yR=E(x){if(J(x)){if(3l){3l.2Y(x);3l.2A()}}};G.nX=E(){if(o.2i=="4x"&&P){K P.3T()}F{K H}};G.l7=E(){K o.2i=="1C"?P.l7():1I};G.lb=E(){K P.lb()};G.5U=E(x){1p("10c",x);if((o.2i=="bW"||o.2i==o.ws||(o.2i=="1C"&&(v.8Y==0||9D()<2))||(o.2i=="3J"&&(v.nI==0||cH()<2)))&&J(o.3X[x])){B 17=G.17();o.29>0?\'\':o.29=17;o.U.3P(17,L);6u(o.3X[x],H);B y=H;if(v.1g){if((v.1g.10a==1&&!o.1y)||!o.1t){y=L}}if(o.af>0){P.gz(o.af)}if(y){o.U.2A()}}if(o.2i=="1C"&&v.8Y==1&&9D()>1){P.Fo(x)}F if(o.2i=="3J"&&v.nI==1&&cH()>1){P.Fh(x)}F if(o.2i=="4x"||o.2i=="dm"){P.qk(x)}};G.Jp=E(x,y){K ia(x,y)};G.uR=E(x,y){K A6(x,y)};E ia(x,y){B r=x.1f+\'p\';if(x.1f<4B){r=\'sh\'}F if(x.1f>=4B&&x.1f<=dz){r=\'nU\'}F if(x.1f>dz&&x.1f<=iq){r=\'nT\'}F if(x.1f>iq&&x.1f<=3V){r=\'nP\'}F if(x.1f>3V&&x.1f<=gg){r=\'z7\'}F if(x.1f>gg&&x.1f<=z8){r=\'nE\'}F if(x.1f>z8&&x.1f<=z9){r=\'nN\'}F if(x.1f>z9&&x.1f<=zb){r=\'sA\'}F if(x.1f>zb&&x.1f<=yV){r=\'ZZ\'}F if(x.1f>yV){r=\'sB\'}if(x.Y==ZY&&x.1f<=ZW){r=\'nU\'}F if(x.Y==yp&&x.1f<=yr){r=\'nT\'}F if(x.Y==ZI&&x.1f<=ZV){r=\'nP\'}F if(x.Y==ZU&&x.1f<=ZT){r=\'nE\'}F if(x.Y==ZR&&x.1f<=ZQ){r=\'nN\'}F if(x.Y==ZP&&x.1f<=ZO){r=\'sA\'}F if(x.Y==ZN&&x.1f<=ZL){r=\'sB\'}if(v.1g.10l==1&&J(v.1g[\'6x\'+r])){r=v.1g[\'6x\'+r]}F{if(y==1){r=2P(r)}if(y==2&&J(x.9F)){r=2J(x.9F/2h)+\' \'+2P(\'kf\')}}K r};E A6(x,y){B r=x.oZ();if(r=="ZX"||r=="en"){x="10R"}F if(r=="10P"||r=="ru"){x="Русский"}if(1J(v.nK)=="3M"){if(J(v.nK[x])){x=v.nK[x]}F{x=2B(v.nK[y.5Y()],x)}}K x};E sb(){if(o.4u&&o.26&&!o.qE){P.pX();V(B i=0;i<o.26.S;i++){if(o.26[i]!=\'9H\'){P.E8(o.26[i],o.3a[i],(i==o.3r))}}o.qE=H}}G.9s=E(x){1p("10J",x);x=3K(x);P?P.eU(x):\'\';if(v.2a.on==1){if(3l){3l.eU(x)}}};G.At=E(){sb()};G.Ao=E(){P.pX()};G.e0=E(x){1p("10I",x);if(o.aB.S>0){if(o.aB[x]){B 17=G.17();o.29>0?\'\':o.29=17;o.U.3P(17,L);6u(o.aB[x],H);o.U.2A()}}F{if(o.2i=="1C"&&v.c5==1){P.Fb(x)}F if(o.2i=="3J"&&v.zA==1){P.Hm(x)}F if(o.4u){P.gz(x)}}};G.rU=E(){B x=o.2u[o.3m];x==1I?x=\'\':\'\';B y=jS()&&v.k9==1&&v.8Y==1&&x!=2P("2y");K(y?\'\'+2P("2y")+\' \':\'\')+x};G.rV=E(){B x=o.6X[o.7l];x==1I?x=\'\':\'\';K x};G.jS=E(){K jS()};E jS(){B x=L;if(P){if(o.2i=="4x"){x=P.2y()}if(o.2i=="1C"&&v.8Y==1&&9D()>1&&v.k9==1){x=P.2y()}if(o.2i=="3J"&&v.nI==1&&cH()>1){x=P.2y()}}K x}E 9D(){if(o.2i=="1C"){K P.9D()}F{K 0}}E cH(){if(o.2i=="3J"){K P.cH()}F{K 0}};G.8W=E(){K o.4u?P.8W():o.4R};G.4N=E(x){if(P&&(o.2i=="4x"||o.2i=="bc"||J(v.8W))){P.4N()}if(v.v8>0){O(o.3z,{"1f":(o.22?"100%":o.bm-v.v8)})}if(o.3l&&v.2a.Af==1){o.ek.4N()}if(v.s0==1){10H()}if(o.tS){o.tS.4N()}};G.3O=E(){K P?P.3O():{}};G.kv=E(){P.kv()};G.8d=E(){1p(\'8d\');o.aj=0;o.1t?v.3b=1:\'\';o.U.8K();if(X&&v.10G!=1){if(X.I(\'(5F)\')==-1){X=X+(X.I(\'?\')==-1?\'?\':\'&\')+\'zn=(5F)\'}}if(X){if(o.4u){P.2Y(X);G.2A()}F{6u(X)}}};if(!J(o.2e)){sJ()}if(J(v.2e)){if(v.2e!=\'\'){9S(v.2e,o.2e,v.gv);if(v.rX==1&&!o.1t){1k(o.2e)}}F{v.2e=1S}}E aL(){fA=P?P.6P():\'\'}E zy(X){3I=X.2q(" or ");V(B i=0;i<3I.S;i++){if(3I[i].I(" gi ")>-1){nF=3I[i].2q(" gi ");3I[i]=nF[5F(0,nF.S-1)]}if(J(v.nD)&&3I[i].I("//")==-1){3I[i]=v.nD+3I[i]}}7V=0}E zJ(){aL();if(fA=="7u"||o.4Z){o.U.rZ()}if(fA!=""){o.U.vR()}}E sJ(){if(o.2e){o.1O.3q(o.2e)}o.2e=1X("2c");O(o.2e,{"4A-3f":"1Y","1A":v.nG,5h:"1A 0.5s"});if(v.s0==1){10F()}F{O(o.2e,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':\'100%\',\'1f\':\'100%\'})}o.1O.1R(o.2e)}E 6u(x,y,zR){2G(iF);v.iu==\'\'?v.iu=\';\':\'\';if(x.I(\'{\')>-1&&x.I(\'}\')>-1&&x.I(v.iu)>-1){B z=x.2q(v.iu);o.aB=[];V(B i=0;i<z.S;i++){o.6X[i]=z[i].1j(z[i].I("{")+1,z[i].I("}")-1);o.aB[i]=z[i].1j(z[i].I("}")+1);if(J(v.aQ)){if(v.aQ==o.6X[i]){o.7l=i}}}x=o.aB[o.7l]}!J(3I)?3I=[]:\'\';o.mo?2G(o.mo):\'\';x&&x!=\'or\'&&x!=\'x\'?zy(x):\'\';B ft=o.2i;if(3I.S>0){B fu=3I[7V];if(fu.I(\'js:\')==0){3g{fu=2g(fu.1j(3))}2H(e){aM.1p(e.8p)}}if(fu){o.2i=my(fu);B go=L;if(zR){go=H}X=fu;if(X){X=X.1Q(/\\(5F\\)/g,2D.5F())}F{X=3I[0]}if(!go&&x!=\'x\'&&P&&o.2i==ft&&(ft=="bW"||(ft=="bc"&&!o.1i.2f)||(ft=="4x"&&o.1t&&!mH)||ft=="dm"||ft=="1C"||ft=="3J")){P.2Y(X);1p("2Y")}F{1p("10E");mv();zg(X)}t6()}}if(!y){3G(o.s9);o.s9=6R(zJ,o.mD);if(!J(v.1W)&&v.mC==1&&v.sE==1){v.1W=\'\'}if(J(v.1W)){o.U.fe(v.1W)}if(v.fJ==1){if(v.o9==1&&o.1i.2f){}F{if(o.2i=="4x"){O(o.3z,{"1c":-jR,"1b":-jR})}F{3n(o.3z)}v.1r.1k=0}}}}E t6(x){if(o.dS||x){if(o.jv){P.eU(o.h6)}F{if(o.9v!=o.dS){P.eU(o.5L[o.9v])}}}}E my(x){B 1D="bW";if(x){if(x.I(".Ij")>0){1D="1C"}F if(x.I(".Io")>0){1D="3J"}F if(x.I("w")==0&&x.I("s")==1){1D=o.ws}F if(x.I(\'4x.7U/\')>-1||x.I(\'o3.be/\')>-1){if(1J(te)==\'E\'){1D="4x";if(v.vE==1){B y=\'iG://41.4x.7U/vi/\'+mA(x)+\'/\';zP(y+\'zD.gX\',E(z){z>100?v.2e=y+\'zD.gX\':v.2e=y+\'10C.gX\';if(o.1H){o.1H[o.3j][\'2e\']=v.2e}v.3b==1||o.1t?\'\':9S(v.2e,o.2e,v.gv)})}}F{1p("No zI")}}F if(v.bc==1&&x.I(\'bc.7U/\')>-1){1D="bc"}F if(v.mx==1&&x.I(\'mx.7U/\')>-1){1D="mx"}F if(v.dm==1&&x.I(\'10B.7U\')>-1){1D="dm"}F if(v.zB==1){if(1J(zM)==\'E\'){zM(x)?1D="6T":\'\'}}}o.4u=1D=="bW"||1D=="1C"||1D=="3J"||1D==o.ws;K 1D}E zP(X,zo){B 41=1u 10A();41.cC=E(){zo(G.1f)};41.2Y=X}E zg(x){o.2i=my(x);if(o.4u){P=1u GD(x,o.3z,L)}if(o.2i=="4x"){P=1u te(x,o.3z)}if(o.2i=="bc"){P=1u 10z(x,o.3z)}if(o.2i=="mx"){P=1u 10y(x,o.3z)}if(o.2i=="6T"){P=1u 10x(x)}if(o.2i=="dm"){P=1u 10v(x,o.3z)}o.Q?o.Q.Fl():\'\';B t=0;if(J(v.1m)){if(o.3p&&v.c8==1&&!o.1t){t=o.3p.a1().t}1z(E(){o.U.3H(t,v.1m)},100)}}E mv(){if(P){P.4c();P=1S;fA="7h"}if(3l){3l.4c();3l=1S;3l=1I;o.ek.6f();o.3l=1S;o.ek=1S}};G.4c=E(){mv()};G.10u=E(){3I=[];mv()};G.6u=E(x,y,z){6u(x,y,z)};G.9S=E(x){9S(x,o.2e,v.gv)};G.2A=E(){if(P){iU=L;mH=L;if(o.4Z){o.4a.2A()}F{P.2A();v.fm==1?o.U.g1():\'\'}if(J(3l)){3l.2A()}if(o.7P){if(o.4u){if(o.9y>0&&!o.7P.10t()){o.7P.mq()}}F{o.mp=[];o.Q.lR("ep")}}if(o.4u&&v.ET>-1&&!o.tz&&!o.1i.5a){if(o.9y>0){P.EV()}}j1()}F{1z(G.2A,3V)}};E j1(){if(v.Ak>0&&3I.S>1){if(3H()==0||v.Am==1){2G(o.mo);o.mo=1z(Al,v.Ak*2h)}}}E Al(){if(o.1y&&(3H()==0||v.Am==1)&&4p()==0&&!o.j0){if(P){if(P.a4()==0&&7V!=3I.S-1){5G(\'6u As\')}}}}G.Au=E(1d){if(o.3l){if(v.2a.Af==1){if(o.qn[o.3l]>2){K}}if(1d){1d.aq();1M.1d?1M.1d.6v=H:\'\'}B 1G=P;P.tO(H,o.3l);3l.tO(L,o.3z);P=3l;3l=1G;P.2A();3l.2A();js("2a")}};G.Ae=E(){P.2Y(X)};G.xJ=E(){v.5B==1?o.5B.3o("1k"):\'\';o.sP=H};G.hm=E(){if(v.1r.wm){v.1r.wm=L;if(o.Q){o.Q.wH(1);o.Q.xp()}}o.sP=L};G.zZ=E(){if(o.3l&&o.ek){o.ek.hS()}};G.fO=E(){if(o.4u&&o.5M){o.hC=H;P.5M()}};G.d7=E(){if(o.4u&&o.8J){P.8J()}};G.mI=E(){if(v.fv==1&&J(v.10s)){if(J(o.fv)){o.fv.1o()}F{if(1J(zW)==\'E\'){o.fv=1u zW()}}}iV();if(P){pq(0);P.mI()}};G.gH=E(){o.fv?o.fv.1k():\'\';P?P.gH():\'\'};G.iV=E(x){iV(x)};E iV(x){if(v.10r==1&&2E(v.bU)){if(J(o.bU)){o.bU.1o(x)}F{if(1J(A9)==\'E\'){o.bU=1u A9()}}}}G.3e=E(){if(o.4Z){o.4a.3e()}F{P?P.3e():1p("10q")}if(J(o.3l)){3l.3e()}};G.mu=E(){mH=H;o.U.3P(0,L);J(o.2e)?o.U.8r():\'\';6u(\'x\')};G.ea=E(){P?P.ea():\'\'};G.3P=E(x){if(P){if(o.4Z){o.4a.3P(x)}F{P.3P(x);if(v.2a.on==1){if(3l){3l.3P(x)}}}}};G.56=E(){if(P){P.56();o.4Z?o.4a.56():\'\';1p("5k")}if(v.2a.on==1&&v.2a.eH==1){if(3l){3l.56()}}};G.6c=E(){if(P){P.6c();o.4Z?o.4a.6c():\'\';1p("bf")}if(v.2a.on==1&&v.2a.eH==1){if(3l){3l.6c()}}};G.3R=E(x){P?P.3R(x):\'\';if(v.2a.on==1){if(v.2a.eH==1&&3l&&!o.EK){3l.3R(x)}}if(o.4Z){o.4a.3R(x)}};G.nB=E(){K P?P.nB():L};G.5q=E(){K P?P.5q():L};G.6P=E(){K fA};G.7h=E(){K iU};G.17=E(){B x=0;if(P){x=4p();if(o.4Z){B y=o.4a.4p();y?x=y:\'\'}F{if(3H()>0&&x!=3H()){o.yB=x+0.10p}}K x}F{K 0}};G.1m=E(){B x=0;if(P){x=3H();x==0&&J(v.1m)?x=v.1m*1:\'\';if(o.4Z){B y=o.4a.3H();y?x=y:\'\'}}K x};G.a4=E(){K P?P.a4():0};G.fB=E(){o.3D.fB=o.3D.fB?L:H;O(o.3z,{"2T":(o.3D.fB?"3k(-1)":"3k(1)")})};G.10U=E(){sJ()};G.sK=E(){if(o.4u){P.4v()}};G.yC=E(x,y){if(x==\'1K\'){if(y==1){dc(v.1g.1K/100)}if(y==2){dc(-v.1g.1K/100)}if(y==3){o.P.iI()}}F{if(o.4u){if(!o.ai[x]){if(x==\'sM\'){o.ai[x]=0}F{o.ai[x]=1}}if(y==1){o.ai[x]+=v.1g[x]/100}if(y==2){o.ai[x]-=v.1g[x]/100}if(y==3){if(x==\'sM\'){o.ai[x]=0}F{o.ai[x]=1}}!o.iS?o.iS=[]:\'\';o.iS[x]=x+\'(\'+2J(o.ai[x]*100)+\'%) \';B cf=\'\';V(B i in o.iS){cf+=o.iS[i]}O(P.ak(),{\'6I\':cf});o.Q.ng(x)}}};G.1K=E(x){dc(x)};E dc(x){if(6E(x).I(":")>0){B y=x.2q(":");B z0=o.2U/o.4Q;B z1=o.P.3O();if(z1.Y>0){z0=z1.Y/z1.1f}B z=y[0]/y[1];if(z0!=z){if(o.4u){P.f1()}B w2=o.4Q*z;B x2=w2/o.2U;B h2=o.2U/z;B y2=h2/o.4Q;if(x2<1){o.3D.x0=o.3D.x=3K(x2);o.3D.y=1}F{o.3D.x=1;o.3D.y0=o.3D.y=3K(y2)}O(o.3z,{"2T":"3k("+o.3D.x+") 3t("+o.3D.y+")"});o.jr=x}}F{o.3D.x+=3K(x);o.3D.y+=3K(x);O(o.3z,{"2T":"3k("+o.3D.x+") 3t("+o.3D.y+")"})}if(v.1N.10L==1){if(!o.sS){if(o.3D.x>0||o.3D.y>1){sO(o.3z,\'o.10M\');o.sS=H}}sR()}o.Q.ng(\'1K\')};G.iI=E(){if(o.4u){P.f1()}o.3D.x=o.3D.x0;o.3D.y=o.3D.y0;O(o.3z,{"2T":"3k("+o.3D.x+") 3t("+o.3D.y+")"});o.Q.ng(\'1K\');o.jr=1S;sR()};E sR(){if(o.sS&&v.1N.10N!=1){if(o.3D.x==1&&o.3D.y==1){O(o.3z,{"1c":0,"1b":0})}}};G.eY=E(x,y){P.eY(x,y)};G.bX=E(){K bX()};E bX(){K 3I?(3I.S>0?(3I[7V]?3I[7V]:\'\'):\'\'):\'\'};G.sC=E(){K 3I.S};G.ak=E(){K P?P.ak():L};G.6d=E(){if(o.4u){P.6d()}};G.tf=E(){P.tf()};E sU(){B 4M=fC(v.sV+\'?X=\'+3I[7V]);4M.cC=E(){if(G.fE==4&&G.6P==4B){if(G.e3){v.1L=G.e3;o.U.ag(\'1L\')}}};4M.bD()}};B GD=E(X,1E,2a){B 1a=1X(v.fJ==1?"IC":"gB");B bN;B uC=0;B 1C;B 4F=L;B tr=L;B uL=L;B 9A=L;B gR=-1;B 3J;B 6n=L;B ws;B uK=L;B 5Z=L;o.5I=L;B 8A=0;B 8P=L;B 2j;B 10O;B n8=L;B jZ=-1;B bH=-1;B sm;B pY;B 9w;B ku;B 10Q;B Ja=\'gB/AA; 10D="10m.ZJ, ZK.40.2"\';B nV=L;O(1a,{\'1n\':\'o4\',\'Y\':\'100%\',\'1f\':\'100%\',\'3M-lT\':\'vn\',\'5h\':"6I 0.2s 3c",\'92-1f\':\'2y\',\'6h-1f\':\'1Y\',\'92-Y\':\'2y\',\'6h-Y\':\'1Y\'});f1();if(o.1i.7t&&v.3b==1&&v.uj==1){if(!o.1t&&v.6W){42(1a,{\'jc\':1})}F{o.3y=H;o.Q?o.Q.56():\'\';42(1a,{\'3y\':1,\'jc\':1,\'3b\':1})}}F{if(o.1i.2f){42(1a,{\'jc\':1})}if(!o.1i.tv){42(1a,{\'4v\':(v.4v==1?\'8v\':\'1Y\')})}}if(v.ZM==1){42(1a,{"ZS":"Iv","10b":"Iv"})}X=et(X);42(1a,{\'2Y\':X,\'x-3N-5M\':\'IS\',\'Iu\':\'H\'});if(v.10T!=1){42(1a,{\'Iu\':\'H\'})}if(v.10k==1){42(1a,{\'2a\':\'L\'})}if(2a){1a.3b=H;if(v.2a.eH!=1||v.3b==1){1a.3y=H}F{1a.1F=2E(v.2a.1F)?v.2a.1F:v.1F}}if(v.YP==1){42(1a,{\'Xr\':\'Us\'})}tY();if(v.Xp==1){B e4=1X("e8");42(e4,{"IR":"no","IZ":"H","J2":"H","2Y":""});O(e4,{"1n":"2x","Y":"100%","1f":"100%","2R":0});1E.1R(e4);B Ip=1M.6R(E(){if(e4.jy.1T.fE==="Tl"){1M.3G(Ip);O(e4.rM.aH,{"2S":0,"2I":0});e4.rM.aH.1R(1a)}},100)}F{1E.1R(1a)}if(!J(X)){X=\'\'}B sX=L;if(o.1i.tv){if(X.I("Tm")>0){sX=H}}if(X.I(".Io")>0){5Z=H;if(!o.3J){if(1J Im!=="1I"){o.3J=1u Im()}F{5Z=L}}if(J(o.3J)){if(!J(1M.IV)){o.3J.mZ()}F{tq()}}}F if(((2M.1C==1&&v.sI!=1)||X.I(".Ij")>0)&&!sX&&(o.gy.I("7Y")!=-1||J(1M.5D))){4F=H;tr=H;3g{if(J(1M.5D)){if(!5D.J1()||(o.1i.7s&&v.Tn==1&&!o.1i.5a)||(o.1i.7s&&o.1i.5a&&v.Is==1)||(o.1i.mY&&v.To==1)){1p(\'7Y Tp \',5D.J1());4F=L}F{if(v.4v==1||v.3b==1||v.J0==1||2a){d0(L)}}}F{4F=L}}2H(2j){4F=L}}F if(X.I("w")==0&&X.I("s")==1&&v.Tq==1){8P=H;uJ()}if(o.1i.tv&&v.3b==1&&!4F&&!5Z&&!8P){1z(E(){o.U.cX()},100)}if(v.7P==1){J(o.7P)?o.7P.ao():\'\';o.7P=1u Tr()};G.tf=E(){tq()};E tq(){5Z=H;if(uv()){if(v.4v==1||v.3b==1||v.IX==1){nf(L)}}F{5Z=L;1p("Ts gN HT")}}E nf(x){if(o.3J&&!6n){o.3J.go(x,1a,X,2a);J(1M.IV)?6n=H:\'\'}}E d0(x){1p("7Y");if(o.3X.S>1){v.8Y=0;v.IT=H}F{v.IT?v.8Y=1:\'\'}if(o.aB.S>1){v.c5=0;v.IG=H}F{v.IG?v.c5=1:\'\'}o.9w=L;gR=-1;9w=[];o.3v?o.3v.IQ():\'\';B tk=L;if(v.6W&&v.IP==1){tk=H;v.IP=0}bN={HU:(v.IO==1&&!2a),Tk:(v.4v==1||v.3b==1||2a||x)&&!tk,fK:60,s7:60,Tt:(v.IJ>0?v.IJ*2h:IF),Tv:(v.IH>0?v.IH*2h:IF),Tw:L};if(v.Tx==1){bN.Ty=H}if(v.fH==1){B ks=[\'fp\',\'wv\',\'pr\',\'ck\'];B mS=[\'7U.Tz.TA\',\'7U.TB.fs\',\'7U.TC.TD\',\'3Y.w3.Tu\'];B dj={};V(B i=0;i<ks.S;i++){if(v[\'fH\'+ks[i]]==1){dj[mS[i]]={};if(2E(v[\'fH\'+ks[i]+\'l\'])){dj[mS[i]].Ti=v[\'fH\'+ks[i]+\'l\']}if(2E(v[\'fH\'+ks[i]+\'s\'])){dj[mS[i]].T7=v[\'fH\'+ks[i]+\'s\']}}}bN.Th=H;bN.SY=dj}if(v.HB==1){bN[\'SZ\']=E(4M,X){4M.T0=H}}if(J(v.6o)){if(J(v.6o.fK)){if(v.6o.fK>gg){v.6o.fK=gg}v.6o.s7=v.6o.fK}if(J(v.6o.Ho)){v.6o.s7=v.6o.fK=v.6o.Ho}if(1J v.6o=="3M"){V(B 18 in v.6o){if(v.6o[18].5Y().I(\'2g:\')==0){v.6o[18]=2g(v.6o[18].1j(5))}bN[18]=v.6o[18]}}}1C=1u 5D(bN);js("1C",1C,1);1C.If(X);1C.T1(1a);1C.on(5D.7k.T2,E(){1p("7Y T3")});1C.on(5D.7k.T4,E(1d,28){!2a?o.U.cX():\'\'});1C.on(5D.7k.T5,E(1d,28){if(!2a&&v.8Y==1&&9D()>1){Jo();mQ();o.Q?o.Q.h0(o.3m):\'\'}});1C.on(5D.7k.SX,E(1d,28){mQ()});1C.on(5D.7k.T6,E(1d,28){mQ()});1C.on(5D.7k.T8,E(1d,28){if(!2a){if(28.kp.5I!=o.5I){o.5I=28.kp.5I;o.Q.4w()}o.5I=28.kp.5I;if(o.5I){1p("T9");o.Ht=X.I("?rb")>-1;if(1a.1m>0&&1a.bK>0){if(1a.1m-1a.bK<10){if(o.iM>0){if(o.iM==1a.bK&&o.Hs==1a.1m){o.mP++;if(o.mP>2){o.mP=0;o.iM=-1;1C.9T();d0(H);7W()}}F{o.iM=-1}}F{o.iM=1a.bK;o.Hs=1a.1m}}}}}if(v.8Y==1){o.3m=1C.kD;o.Q?o.Q.h0(o.3m):\'\'}kL()});1C.on(5D.7k.Ta,E(1d,28){if(J(28.jC)){!2a?js("Tb",28.jC.Tc):\'\';if(v.Td==1){1J Hp!=="1I"?Hp(28.jC):\'\'}}if(gR>-1){1C.EX=gR;gR=-1}uL=H;HS()});1C.on(5D.7k.Te,E(1d,28){js("Tf",28,1)});1C.on(5D.7k.Tg,E(1d,28){if(!2a&&v.c5==1){1z(uT,3V)}});1C.on(5D.7k.TE,E(1d,28){if(!2a&&v.c5==1){uP()}});1C.Tj=L;if(v.TF==1){1C.on(5D.7k.U4,E(1d,28){if(1J(28)=="3M"){if(28.jC.1D==\'1W\'){B fu=28.jC.X;if(fu){B st=1C.F5;if(o.4T){o.3v.q8(st+\'bO\'+fu)}F{!9w[st]?9w[st]=[]:\'\';9w[st].2L(fu)}}}}});1C.on(5D.7k.U6,E(1d,28){B x=1C.U7;B y=\'\';V(B i=0;i<x.S;i++){y+=(y!=\'\'?\',\':\'\')+\'[\'+x[i].6x+\']1C\'+i;x[i].7G?o.mL=x[i].6x:\'\'}3B("1W",y)})}1C.on(5D.7k.U8,E(1d,28){v.1p==1?aM.1p(28):\'\';js(28.1D+\'5D\',28,0,H);o.sq=28;if(28.mM){if(28.1D=="U9"){1p("7Y mM sg 2j");if(v.sF==1){ts()}F{2j=28.kp+\' (\'+28.1D+\')\';o.29>0||2a||v.5I==1||8P?\'\':o.29=4p();1C.9T();if(!2a){o.P.5G()}}}F{B nx=L;if(28.1D=="Ua"){if(v.Ub==1&&o.P.sC()>0){nx=H}F{1p("7Y mM P 2j, j5");1C.Uc()}}F{nx=H}if(nx){2j="7Y mM 2j, 9T";1C.9T();!2a?o.P.5G():\'\'}}}F{1p("7Y ",28.1D,28.kp,(28.mO?28.mO.n4:\'\'));js("Ud",(28.mO?28.mO.n4:\'\'));if(8A>0){8A=2;sn()}}});9A=H}E mQ(){if(!2a&&v.8Y==1&&9D()>1){if(o.3m!=1C.kD){o.3m=1C.kD;o.Q?o.Q.h0(o.3m):\'\';1p("7Y U5 "+o.3m)}if(2E(v.ch)&&o.3m>0){B fq=v.ch.2q(",");V(B k=0;k<fq.S;k++){if(o.2u[o.3m].I(fq[k])>-1){1p(\'Ue 5c\');1C.kd=o.3m-1;o.3m--;1h}}}}}E uJ(){if(J(1M.HV)){if(uv()){if(!J(o.ws)){o.ws=1u Ug()}ws=1u HV(1a,X,2B(v.Uh,{HU:H}));uK=H}F{8P=L;1p("gN HT")}}}E HS(){so()};G.6d=E(){so()};E so(){if(v.Jf&&o.Q){if(1a.ex.S>0){if(v.6d==1){1a.ex[1a.ex.S-1].ki="E3"}F{1a.ex[1a.ex.S-1].ki="3h"}if(!o.6d){o.6d=H;o.Q.4w()}}F{if(o.6d){o.6d=L;o.Q.4w()}}}}E ts(){1p("Ui");!2a&&o.1y?o.U.3e():\'\';o.U.8r();8A=1;sn(o.1y)}E sn(x){if(8A>0){2G(sm);sm=1z(HQ,v.HR*2h)}}E HQ(){if(8A>0){1p("Uj");if(4F){if(8A==1){1C.If(X)}if(8A==2){1C.9T();d0(H);1a.1y()}}F{42(1a,{\'2Y\':X})}}}1a.1w(\'Uk\',JN);1a.1w(\'2j\',rA);1a.1w(\'7h\',7W);1a.1w(\'1y\',9W);1a.1w(\'4s\',dw);1a.1w(\'DX\',cq);1a.1w(\'jV\',kA);1a.1w(\'le\',kz);1a.1w(\'DT\',cj);1a.1w(\'DH\',dl);1a.1w(\'7F\',9l);1a.1w(\'DR\',9Q);1a.1w(\'Ul\',J7);1a.1w(\'DQ\',qV);1a.1w(\'DP\',qI);if(o.1i.7t){1a.1w(\'Um\',kv)}E JN(){if(!4F&&!5Z){!2a?o.U.cX():\'\'}}E kv(){if(1a.Uo){o.U.gr()}}E rA(){if(!4F&&!5Z){if(1a.2j){1p(1a.2j,1a.2j.n4,1a.2j.8p);B x=1a.2j.n4;2j=1a.2j.8p;if(2j==\'\'){if(x==1){2j="Up"}if(x==2){2j="sg"}if(x==3){2j="d9"}if(x==4){2j="gN oz"}}1p("Uf k0: ",2j)}if(tr&&v.sF==1){2j=1I;ts()}if(2j!=1I||o.1i.5a){5G()}}}E 5G(){!2a?o.P.5G():\'\'}E 7W(){if(!2a){o.P.7W()}F{if(v.2a.8N==1){1a.bK=0;1a.1y()}}}E 9W(){if(!o.1t&&v.6W){1p(\'JR 1y\');4s();o.U.2A();K}if(4F&&8A>0){}F{if(!2a){B ay=o.U.8D()&&o.mh!=1;if(ay||bH==-1){B x=L;if(4F){if(J(o.1Z)||J(o.5H)){if(ay){}F{1p(\'4s hw\');4s();x=H}}}if(!x){o.P.9W()}}}}}E dw(){if(!nV){1p("U3");if(o.1y&&o.gx&&!1a.7h&&v.Jq==1&&!o.9I){1p("Jq");jT()}F{!2a&&!o.JJ&&1a.8j?o.P.dw():\'\'}}}E cq(){!2a?o.P.cq():\'\';if(bH>-1){if(4p()>bH){4s();bH=-1}}}E kA(){!2a?o.P.kA():\'\'}E kz(){!2a?o.P.kz():\'\'}E cj(){if(2a){nk()}F{o.P.cj();tZ();if(4F&&8A>0){8A=0;1p("TR up");1C.Jv();jT();o.Q.2A()}if(J(v.8W)){2z()}1z(Jm,3V)}}E Jm(){if(1a.bS&&o.6X.S==0&&v.U2!=0){B at=1a.bS;V(i=0;i<at.S;i++){B x=o.P.uR((at[i].7E?at[i].7E+\' (\':\'\')+at[i].Jk+(at[i].7E?\')\':\'\'),i);if(x==v.aQ){o.7l=o.af=i}o.6X[i]=x}o.Q.kT(o.af)}if(o.af>0){gz(o.af,1)}};G.8W=E(){K(1a.nl/1a.eW)};E nk(){if(1a.eW>0){O(1E,{"1f":1E.2b/(1a.nl/1a.eW)-2J(v.2a.2R)})}F{if(uC<20){1z(nk,100);uC++}}}E tZ(){if(v.oB==1){3G(o.uA);o.uA=6R(uB,100);uB()}}E uB(){if(1a){if(1a.eW>0){o.U.Jh(1a.nl/1a.eW);3G(o.uA)}}}E 9Q(){!2a&&!8P?o.P.9Q():\'\'}E dl(){!2a?o.P.dl():\'\'}E 9l(){if(4F&&8A>0){}F{!2a?o.P.9l():\'\'}}E J7(){o.U.ux()}E uv(){B mm=1M.Je=1M.Je||1M.TI;B k6=1M.BG=1M.BG||1M.TJ;B mt=mm&&1J mm.mt===\'E\'&&mm.mt(Ja);B J8=!k6||k6.uq&&1J k6.uq.TK===\'E\'&&1J k6.uq.6f===\'E\';K mt&&J8}B uF="<7r C=\'1A:0.5\'>";E Jo(){if(!2a&&v.8Y==1){B x=1C.cI;B q=-1;o.2u=[];if(x.S>1){V(B i=0;i<x.S;i++){if(J(x[i].1f)){B y=o.P.Jp(x[i],v.JA);if(o.2u.I(y)>-1||v.TL==1){if(J(x[i].9F)){B yi=o.2u.I(y);yi>-1?o.2u[yi]+=" "+uF+" &eM;"+2J(x[yi].9F/2h)+\' \'+2P(\'kf\')+\'</7r>\':\'\';o.2u[i]=y+" "+uF+" &eM;"+2J(x[i].9F/2h)+\' \'+2P(\'kf\')+\'</7r>\'}}F{o.2u[i]=y}if(J(x[i].JG)){o.9V[i]=x[i].JG[0]}}F if(J(x[i].6x)){o.2u[i]=x[i].6x}F{o.2u[i]=i}if(J(v.4J)&&q==-1){if(v.4J==o.2u[i]){q=i}}if(J(o.4J)){if(o.4J==o.2u[i]){q=i}}}if(v.k9==1){o.2u[x.S]=2P("2y")}F{1C.EL=0;1C.ez=0}if(v.JF==1||q>-1){1C.ez=0;if(v.ke=="6J"||(!o.1t&&v.4v==0)){1C.qx=q}F{if(v.ke=="eE"){1C.kd=q}}o.3m=q}F{if(v.k9==1){o.3m=1C.cI.S-1}F{o.3m=1C.TM}}if(v.JC>0){1C.ez=x.S-v.JC*1-1}kL()}o.9F=2B(1C.cI[o.3m].9F,0);o.Q?o.Q.4w():\'\'}}E kL(){if(v.c5==1){uT();uP()}}E uT(){if(!2a&&v.c5==1){B x=1C.bS;o.6X=[];B 2F;B 1U=-1;if(x.S>1){V(B i=0;i<x.S;i++){2F=L;if(J(x[i].gl)&&o.9V.S>0){if(x[i].gl!=o.9V[o.3m]){V(B j=0;j<o.9V.S;j++){if(o.9V[j]==x[i].gl){2F=H}}}}if(!2F){o.6X[i]=J(x[i].6x)?o.P.uR(x[i].6x,i):i;if(J(v.aQ)){if(v.aQ==o.6X[i]){1U=i}}}}}}if(1U>-1){o.7l=1U;1C.lW=1U}}E uP(){if(!2a){B x=1C.bS;B y=1C.lW;if(y>-1){if(J(x[y].gl)){if(o.9V.S>0){if(o.9V[o.3m]!=x[y].gl){V(B i=0;i<x.S;i++){if(x[i].6x==x[y].6x&&x[i].gl==o.9V[o.3m]){1C.lW=i;y=i;1h}}}}}o.7l=y;1p("7Y TN",o.7l);o.Q.kT(o.7l)}}};G.gz=E(x,y){gz(x,y)};E gz(x,y){if(1a.bS.S>1){1a.bS[x].tW=H;1a.bS[y==1?0:o.af].tW=L;o.af=x;y!=1?1a.bK=o.P.17():\'\'}}E 4p(){if(5Z){K 6n?o.3J.17():0}F{K 1a.bK}};E 3H(){B x=1a.1m;if(x==Xq){v.5I=1;x=4p()+10;if(o.cu){x<o.cu?x=o.cu:\'\'}o.cu=x}if(5Z&&6n){x=o.3J.1m()}if(J(v.43)){if(7n([v.43],\'-\')){x=x+v.43*1}F{x=v.43}}K!uM(x)?x:0}G.2A=E(){B p=H;if(4F&&!uL){if(!9A){d0(H)}1C.Jv()}if(5Z&&!6n){nf(H);p=L}if(8P){if(!uK){uJ()}ws.1y();p=L}if(1a.C.1c=="-TP"){G.gH()}p?jT():\'\'};B TH;E jT(){if(X!="1Y"){B pp=1a.1y();if(pp!==1I){pp.bP(E(){}).2H(E(2j){1p("TQ",2j.8p);if(2j.8p.I(\'c0\')==-1&&2j.8p.I(\'TS by\')==-1){if(v.uj==1){1p(\'TT\');o.U.56();1a.1F=0;B tM=1a.1y();if(tM){tM.bP(E(){}).2H(E(e){1p("TU",e.8p);if(o.1i.tv&&(4F||5Z)){}F{o.Q.3e();o.U.8r();js("TW")}})}}F{o.Q.3e();o.U.8r()}}})}}}G.mI=E(){if(o.5H||o.1Z){if(o.8Q){d7()}if(!o.hC&&o.1i.2f&&o.1i.3N){if(!1a.3y){1a.3y=H;n8=H}O(1a,{"1n":"2x","1b":-47,"1c":-47});bH=4p();if(!8P){1a.1y()}if(bH==0&&o.29>0){ku=o.29}}}};G.gH=E(){if(!o.hC&&(o.1i.2f||o.1i.3N)){O(1a,{"1n":"o4","1b":0,"1c":0});if(J(v.8W)){2z()}if(n8){!o.3y?1a.3y=L:\'\';n8=L}if(ku>0){o.29=ku;ku=0}bH=-1}};G.3e=E(){1p(\'8j\');4s()};E 4s(){if(8P){ws.4s()}F{1a.4s()}};G.ea=E(){!1a.8j?3e():jT()};G.3P=E(x){if(5Z&&6n){o.3J.3S(x)}F{if(4F){if(v.TX==1&&x>0&&rN()){gR=1C.kd;1C.EX=0}}1a.bK=x}};G.56=E(){1a.3y=H};G.6c=E(){1a.3y=L;if(o.2i=="1C"&&o.1i.5a&&v.1Z==1){if(!J(o.EW)){nV=H;1a.4s();1z(E(){1a.1y();nV=L},10);o.EW=H}}};G.3R=E(x){1a.1F=x};G.EV=E(){if(o.EQ!=1a){B c0;B 9i;if(o.nZ[1a]){c0=o.nZ[1a];9i=o.tw[1a]}F{1M.nW=1M.nW||1M.TY;if(J(1M.nW)){3g{9i=1u nW();c0=9i.TZ(1a);o.nZ[1a]=c0;o.tw[1a]=9i}2H(e){1p(e)}}}if(9i){B k1=9i.U0();k1.k1.5A=v.ET;c0.ES(k1);k1.ES(9i.U1);o.tz=H;o.EQ=1a}}};G.nB=E(){K!1a.8j};G.5q=E(){K v.5I==1||8P?H:o.5I};G.ak=E(){K 1a};G.tN=E(){42(1a,{\'Q\':\'1\'});K H};G.4v=E(){42(1a,{\'4v\':\'8v\'});if(4F&&!9A){d0(L)}if(5Z&&!6n){nf(L)}};G.6P=E(){B 7o="7u";if(1a.8j){7o="8j"}if(1a.7h){7o="7h"}K 7o};G.tO=E(x,y){2a=x;y.1R(1a);1E=y;if(x){if(v.2a.eH!=1){1a.3y=H}F{if(!o.3y){1a.3y=L}}nk();if(o.2u.S>0){if(4F){jZ=o.3m;1C.ez=0;1C.kd=0}}}F{if(!o.3y&&v.2a.eH!=1){1a.3y=L}1a.1F=2E(v.2a.1F)?v.2a.1F:v.1F;tZ();if(o.2u.S>0){if(4F){1C.ez=-1;if(jZ>-1){jZ<1C.cI.S?1C.qx=jZ:\'\'}}}}};G.17=E(){K 4p()};G.1m=E(){K 3H()};G.a4=E(){B x=0;if(1a.8c){if(1a.8c.S>0){B y=4p();V(B i=0;i<1a.8c.S;i++){if((y>=1a.8c.1t(i)||y>=1a.8c.1t(i)-100)&&y<=1a.8c.43(i)){x=1a.8c.43(i)}}x==0?x=1a.8c.43(1a.8c.S-1):\'\'}}if(J(v.43)){B ed=v.43;if(7n([ed],\'-\')){ed=3H()}x>ed?x=ed:\'\'}K x};G.2y=E(){K rN()};E rN(){B x=L;if(4F){if(9A){x=1C.EL}}F if(5Z){if(6n){x=o.3J.2y()}}K x}G.3O=E(){K{"Y":1a.nl,"1f":1a.eW}};G.2Y=E(x){if(x){x=x.1Q(/\\(5F\\)/g,2D.5F());x=et(x);X=x;o.aw!=2?o.aw=L:\'\';if(5Z){if(6n){o.3J.c0(x)}}F if(4F){4F&&1C?1C.9T():\'\';d0(o.1t);tu()}F{42(1a,{\'2Y\':x,\'3b\':0});tY();4s()}}};E et(x){if(x){B y=x.I(\':TG:\');if(y>0){o.et=x.1j(y+6);x=x.1j(0,y)}}K x}E tY(){if(o.1i.7s){B y=1a.ex;if(y){V(B i=0;i<y.S;i++){y[i].ki="SV"}}y=1a.bS;if(y){V(i=0;i<y.S;i++){y[i].tW=(i==0?1:0)}}if(1M.Sc){1a.1w(\'SU\',E(1d){o.5M=1d.RR=="RS";!2a?o.U.gV():\'\'});1a.1w(\'RT\',E(1d){})}}tu();if(v.tS==1){1J ED!=="1I"?ED(X,1a,1E):\'\'}}G.5M=E(){1a.RU()};G.8J=E(){d7()};E tu(){if(o.1i.3N){if(J(1a.RV)&&!o.1i.7t){o.8J=H}if(1T.RW&&!1a.RX){o.8J=H}}}E d7(){if(o.1i.7s){if(1a.RY==="l1-in-l1"){1a.EP("bG");o.8Q=L}F{1a.EP("l1-in-l1");o.8Q=H}}F{if(!1T.RQ){2g(\'1a.RZ().bP(p => {o.8Q = H;}).2H(2j => {o.8Q = L;});\')}F{2g(\'1T.S1().bP(ok =>{o.8Q = L;}).2H(2j => {});\')}}};E qV(){o.8Q=H};E qI(){o.8Q=L};G.Fh=E(x){if(6n){o.3J.qk(x)}};G.Hm=E(x){if(6n){if(1a.8c.S>0){o.3J.S2(x)}}};G.S3=E(x){if(o.ws){o.ws.Fp(ws,x,-1)}};G.S4=E(x){if(o.ws){o.ws.Fp(ws,-1,x)}};G.Fo=E(x){if(9A){B y=2J(x);if(x==1C.cI.S){y=-1;1C.ez=-1}if(v.ke=="eE"){1z(9l,3V);1C.kd=y}if(v.ke=="6J"){1p("7Y 6J S5 "+y);1C.qx=y}if(y==-1){o.3m=1C.kD}kL()}};G.l7=E(){K 1C};G.lb=E(){K 6n?o.3J.S6():L};G.9D=E(){K 9D()};E 9D(){B x=0;if(9A){if(1C.cI){x=1C.cI.S}}K x}G.cH=E(){K cH()};G.f1=E(){f1()};E f1(){if(1a){if(v.lI==1||v.6i==1){if(v.S7==1||v.6i==1){O(1a,{\'3M-lT\':\'6i\'})}F{O(1a,{\'3M-lT\':\'Dp\'})}}F{O(1a,{\'3M-lT\':\'vn\'})}}}G.4N=E(){2z()};E 2z(){if(v.8W){3B(\'1K\',6E(v.8W).1Q(\'/\',\':\'))}}E cH(){B x=0;if(6n){x=o.3J.cI()}K x}G.Fb=E(x){if(9A){1C.lW=2J(x)}};G.eY=E(x,y){if(y=="1C"&&9A&&pY){pY.S8(x)}if(y=="F7"&&9A){if(9w[x]&&o.3v){V(B i=0;i<9w[x].S;i++){o.3v.q8(9w[x][i])}}1z(E(){1C.F5=x},3V)}if(y=="3J"&&6n){o.3J.S9(x)}};G.eU=E(x){if(x){1a.S0=x}};G.pX=E(){B x=1a.RO;B y=[];V(B i=0;i<x.S;i++){if(x[i].oW.oZ()==\'9M\'){x[i].6L("eu",rj);y.2L(x[i])}}V(B i=0;i<y.S;i++){1a.3q(y[i])}o.qE=L};G.E8=E(x,y,z){if(x!=\'\'){if(x.I(\' or \')>0){B xx=x.2q(\' or \');x=xx[0]}B 9M=1T.1X(\'9M\');9M.6m(\'2Y\',x);9M.6m(\'7E\',y);9M.6m(\'RD\',\'rg\');9M.6m(\'ki\',\'E3\');if(z){9M.6m(\'7G\',\'\')}1a.1R(9M);9M.1w("eu",rj)}};E rj(e){if(e.4k.7E&&o.3v){V(B i=0;i<o.3a.S;i++){if(o.3a[i]==e.4k.7E){o.3v.9g(i)}}}};G.kc=E(){K 2j?2j:\'\'};G.4c=E(){3G(o.RN);4F&&1C?1C.9T():\'\';5Z&&6n?o.3J.Ru():\'\';8P&&ws?ws.2F():\'\';1a.6L(\'2j\',rA);1a.6L(\'7h\',7W);1a.6L(\'1y\',9W);1a.6L(\'4s\',dw);1a.6L(\'DX\',cq);1a.6L(\'jV\',kA);1a.6L(\'le\',kz);1a.6L(\'DT\',cj);1a.6L(\'DH\',dl);1a.6L(\'7F\',9l);1a.6L(\'DR\',9Q);1a.6L(\'DQ\',qV);1a.6L(\'DP\',qI);1a.2Y=\'\';if(1E.oW=="JM"){1E.rM.aH.3q(1a)}F{1E.3q(1a)}1a=1S}};B rz=E(){B b=[];B gP=[];B 5l=[];B 7F=L;B nY;B 7z=L;B 1g;B W;if(o.4y){o.4y.1k();o.4y=1S}B mf;o.5L=[0.25,0.5,0.75,1,1.25,1.5,2];if(v.1g.Rv==1&&J(v.1g.kw)){v.1g.kw=v.1g.kw.1Q(/\\n/ig,\'\');o.5L=v.1g.kw.2q(",")}o.dS=7n(o.5L,1,H);o.9v==3?o.9v=o.dS:\'\';V(B i in o.5t){if(o.5t.2n(i)){!J(v.1g[i])?v.1g[i]=5:\'\';o[\'dP\'+i]=[\'+ \'+v.1g[i]+\'%\',\'&Rw; \'+v.1g[i]+\'%\',(o.5t[i]*100+\'%\')]}}if(v.1r.d5==1&&o.1i.5a&&v.fo==1){v.1r.1k=0}B mK=L;B 8Z=0;B n5=0;B eP=L;B yo=H;B hF;B bg=1u ud();B 1g;B 53=[];B qR=L;B qS=L;B ko=0;B bL=[];if(v.fc.1n=="Q-2m"){v.fc.1n="Q"}V(B y in v){if(v.2n(y)){if(y.I("9R")==0&&v[y]){!J(v[y].qQ)?v[y].qQ=v[y].53:v[y].53=v[y].qQ;if(53[v[y].53]){v[y].53+=v[y].53}53[v[y].53]=y;if(v.fc.1n!="Q"){if(v[y].1n=="Q-2m"){bL.2L([y,v[y].53]);qR=H}F{if(v[y].1n=="Q"||v[y].1n==1I){qR?qS=H:\'\'}}}ko<v[y].53?ko=v[y].53:\'\'}}}if(qS){bL.DL(E(a,b){K a[1]-b[1]});V(B i=0;i<bL.S;i++){53[v[bL[i][0]].53]=1S;v[bL[i][0]].53=ko+1;ko++;53[v[bL[i][0]].53]=bL[i][0]}}o.bB=v.1r.1k==1&&v.1r.FZ==1;if(o.bB){o.1r=1X("2c");o.1O.1R(o.1r);O(o.1r,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':\'100%\',\'1f\':\'100%\',\'5h\':\'1c 0.3s 6q-5j\',\'4A-3f\':\'1Y\'})}B 7R=1X("2c");if(o.bB){o.1r.1R(7R)}F{o.1O.1R(7R)}B aN;if(v.1r.Rx==1){aN=1u ud(H)}O(7R,{\'1n\':\'2x\',\'1b\':0,\'2K\':0,\'Y\':\'100%\',\'1f\':v.1r.h});7R.eN=E(){!o.1i.2f?o.U.E6():\'\'};if(v.t7==1){3n(bg.c());3n(7R)}V(B i=1;i<53.S;i++){if(53[i]){B y=53[i];if(y){B 1e=v[y].1e;B Ry=v[y].1k;if(o.1i.2f){if(1e=="1F"&&v[y].7w=="54"){}F{if(1e=="1F"&&v.Rz==1&&o.1i.2f){v[y].hW=0}F{if(1e=="1F"||(1e=="22"&&v.RA)){v[y].on=0}}}if(1e=="aE"){v[y].RB==1?v[y].on=0:\'\'}}F{if(1e=="aE"){v[y].Rt==1?v[y].on=0:\'\'}}if(v[y].1k==1){if(v[y].FQ==1&&J(v[y].mT)){2M[v[y].mT]?v[y].on=0:\'\'}if(v[y].FP==1&&J(v[y].mJ)){!2M[v[y].mJ]?v[y].on=0:\'\'}}if(v.t7==1){v[y].on=0}if(v[y].on==1){if(1e=="2C"||1e=="1F"){b[y]=1u G3(y,1e);b[y].2z(b[y].s("w"))}F{b[y]=1u Jz(y)}gP.2L(y);if(b[y].g("1e")=="1L"){if(b[y].s("1B")==\'\'){if(b[y].s("B")!=\'\'){if(!J(v[b[y].s("B")])){b[y].1U("2l",L)}}F{b[y].1U("2l",L)}}}if(b[y].g("1e")=="4O"){B lu=b[y].s("3d");if(lu){if(lu.I("3o:")==0&&lu.I(",0/1")>0){B z=lu.2q(",");3B(z[0].1j(4))==0?b[y].c4(0):\'\'}if(7n([lu],"2Z")){o.f6=H}}}b[y].1U("1K",b[y].s("1K"))}}}}if(J(v.1g)){if(1J(7x)==\'E\'){1g=1u 7x("1g");v.1g.7M==1?1g.1o():1g.1k()}F{o.RC=H}}if(J(v.W)){if(1J(7x)==\'E\'){W=1u 7x("W");if(J(o.W)){W.wK(o.W);if(v.W.lD==0||!J(v.W.lD)){v.W.7M==0?W.1k():\'\'}F{W.1o()}if(v.W.DU==1){W.1o()}}F{W.1k(1)}gW()}}lk();xg();2z(H);4h();wA();yo=L;E Eu(R){B x=0;B RE=L;if(R){if(R.g("1e")==\'2C\'){x=5l.1b+R.s("4m")+R.g("Y")/2;if(5l.eT!=1S){}F{5l.eT=[]}}F{if(5l.eT!=1S){B cm=R.g("Y")+R.s("4C")+R.s("4m");if(gd(R)){cm=0}if(R.s("3h")==1&&!R.g("1o")){cm=0}if(R.s("au")>0){cm=0}x=bg.g("w")-v.1r.i4*1-cm+R.g("Y")/2+R.s("4m");B i=0;5l.2m-=cm;V(i=0;i<5l.eT.S;i++){B cs=b[5l.eT[i]];if(cs.s("au")>0){O(cs.c(),{"1b":(cs.g("x0")-cm)})}F{O(cs.c(),{"1b":(cs.g("x")-cm)})}cs.1U("x0",cs.g("x"))}5l.eT.2L(R.g("18"));R.1U(\'fI\',1)}F{if(R.s("3h")==1&&!R.g("1o")&&!R.g("eK")){if(R.g("1e")=="1F"){if(R.s("1k")==1&&R.s("hW")==1&&eP){8Z+=R.g("Y")+R.s("4m")+R.s("4C");eP=L}}}F{if(R.s("au")>0){x=5l.1b+R.s("4m")+R.s("4C")}F{B 2F=L;if(R.g("1e")=="1F"){if(R.s("1k")==1&&R.s("hW")==1&&!R.g("eK")){if(!o.dW&&!o.9p){2F=H;eP=L}F{if(!eP){8Z-=R.g("Y")+R.s("4m")+R.s("4C");eP=H}}}}if(gd(R)){2F=H}if(!2F){5l.1b+=R.g("Y")/2+R.s("4m");x=5l.1b;5l.1b+=R.g("Y")/2+R.s("4C")}F{x=5l.1b}}}}}}K x};G.Ey=E(){lk();if(W&&v.W.7M&&!o.1t){W.1o()}};G.zw=E(){lk()};E lk(){if(o.f6){1J Ex==\'E\'?o.2Z=1u Ex():\'\'}}E xI(R){B Y=o.22&&v.1r.k8==0?o.aD:o.2U;B 1f=o.4Q;B aR=0;if(R!=bg){aR=Y/2+R.s("4m")-R.s("4C")}B eq=1f/2;B r3=R.g("Y");B lj=R.g("1f");B p=R.s("1n");if(p.I("8i")>-1){aR=o.2U/2+R.s("4m")-R.s("4C")}if(p.I("1c")==0){eq=lj/2+(R.s("Ev")*o.4Q/100)}if(p.I("2K")==0){eq=o.4Q-(R==bg?lj:lj/2)-(R.s("Ew")*o.4Q/100)}if(p.I("2m")>-1){aR=o.2U-r3/2+R.s("4m")-R.s("4C")-(R.s("Ep")*o.2U/100)}if(p.I("1b")>-1){aR=r3/2+R.s("4m")-R.s("4C")+(R.s("hR")*o.2U/100)}if(p.I("91")>-1){eq=-o.pN/2-(R.s("Ew")*o.pN/100)+(R.s("Ev")*o.pN/100);aR=(p=="91"?-1:1)*o.ro/2+(R.s("hR")*o.ro/100)+R.s("4m")-R.s("4C")}if(p.I("Q")>-1){B cx=Eu(R);aR=(bg?(bg.c()?5e(bg.c().hI):0):0)+cx;if(p=="Q-2m"){aR+=8Z}if(v.1r.1n=="1c"){eq=v.1r.h/2-(v.db<0?v.db:0)}F{eq=1f-v.1r.h/2}}K{x:aR,y:eq+R.s("9r")-R.s("d8")}}E 2z(9H){B w=o.22&&v.1r.k8==0?o.aD:o.2U;B h=o.4Q;if(v.1r.RF==1){v.1r.Er=2E(v.1r.Es)&&o.a5?v.1r.Es:v.1r.rw;v.1r.i4=o.2U*v.1r.Er/100}F{v.1r.i4=v.1r.rw}O(bg.c(),{\'1c\':(v.1r.1n=="1c"?0:o.4Q-v.1r.h)-v.db});bg.1U("y0",(o.4Q-v.1r.h-v.db));if(v.1r.k8==0&&bg){O(bg.c(),{\'Y\':w,\'1b\':0,\'2I-1b\':0});bg.1U("w",w);if(o.22){O(bg.c(),{\'1b\':\'50%\',\'2I-1b\':-w/2})}}5l={"1b":v.1r.i4*1,"2m":(bg.g("w")-v.1r.i4*1)};B rJ=L;if(!bg.g("1o")){bg.1U("2l",H);rJ=H}B 18;V(B i=0;i<gP.S;i++){18=gP[i];if(b[18]){B cc=xI(b[18]);if(cc){if(b[18].s("5S")=="1n"){if(J(o.6Z[18])){if(b[18].g("x0")==cc.x&&b[18].g("y0")==cc.y){3p}F{o.6Z[18].XY(b[18].g("x0"),cc.x,b[18].g("y0"),cc.y)}}}b[18].1U("x0",cc.x);b[18].1U("y0",cc.y);if(b[18].s("3h")==1&&!b[18].g("1o")&&!9H){vP(b[18])}F{O(b[18].c(),{"1n":"2x","1b":b[18].g("x0"),"1c":b[18].g("y0")})}}}}if(rJ){bg.1U("2l",L)}8Z=0;V(18 in b){if(b.2n(18)){if(b[18].s("1n")=="Q-2m"&&b[18].g("1e")!="2C"&&8Z>-1){8Z=5l.2m-5l.1b}if(b[18].g("1e")=="2C"&&bg){B bM;B ml=b[18].s("4m")+b[18].s("hR")*o.2U/100;B mr=b[18].s("4C")+b[18].s("Ep")*o.2U/100;if(b[18].s("RG")==1){if(b[18].s("RH")==1){bM=(o.2U*b[18].s("w")/100)-ml-mr}F{bM=b[18].s("w")}}F{if(b[18].s("1n").I("Q")>-1){bM=5l.2m-5l.1b-ml-mr;O(b[18].c(),{"1b":(5e(bg.c().hI)+5l.1b+ml+bM/2)});8Z=-1}F{bM=bg.g("w")-ml-mr;O(b[18].c(),{"1b":(5e(bg.c().hI)+ml+bM/2)})}}b[18].1U("x0",b[18].g("x"));b[18].2z(bM)}}}if(1g){hg(1g)}if(W){hg(W)}if(mK||o.22||n5!=8Z){4h()}}E vP(b){B 1b=0;B 1c=0;if(b.s("1n").I("2m")>-1&&b.s("1n").I("Q")==-1){1b=o.2U+b.g("Y")+10}if(b.s("1n").I("1b")>-1){1b=-b.g("Y")-10}if(b.s("1n").I("1c")>-1){1c=-b.g("1f")*2}if(b.s("1n").I("2K")>-1||b.s("1n").I("Q")>-1){1c=o.4Q+b.g("1f")+b.g("Y")+10}if(1b>0){O(b.c(),{"1b":1b})}if(1c>0){O(b.c(),{"1c":1c})}}E hg(x){B 1c=-47;x.h3();B y=o.4Q-v.1r.h*(x.s("1n").I("1c")>-1?1:2);if(x==W&&v.vO==1){y=o.4Q}B hD=y-(o.22&&!o.1i.2f?(100+x.s("hJ")*1):x.s("hJ"))-(x==W&&x.s("hJ")*1==0?x.s("9r"):0);hD<100?hD=100:\'\';O(x.c(),{\'6h-1f\':hD});x.co()?O(x.co(),{\'6h-1f\':hD}):\'\';if(x.g("1o")){1c=o.4Q/2-x.g("1f")/2+x.s("9r")-x.s("d8");if(x.s("1n").I("1c")>-1){1c=x.s("9r")-x.s("d8")}if(x.s("1n").I("2K")>-1){1c=o.4Q-(v.1r.1n!=\'1c\'?v.1r.h:0)-x.g("1f")+x.s("9r")-x.s("d8")}1c<0?1c=0:\'\'}if(x.g("18")=="1g"&&o.cS){B Ek=o.2U-x.g("Y")-x.s("4C");if(o.cS>Ek){O(x.c(),{"1n":"2x","2m":x.s("4C"),"1b":"2y","1c":1c})}F{O(x.c(),{"1n":"2x","1b":o.cS,"2m":"2y","1c":(o.hY<1c?o.hY:1c)})}}F{if(x.s("1n").I("2m")>-1){O(x.c(),{"1n":"2x","2m":x.s("4C")-x.s("l2"),"1b":"2y","1c":1c})}F if(x.s("1n").I("1b")>-1){O(x.c(),{"1n":"2x","1b":x.s("4m"),"2m":"2y","1c":1c})}F{if(x.g("18")=="W"&&x.s("3x")==1){O(x.c(),{"1n":"2x","1b":o.2U/2-x.g("Y")/2+x.s("4m")/2-x.s("4C")/2,"1c":1c})}F{B l=o.2U/2-x.g("Y")/2+x.s("4m")-x.s("4C");O(x.c(),{"1n":"2x","1b":(l>0?l:0),"1c":1c})}}}x.a8()};G.eG=E(18){B R=b[18];B a=R.g("1e");if(a){B d=1u 6M();o.9y=d.9m();if(a&&a!=""){4Y(R);a=="4s"?o.Ei=1:\'\';a=="1y"?o.Ei=0:\'\'}}pE()};G.rd=E(z,x,y){V(B 18 in b){if(b.2n(18)){if(b[18].s(z)==x){b[18].1U(y?"6N":"3n")}}}};G.t8=E(x,s){B y=7g(s,x);K y};E 4Y(R,1D){o.pt=H;mf=R;B a=R.g("1e");if(a=="1y"){o.U.2A();if(o.3y&&v.Eh==1){o.U.6c();v.Eh=0}if(v.1N.on==1&&v.1N.2O==1&&v.1N.q7==1){7i(\'1y\',1)}js("Eg")}F{if(a=="4s"){o.ma=0;o.U.3e();if(v.1N.on==1&&v.1N.2O==1&&v.1N.q7==1){7i(\'1y\',0)}js("Ed")}if(a=="2F"){o.U.md()}}if(a=="Ec"){o.U.3P(0,L)}if(a=="22"){!o.4Z?o.U.8M():\'\'}F{if(a=="Eb"){o.U.8B()}}if(a=="2C"){B ld=o.P.1m();B lt=R.g("2t")*ld;if(v.4g>0){ld-=v.4g*1;lt=R.g("2t")*ld+v.4g*1}if(v.i6>0){if(v.i6/ld<=1-R.g("2t")){K}}js(a,lt);o.U.3P(lt,H);if(o.3p){o.3p.ny(lt,ld);o.29>0?o.29=1I:\'\'}js("lM",lt)}if(a=="1F"){B x=R.g("2t");x<0.RI?x=0:\'\';x>1?x=1:\'\';if(R.s("7w")=="54"){x=3K(x*o.5L.6F(-1)[0]).ub(1);o.U.9s(x,1)}F if(R.s("7w")=="uc"){o.P.Gs(x)}F{if(o.5m&&v.rC==1){2W.7A("rF",x);if(R.g("2t")>0||o.1i.7t||v.oa==0){2W.qw("jE")}F{2W.7A("jE",1)}}o.U.3R(x)}}if(a=="5k"){if(o.5m&&!o.1i.7t&&v.oa==1){2W.7A("jE",1)}o.U.56();if(v.1N.2O==1&&v.1N.GR==1){7i(\'5k\',0)}}F{if(a=="bf"){if(o.5m){2W.qw("jE")}o.U.6c();if(v.1N.2O==1&&v.1N.GR==1){7i(\'5k\',1)}}}if(a.I("17")==0){R.RJ()?R.gT():R.On()}if(a=="pw"){o.P.wi()}if(a=="1K+"){o.P.dc(0.1)}if(a=="1K-"){o.P.dc(-0.1)}if(a=="1K"){o.P.dc(0)}if(a=="5I"){3B("pZ");R.1U("we",1);R.1U("i0",1)}if(a=="2Z"){js("2Z");xF()}if(a=="1g"){o.cS=1I;if(1g){if(!1g.g("1o")){1g.1o()}F{1g.1k()}}}if(a=="W"){if(o.fi==a){K}o.Q.hi()}if(a=="6J"){o.Q.aA()}if(a=="dM"){o.Q.e1()}if(a=="4O"){if(R.s("fy")==1&&R.s("3d")!=""){B x=4D(R.s("3d"));if(o.fi==a+x){K}if(x.I(\'{17}\')>-1){x=x.1Q(\'{17}\',(J(o.3p)?o.3p.a1().t:o.P.17()))}if(x.I(\'{3w}\')>-1){x=x.1Q(\'{3w}\',o.P.bX())}if(x.I(\'{1L}\')>-1){x=x.1Q(\'{1L}\',v.1L.1Q(/,/ig," "))}if(x=="5M"){o.P.fO()}if(x.I(\'7a\')==0){if(R.s("7a")>0){o.U.3P(o.cL?o.cL.RK():R.s("7a"))}}if(x.I(\'RL\')==0){if(o.cL){o.cL.RM()}}if(x=="Sa"){o.U.3P(R.s("hR")*o.P.1m()/100);!o.1y?o.U.2A():\'\'}R.s("GM")==1?o.U.3e():\'\';B y=x.2q(",");if(x.I("3o:")==0){B z=x.1j(4).2q(";");V(B i=0;i<z.S;i++){y=z[i].2q(",");if(y.S>1){if(y[0]==\'3S\'){if(v.1N.2O==1&&v.1N.RP==1){7i(\'3S\',y[1]>0?1:0)}}3B(y[0],y[1],R);js("lM",y[1]);y[1]==\'0/1\'||y[1]==\'1/0\'?sD():\'\'}F{if(y[0]=="GL"){B ss=3B(y[0]);if(ss){if(ss.I("28")>-1){if(v.Sb==1){B 41=1T.1X(\'41\');41.6m(\'2Y\',ss);O(41,{1n:"qh",2m:(J(v.na)?v.na:20),2K:(J(v.na)?v.na:20),Y:0,5h:"Y 0.5s bZ-Sz(.75,-0.5,0,1.75)"});41.C.51=GJ;1T.aH.1R(41);1z(E(){O(41,{Y:(J(v.GI)?v.GI:4B)})},1);41.eN=E(){G.4z.3q(G)}}if(v.SB==1){B a=1X("a");a.9u=ss;a.6Q=y[0]+".gX";a.2t()}}}F{1p(y[0]+" 2j")}}F{3B(y[0])}}}}F{if(x.I("js:")==0){if(x.I("(")>0&&x.I(")")>0){2g(x.1j(3))}F{2g(y[0].1j(3)+\'(\'+(J(y[1])?\'"\'+y[1]+\'"\':\'\')+(J(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}}if(x.I("1d:")==0){xO(x.1j(6),o.P.17())}if(x.I("2Z:")==0&&o.2Z){o.2Z.3o(x.1j(6))}if(x.I("xU:")==0&&o.5B){3B("xU",x.1j(7))}if(x.I("3L")==0||x.I("/")==0||x.I("?")==0||x.I("X:")==0){x.I("X:")==0?x=x.1j(4):\'\';1M.7I(x,R.s("GH"))}if(x.I("6Q")==0){o.U.h8()}if(x=="3o:8J"){o.P.d7()}}if(x.I("1g#")>-1){if(1g){B si=x.1j(9).2q(",");if(1g.g("1o")&&1g.g("7I")==si[0]){o.cS=1I;o.hY=1I;1g.1k()}F{o.cS=R.g("x")-R.g("Y")/2;o.hY=R.g("y")+R.g("h");V(B i=0;i<si.S;i++){i==0?1g.1o():\'\';1g.7I(si[i])}W?W.GF():\'\'}}}if(x.I("1g:")>-1&&v.1g.SC==1){if(!o.4y){o.4y=1u SD()}if(v.1g.f8==1){if(1D=="6p"){o.4y.1o(x)}F{o.4y.hS(x)}}F{if(!1D){o.4y.hS(x)}}}if(x=="IL"){o.U.eI();o.yn=0;R.1U("3n");B bl=7g("3d","4L");if(bl){bl.1U("3n")}}if(x=="4L"){R.62("OK");R.s("ov")?1M.8s.9u=4D(R.s("ov")):\'\'}}}};G.1L=E(t){B y=L;V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1L"){if(b[x].s("B")==t||t=="1L"){if(b[x].s("1k")==1&&b[x].s("wB")==1&&o.1y){y=H}if(v[t]==\'\'||y){b[x].1U("2l",L)}F{b[x].1U("2l",H)}b[x].62(v[t])}}}}xq()};G.DG=E(){xq()};G.xp=E(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="4O"){if(b[x].s("1D")=="1B"){b[x].9q()}}}}};E xq(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="4O"){if(b[x].s("1D")=="1B"){b[x].DZ(H)}}}}}E xF(){if(J(o.2Z)){o.2Z.nO()}}G.GB=E(){xF()};G.CW=E(){if(v.1L!=\'\'){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1L"){B y=L;if(!b[x].g("1o")){y=H;b[x].1U("2l",H)}b[x].62(v.1L);if(y){b[x].1U("2l",L)}}}}}};G.xk=E(){xg()};E xg(){if(v.9n){if(1J(v.9n)=="3M"){V(B x in v.9n){if(v.9n.2n(x)){h9(x,v.9n[x])}}}}};G.GA=E(y,z){h9(y,z)};G.y6=E(x){if(b[x]){b[x].v4()}};G.Gz=E(){V(B x in b){if(b.2n(x)){if(b[x].g("wk")){b[x].v4()}}}};E h9(y,z){if(y){V(B x in b){if(b.2n(x)){if(b[x].g("wk")){if(b[x].s("4E")==y){if((!b[x].g("1o")||b[x].s("3h")==1)&&!gd(b[x])){b[x].1U("Fq");b[x].1U("2l",H)}b[x].h9(z)}}}}}};G.4N=E(){2z()};G.Gx=E(){2z(H)};G.nL=E(){hg(1g)};G.h3=E(){hg(W)};G.2A=E(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1y"){b[x].On()}}}o.bU?o.bU.1k():\'\';ye();o.1y=H;4h()};G.3e=E(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="4s"||b[x].g("1e")=="2F"){b[x].gT()}}}if(W){if(v.W.It==1&&!W.4I()){W.1o()}}o.1y=L;G.7J();4h();if(v.1r.1k==1&&v.1r.gb==1){gw(H)}};G.56=E(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="5k"){b[x].On()}G.3R(0)}}4h()};G.6c=E(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="bf"){b[x].gT()}}}if(v.1F<0.1){v.1F=0.5;o.U.3R(v.1F)}F{G.3R(v.1F)}4h()};G.3R=E(1F,y){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1F"){if(!b[x].s("7w")||b[x].s("7w")=="1F"){b[x].6A(1F,1,(y=="no"?y:H))}}if(b[x].g("1e")=="5k"){b[x].wF(1F)}}}4h()};G.8M=E(){B bl=7g("1e","22");if(bl){bl.On();bl.1U("1K",bl.s("1K"))}4h();mK?1z(4h,3V):\'\';if(o.22&&o.JS){if(o.1i.hQ||o.1i.tv){1z(2z,10)}}gA();xu()};G.8B=E(){B bl=7g("1e","22");if(bl){bl.gT()}2z();3G(o.hU);4h();xu()};E xu(){if(o.cS){o.cS=1I;o.hY=1I;1g.1k()}}G.7W=E(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1y"){b[x].vp()}}}};G.tA=E(){4h()};G.D1=E(){ye()};E ye(){if(W){if(W.g("1o")&&v.W.gt==1){o.Q.cP()}}}E 4h(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")!="aE"){bV(b[x])}}}bV(bg);if(n5!=8Z){n5=8Z;2z()}if(o.bB){gc(!o.gk&&!o.4S&&!o.22&&o.1y&&v.1r.d5!=1&&!o.4Z)}};E i2(){B 1o=7z&&v.1r.hO==1;if(v.1r.1k==1){if(!o.1y&&v.1r.gb==1){1o=L}}if(1o){V(B x in b){if(b.2n(x)){if(b[x].g("1e")!="aE"){bV(b[x],L)}}}O(o.1O,{"6H":"7G"});o.hK=H;bV(bg,L);if(bg.g("1o")){hm()}gc(L)}}E gw(){B 1k=o.1y&&v.1r.hO==1&&!o.3C;if(o.dv&&v.1r.SE==1){1k=L}if(!o.1y&&v.1r.1k==1&&v.1r.gb==1){1k=H}if(1g){if(1g.g("1o")&&o.n1){1k=L}}if(o.4Z){1k=L}if(1k){V(B x in b){if(b.2n(x)){if(b[x].g("1e")!="aE"){bV(b[x],H)}}}bV(bg,H);if(!bg.g("1o")){7z=H;o.P.xJ();if(o.1y){O(o.1O,{"6H":"1Y"});o.hK=L}}gc(H)}}E gA(){if(v.1r.hO==1){if(v.1r.d5==1&&!o.22&&!o.aC){}F{3G(o.hU);o.hU=6R(gw,((v.1r.9t>0?v.1r.9t:v.1r.hX)*2h))}}}E bV(R,bE){B 1k=L;B 1o=L;B bA=L;if(v.1r.1k==1){if((!o.gk&&!o.4S&&!o.22&&o.1y&&v.1r.d5!=1&&!o.4Z)||(o.22&&7z&&!o.hK)||(o.U.gF()&&o.7h&&!o.4S)){1k=H;1o=L;bA=H}F{1k=L;1o=H}if(J(bE)&&!o.4Z){1k=bE;1o=!1k}if(o.bB&&(R.s("1n").I("Q")==0||R.s("1e")=="2C")){1k=L;1o=H}if(v.1r.gb==1&&!o.1y){1k=H;1o=L;bA=L}if(v.1r.SF==1&&!o.8v&&o.1y){1k=L;1o=H}}F{if(R.s("1k")!=1){1o=H}}if(1o&&!o.hK){O(o.1O,{"6H":"7G"});o.hK=H}B a=R.g("1e");if(a=="4O"&&R.s("1n").I("Q")==-1){1k=L;1o=H}if(o.4Z){if(a=="2C"){if(o.P.1m()==-1){1k=H;1o=L}}}B xG=L;B hp=gd(R);if(R.s("1k")==1){if(R.s("SG")==1){if(bA||bE||(o.1y&&!o.4S)){!bA&&!bE?\'\':hp=H}}if(R.s("SH")==1){if(!bA&&!bE){hp=H}}if(R.s("SI")==1){if(o.1y&&!o.4S){hp=H}}if(R.s("GY")==1||R.s("H2")==1||R.s("Fx")==1){mK=H}}if(hp){1k=H;1o=L}F{!1k?1o=H:\'\'}if(R.s("1e")=="1F"){if(R.s("1k")==1&&R.s("hW")==1&&!R.g("eK")){1k=H;1o=L;if(!bA&&(o.9p||o.dW)&&!bE&&R.s("dZ")!=1){1k=L;1o=H}F{xG=H}}}if(o.9I||(!o.1t&&v.1r.1k==1&&v.1r.xN==1)||(!o.8v&&v.1r.1k==1&&v.1r.FH==1)||(!o.22&&v.1r.1k==1&&v.1r.SA==1)){if(R.s("1n").I("Q")>-1||R.s("1n").I("2K")>-1){1k=H;1o=L}if(v.1r.d5==1&&!o.22){1k=L;1o=H}}if(1g){if(1g.g("1o")&&v.1g.7M!=1){bA=L;bE=L}}if(W&&o.2X){if(v.W.SJ==1){if(o.2X.Hf()){K}}}if(a=="2Z"){if(J(o.2Z)){if(o.2Z.4I()){1k=H;1o=L;R.1U("5S","1Y")}}}if(a=="W"||a=="6J"||a=="dM"||R.s("He")==1){if(W){if(W.4I()&&R.s("He")!=0){1k=H;1o=L;R.1U("5S","1Y")}}F{1k=H;1o=L}}if(o.SL==1){1k=H;1o=L}if(xG){B cc=xI(R);if(cc){cc.y>0?R.1U("y0",cc.y):\'\';O(R.c(),{"1n":"2x","1c":R.g("y0")})}}if(1k){9K(R,(yo?H:L))}if(1o){Gm(R)}if(R==bg){if(!1k&&1o){hm();6N(7R);aN?aN.1U("1A",aN.s("a")):\'\';7z=L;hF==0?js("ui",1):\'\';hF=1;o.5X&&o.9x?o.5X.1o():\'\'}if(1k&&!1o&&!o.4Z){o.P.xJ();bp();3n(7R);aN?aN.1U("1A",0):\'\';7z=H;hF==1?js("ui",0):\'\';hF=0;o.5X&&o.9x?o.5X.1k():\'\'}if(1g){if(1g.tb()){if(!1g.g("1o")){1o&&!1k?1g.1o():\'\'}F{!1o&&1k?1g.1k(2):\'\'}}}if(W){if(v.W.7M==1&&!W.4I()){if(1o||o.9I){if(v.W.H9==1&&o.22){}F{if(!W.g("1o")){if(v.W.H7==1){!o.1y?W.1o():\'\'}F{W.1o()}}}}F{if(1k&&W.g("1o")){W.1k()}}}}}};E gd(R){B x=L;B a=R.g("1e");if(R.s("1k")==1){if(R.s("wB")==1){o.1y?x=H:\'\'}if(R.s("gb")==1){!o.1y?x=H:\'\'}if(R.s("SM")==1){o.7h?x=H:\'\'}if(R.s("fr")==1){x=H}F{if(R.s("SN")==1){if(o.1i.cz){R.1U("fr",1);x=H}}if(R.s("SO")==1){if(o.1i.2f){R.1U("fr",1);x=H}}}if(R.s("H2")==1){if(o.2U>R.s("H1")){R.1U("dZ",1);x=H}F{R.1U("dZ",0)}}if(R.s("SP")==1&&!7F){x=H;o.nc=1}if(R.s("SQ")==1&&7F){x=H;o.nc=1}if(R.s("GY")==1){if(o.2U<=R.s("GW")){R.1U("dZ",1);x=H}F{R.1U("dZ",0)}}if(R.s("SR")==1){o.1t?x=H:\'\'}B t=o.P.17();B d=o.P.1m();if(R.s("IN")==1&&R.s("Gr")>0){if(t>=R.s("Gr")){x=H}}if(R.s("IW")==1&&R.s("Gq")>0){if(t<R.s("Gq")){x=H}}if(R.s("J3")==1&&R.s("FU")>0){if(t<d-R.s("FU")||d==0){x=H}}if(R.s("SS")==1){if(W){if(!W.bz()){x=H}}}if(R.s("ST")==1){if(o.1t||!o.3p||o.P.5q()){x=H}if(o.3p){if(o.3p.a1().t==0){x=H}}}if(R.s("xN")==1){!o.1t?x=H:\'\'}if(R.s("mN")>0){x=H}if(R.s("FQ")==1){if(J(R.s("mT"))){2M[R.s("mT")]?x=H:\'\'}}if(R.s("SK")==1){if(!J(R.s("9n"))){x=H}}if(R.s("FP")==1){if(J(R.s("mJ"))){!2M[R.s("mJ")]?x=H:\'\'}}if(R.s("Sy")==1&&o.1i.5a){!o.1t||o.mU?x=H:\'\'}if(R.s("Sn")==1){!o.P.7h()?x=H:\'\'}if(R.s("Sx")==1){!o.P.5q()?x=H:\'\'}if(R.s("Se")==1){!o.4S?x=H:\'\'}if(R.s("Sf")==1){!o.22?x=H:\'\'}if(R.s("Fx")==1){o.22?x=H:\'\'}if(R.s("Sg")==1){!o.3y?x=H:\'\'}if(R.s("Sh")==1){o.P.5q()&&o.P.bX().I("?rb")==-1?x=H:\'\'}if(R.s("FA")==1){5N(o.2e)?x=H:\'\'}if(R.s("FH")==1){!o.8v?x=H:\'\'}if(R.s("Si")==1){o.8v?x=H:\'\'}if(R.s("Sj")==1){o.mV?x=H:\'\'}if(R.s("Sk")==1){!o.mV?x=H:\'\'}if(R.s("Jy")==1){if(R.g("hB")){x=H}}if(R.s("Sl")==1){!o.ab?x=H:\'\'}if(R.s("Sd")==1){o.ab?x=H:\'\'}if(R.s("Sm")==1){if(v.4v==1&&v.e2==1){if(o.2i=="4x"&&!J(v.2e)&&v.vE==0){if(!o.1t||o.P.6P()=="7h"){if(v.2e==\'\'){}F{x=H}}}}}}if(a=="4O"){B lu=R.s("3d");if(lu){if(lu=="3o:5M"||lu=="5M"){if(!o.5M&&!o.hC){x=H}}if(lu=="3o:8J"){if(!o.8J||(!o.1t&&v.4v==0)){x=H}}if(lu=="3o:Fy"){if(!o.mV){x=H}}if(lu.I("6d")>-1){if(!o.6d){x=H}}if(7n([lu],"7a")&&!7n([lu],"js:")&&R.s("fr")!=1){B sk=L;if(J(v.7a)){if(!o.cL){1J FK==\'E\'?o.cL=1u FK():\'\'}if(o.cL){sk=o.cL.vL(R)}}!sk?x=H:\'\'}}}if(a=="W"||a=="6J"||a=="dM"){if(W){if(W.4I()){x=H}}F{x=H}}if(a=="1g"){if(1g){if(1g.4I()){x=H;o.2i!=\'1C\'?R.1U("5S","1Y"):\'\'}}F{x=H}}if(R.g("1D")=="1B"){if(R.g("S")==0){x=H}}if(R.g("1g#")){if(!R.g("1U#4j")){x=H}}if(R.s("4a")==1){B cb=1T.8n("So"+v.id);if((o.P.1m()==0&&o.P.17()==0)||!o.4u||!5N(cb)||!o.Sp){x=H}}if(R.s("wh")==1){!x?R.1U("wh",1):\'\'}if(a=="1m"){if(o.P.5q()){x=H}}if(R.g("18")=="vw"&&o.1i.2f){if(o.9I&&o.1i.as){x=H}}K x}E 9K(R,vv){if(R.g("1o")){if(o.aC||R.s("5S")=="1Y"||vv){R.1U("2l",L)}F{Gk(R)}R.1U("1o",L)}};E Gm(R){if(!R.g("1o")){if(R.s("5S")=="1Y"||o.aC){R.1U("2l",H);if(o.aC){R.1U("1A",1)}if(R.g("1e")=="1F"){if(o.hN){vP(R)}}}F{Gj(R)}if(R.s("1e")=="1F"){o.Q.3R(o.3y?0:v.1F)}if(R.s("1e")=="2C"){o.U.vR()}R.1U("1o",H)}};E Gk(R){vV(R.g("18"));B 5w="fs|";B 5i="0|";B 1k=1;B a=R.s("5S");if(R.s("Gh")==1){5w=\'\';5i=\'\'}B p=R.s("1n");B hr=R.g("3k");2E(R.s("mk"))?p=R.s("mk"):\'\';h4(p,[\'2K\'])&&o.bB?p="":\'\';if(a=="1K"){5w+="1K|";5i+="0|"}if(a=="1n"){if(p.I("2m")>-1&&p.I("Q")==-1){5w+="x|";5i+=5e(o.2U+R.g("Y")/2*hr)+"|"}if(p.I("1b")>-1){5w+="x|";5i+=5e(-R.g("Y")/2)*hr+"|"}if(p.I("1c")>-1){5w+="y|";5i+=(-R.g("1f")/2)*hr+"|"}if(h4(p,["2K","Q","91"])){5w+="y|";if(R.g("1e")=="2C"||R.g("1e")=="1F"){5i+=5e(o.4Q+R.s("h")+(R.s("h")<20?20-R.s("h"):0))+"|"}F{5i+=5e(o.4Q+R.g("1f")/2)+"|"}}if(p=="8i"){5w+="1K|";5i+="0|"}}B m=1u 5y({"mc":R,"me":R.g("18"),"1D":5w.1j(0,5w.S-1),"to":5i.1j(0,5i.S-1),"1k":1k})};E Gj(R){vV(R.g("18"));B 5w="";B 5i="";B a=R.s("5S");B p=R.s("1n");2E(R.s("mk"))?p=R.s("mk"):\'\';if(R.g("1A")!=1&&R.s("Gh")!=1){5w="fs|";5i=(R.g("18")==\'bg\'?v.1r.a:"1")+"|"}if(a=="1K"){if(R.g("3k")!=R.s("1K")){5w+="1K|";5i+=R.s("1K")+"|"}}if(a=="1n"){if(p=="8i"){if(R.g("3k")!=R.s("1K")){5w+="1K|";5i+=R.s("1K")+"|"}}F{if(p.I("Q")>-1){if(R.g("y")!=R.g("y0")){5w+="y|";5i+=R.g("y0")+"|"}}F{5w+="x|y|";5i+=R.g("x0")+"|"+R.g("y0")+"|"}}}if(5w!=""&&5i!=""){B m=1u 5y({mc:R,me:R.g("18"),1D:5w.1j(0,5w.S-1),to:5i.1j(0,5i.S-1),1o:1})}F{R.1U("2l",H)}};G.i8=E(18,1D,vv){B 4N=L;B 2F=L;B R=b[18];B 1e=R.g("1e");B 3d=R.s("3d");if(1D=="6p"){if(o.hN){if(1e=="1F"||1e=="5k"||1e=="bf"){if(!R.g("eK")){o.9p=H;o.dW=H;4N=H;4h();if(v.fc.Ft==1){B bl=7g("1e","2C");if(bl){3n(bl.c())}}}}}if(1g&&v.1g.f8==1&&((1e=="1g"||3d.I("G0")==0)||3d.I("1g:")==0)){2G(o.fb);if(!1g.g("1o")||mf!=R){4Y(R,1D);o.fi=1e+3d;1z(E(){o.fi=1S},3V)}}if(W&&v.W.f8==1&&1e=="W"){2G(o.v5);if(!W.g("1o")||mf!=R){4Y(R,1D);o.fi=1e;1z(E(){o.fi=1S},3V)}}}if(1D=="5j"){if(o.hN){if(1e=="1F"||1e=="5k"||1e=="bf"){o.9p=L;o.dW=H;1z(E(){if(!o.9p){o.dW=L;V(B x in b){if(b.2n(x)){if(!7z){if(b[x].g("1e")=="1F"&&!b[x].g("eK")){9K(b[x]);2z()}}if(b[x].g("1e")=="2C"){if(v.fc.Ft==1){6N(b[x].c())}}}}}},3V)}}if(1e=="2C"){o.U.6A(1)}if(v.1g.f8==1&&((1e=="1g"||3d.I("G0")==0)||3d.I("1g:")==0)){2G(o.fb);o.fb=1z(E(){if(!o.3C){bp(1)}},(v.1g.f7>0?v.1g.f7*2h:2h))}if(W&&v.W.f8==1&&1e=="W"){2G(o.v5);o.v5=1z(E(){if(!o.3C){W.g("1o")?W.1k(1):\'\'}},(v.W.f7>0?v.W.f7*2h:2h))}}if(4N){1z(2z,10)}};G.oM=E(){if(o.5g&&!o.22&&!o.aC){o.U.5g(L);o.5g=L}if(o.2e){if(v.nH>-1&&5N(o.2e)){O(o.2e,{1A:v.nG})}}if(o.1y&&v.G7==1&&v.Sq!=0){o.U.3e()}if(v.1r.9t>0){2G(o.G6);o.G6=1z(4h,v.1r.9t*2h)}F{4h()}};G.Cp=E(){if(o.2e){if(v.nH>-1&&5N(o.2e)){O(o.2e,{1A:v.nH})}}if(!o.1y&&v.G7==1){o.U.2A()}4h();gc(L)};G.fQ=E(b4,aS){B y;V(B x in b){if(b.2n(x)){y=b[x].g("1e");if(y=="2C"||y=="1F"){b[x].fQ(b4,aS)}}}};G.xB=E(){if(v.1r.1k==1){if(v.1r.d5==1&&!o.22){K}if((!o.4S||o.1i.2f)&&o.P.6P()=="7u"){o.4S=H;4h();o.1i.2f?1z(E(){o.4S=L},3V):\'\'}if(v.1r.hO==1){i2();gA()}gc(L)}};G.fT=E(b4,aS){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="2C"||b[x].g("1e")=="1F"){b[x].fT(b4,aS)}}}};G.dy=E(17,1m,Gf){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="2C"){b[x].6A(17,1m,Gf)}if(b[x].g("1e")=="17"){dE(b[x],17,1m)}if(b[x].s("HZ")==1){b[x].wi()}if(b[x].s("HX")==1){b[x].GU(17,1m)}if(b[x].s("Ii")==1){if(b[x].s("3d")=="IE"||b[x].s("3d")=="9F"){1J Gl==\'E\'?Gl(b[x]):\'\'}if(b[x].s("Ik")==1&&!b[x].g("1o")&&7z){}F{if(b[x].g("1o")==gd(b[x])){4h();2z()}}}}}};E gc(x){if(v.1r.1k==1){x?bp():\'\';if(o.bB){if(!o.1y&&v.1r.gb==1){x=H}if(x&&!o.vk){O(o.1r,{"1c":bg.h()})}if(!x&&o.vk){O(o.1r,{"1c":0})}o.vk=x}}}E hm(){7z=L;o.P.hm();if(o.wl){o.wl=L;2z();1z(2z,dz)}}E dE(x,17,1m){if(v.4g>0){17-=v.4g*1;1m-=v.4g*1}B y=4p(17);if(x.s("Jl")=="1"){y=4p(1m-17)}if(x.s("Sr")=="1"){if(x.s("Ss")=="1"){y=y+(1m>0?\' \'+2P(x.s("St"))+\' \'+4p(1m):\'\')}F{17==0?y=4p(1m):\'\'}}x.62(y)}G.vm=E(17,1m){B x=7g("1e","2C");if(x){x.E5(17,1m)}};G.k5=E(y){if(o.P.1m()>0){B x=7g("1e","2C");if(x){x.k5(y)}}};G.8K=E(){if(!7F){if(v.fJ==1){2G(nY);nY=1z(8K,3V)}F{8K()}}};E 8K(){if(!7F){js("Su");7F=H;B x=7g("1e","aE");if(x){x.FD();if(v.FV==1&&o.1y){2G(o.FM);o.FM=1z(FR,(v.FN>0?v.FN:1)*2h)}}o.nc?4h():\'\'}}E FR(){if(o.1y&&7F){o.U.8r()}}G.FS=E(y){V(B x in b){if(x==y){b[x].1U("3n")}}};G.7J=E(){2G(nY);if(7F){js("8c");B x=7g("1e","aE");if(x){x.hP();if(v.FV==1&&o.1y){o.U.g1()}}7F=L;o.nc?4h():\'\'}};G.he=E(){B x=7g("3d","1F 8O");if(x){x.1U("6N");x.62(2P(\'1F\')+\' \'+(o.3y?0:2D.qo(v.1F*100))+\'%\');2G(o.he);o.he=1z(GX,2h)}};E GX(){B x=7g("3d","1F 8O");if(x){x.62(\'\');x.1U("3n");2G(o.he)}}G.3P=E(17,1m){if(v.4g>0){17-=v.4g*1;1m-=v.4g*1}V(B x in b){if(b.2n(x)){if(b[x].s("on")==1){if(b[x].g("1e")=="2C"){1m>0?b[x].1U("2t",17/1m):\'\';b[x].E4()}if(b[x].g("1e")=="17"){dE(b[x],17,1m)}if(b[x].g("1e")=="5I"){b[x].1U("we",0.5);b[x].1U("i0",0)}}}}};G.3H=E(17,1m){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1m"){if(v.4g>0){1m-=v.4g*1}b[x].62(4p(1m))}if(b[x].g("1e")=="2C"){b[x].6A(17,1m);b[x].DN(1m)}if(b[x].g("1e")=="17"){dE(b[x],17,1m)}}}};G.7x=E(){if(!o.4y){1g.g("1o")?1g.1k():1g.1o()}};G.cN=E(){if(1g){if(o.4y){K o.4y.5N()||1g.g("1o")}F{K 1g.g("1o")?H:L}}F{K L}};G.ng=E(x){if(1g){1g.5t(x)}};G.bp=E(){bp()};G.Sv=E(x){if(1g){1g.H3(x)}};G.AJ=E(){if(1g){1g.hj()}};G.AG=E(x){if(1g){K 1g.H4(x)}};E bp(x){if(1g){1g.g("1o")?1g.1k(x):\'\'}o.4y?o.4y.1k():\'\'};G.cP=E(){if(W){if(W.g("1o")){W.1k(1)}F{W.1o()}}};G.hi=E(x){if(W){if(W.g("1o")&&x!=1){x!=2?W.1k():\'\'}F{1z(E(){W.1o()},100)}}};G.h5=E(){if(W){K W.g("1o")?H:L}F{K L}};G.bu=E(x){K W?W.g(x):\'\'};G.6e=E(x){if(W){W.wK(x)}};G.GV=E(x){if(W){W.Hh(x)}};G.aA=E(){if(W){W.aA()}};G.nm=E(){if(W){W.nm()}};G.gW=E(){gW()};E gW(){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="6J"){O(b[x].c(),{"1A":(!W.bz()?0.5:1)})}if(b[x].g("1e")=="dM"){O(b[x].c(),{"1A":(!W.gM()?0.5:1)})}}}}G.bz=E(){if(W){K W.bz()}F{K L}};G.gM=E(){if(W){K W.gM()}F{K L}};G.f4=E(){if(W){K W.f4()}F{K L}};G.nw=E(){if(W){W.nw()}};G.e1=E(){if(W){W.e1()}};G.Gy=E(x){if(x&&W){W.bo(x)}};G.Ef=E(x){if(x&&W){W.nz(x)}};G.Et=E(x){if(x&&W){O(W.co(),{"Sw":"1Y","2S-2m":W.s("7b")});1T.8n(x).1R(W.co());3n(W.c())}};G.Uq=E(){};G.x6=E(x){if(1g){1g.5U();1g.g("1o")?1z(E(){1g.1k()},4B):\'\'}};G.h0=E(){if(1g){1g.5U()}if(o.4y){o.4y.dY()}};G.gV=E(x){if(1g){1g.fO()}2z();4h()};G.lR=E(x){if(1g){1g.hL(x);1g.g("1o")?1g.1k():\'\'}if(o.4y){o.4y.dY()}x=="54"?wA():\'\'};E wA(){if(o.jv){B x=3K(o.h6/o.5L.6F(-1)[0],1).ub(2);V(B i in b){if(b.2n(i)){if(b[i].s("7w")=="54"&&o.h6){b[i].6A(x,1)}if(b[i].s("3d")=="3o:54,1.0"){b[i].wF(x)}}}}}G.kT=E(x){if(1g){1g.hL("7y")}if(o.4y){o.4y.dY()}};G.ba=E(){if(1g){1g.9g();1g.g("1o")?1z(E(){1g.1k()},4B):\'\'}if(o.4y){o.4y.dY()}if(o.4Z&&o.4u){o.4a.9X()}};G.w9=E(){o.4y?o.4y.1k():\'\';if(1g){1g.w9()}};G.hT=E(la,2l,7B){V(B x in b){if(b.2n(x)){if(b[x].g("1e")=="1g"){if(b[x].s("g0")==1){b[x].Gb()}}if(b[x].g("Fr")=="1g#"+la){b[x].1U("1U#4j",2l);if(b[x].g("1D")=="1B"){if(7B){b[x].62(wb(7B))}}F{if(v.1g[\'1g\'+la+\'1e\']=="1W"){if(7B==2P("6O")){b[x].c4(0)}F{b[x].c4(1)}}2z()}bV(b[x])}}}};G.Fl=E(){if(1g){1g.5U();1g.hL("7y");1g.hL("6Q")}};G.kl=E(){B x=7g("1e","2C");if(x){x.kl()}};G.4N=E(){2z();if(7z){o.wl=H}};G.wH=E(x){if(!7z||x==1){2z();4h()}F{v.1r.wm=H}};G.wn=E(){B b=7g("1D","O");if(b){b.G8()}};G.4w=E(){4h();2z();4h();if(o.9I){3n(7R)}F{!7z?6N(7R):\'\'}};G.B5=E(1d){if(cW==v.id&&v.1N.on==1){B x=1d.Hl;B y=L;if(x==1I){x=1d.Fw}if(J(o.1Z)||J(o.8a)||o.yn==1){K L}if(o.1y&&v.1N.hw==1){y=H}if(((v.1N.8U==1&&x==32)||(v.1N.SW==1&&x==13))&&(o.5V||o.4S||y)){if(v.1N.2O==1){7i(\'1y\',o.1y?0:1)}o.U.ea();1d.aa();K L}!v.1N.lO?v.1N.lO=0.2:\'\';!v.1N.1K?v.1N.1K=5:\'\';if(v.1N.EH==1&&(o.5V||y)){if(o.P.1m()>0){V(B i=48;i<58;i++){if(x==i){o.U.3P((o.P.1m()*(x-48)*10)/100,H)}}}}if(x==39&&(o.5V||y)){kI(v.1N.x9)}if(x==37&&(o.5V||y)){lc(v.1N.x9)}if(x==38&&(o.5V||y)){kI(v.1N.wu)}if(x==40&&(o.5V||y)){lc(v.1N.wu)}if(x==Ur&&(o.5V||y)){kI(v.1N.EY)}if(x==VX&&(o.5V||y)){lc(v.1N.EY)}}};E 7g(y,z){V(B x in b){if(b.2n(x)){if(b[x].s(y)==z){K b[x]}}}}E kI(x){if(x=="6J"){if(o.W){o.Q.aA()}F{x="3S"}}if(x=="3S"){if(o.P.1m()>0){B sk=o.P.17()+3K(v.1N.3S);if(sk<o.P.1m()){o.U.3P(sk,H);js("lM",sk)}}}if(x=="1F"){o.U.3R(3K(v.1F)+3K(v.1N.lO));1d.aa()}if(x=="1K"){o.P.1K(v.1N.1K/100);1d.aa()}if(v.1N.2O==1){7i(x,1)}}E lc(x){if(x=="6J"){if(o.W){o.Q.e1()}F{x="3S"}}if(x=="3S"){if(o.P.1m()>0&&o.1t){B sk=o.P.17()-v.1N.3S>=0?o.P.17()-v.1N.3S:0;o.U.3P(sk,H);js("lM",sk)}}if(x=="1F"){o.U.3R(3K(v.1F)-3K(v.1N.lO));1d.aa()}if(x=="1K"){o.P.1K(-v.1N.1K/100);1d.aa()}if(v.1N.2O==1){7i(x,0)}};G.D9=E(1d){if(cW==v.id){B x=1d.Hl;if(x==1I){x=1d.Fw}if(x==57){if(v.1p==1){}}if(o.22&&x==27){o.U.8B()}if(J(o.1Z)||J(o.8a)){K L}if(v.1N.f==1&&x==70&&v.fJ!=1&&(o.5V||o.4S)){if(v.1N.2O==1){7i(\'22\',o.22?0:1)}o.22?o.U.8B():o.U.8M()}if(v.1N.s==1&&x==83&&(o.5V||o.4S)){if(o.3v){if(v.1N.2O==1){7i(\'1W\',o.4T?0:1)}3B("Jt")}}if(v.1N.m==1&&x==77&&(o.5V||o.4S)){if(v.1N.2O==1){7i(\'5k\',o.3y?1:0)}o.3y?o.U.6c():o.U.56()}}};G.4c=E(){3G(o.hU);V(B x in o){if(x.I("Z")==0&&x.I("A1")>-1){3G(o[x])}}V(B i=0;i<gP.S;i++){18=gP[i];if(b[18]){b[18].4c()}}if(1g){1g.4c()}if(W){W.4c()}bg.4c();aN?aN.4c():\'\';if(7R.4z==o.1O){o.1O.3q(7R)}F{o.1r?o.1r.3q(7R):\'\'}};G.i2=E(){i2()};G.gw=E(){gw();4h()};G.gA=E(){gA()};G.pH=E(){K 7z}};B Jz=E(18){B i;B C=[];B w;B h;B wI=0;B bg;B pD;B 9a;B om=0;B 4j=H;B JX=L;B 3k=1;B 3t=1;B 2r;B hv;B 2N;B 8g;B 1e;B 9N=\'\';B x0;B y0;B on;B 6p=L;B bw=L;B ho=0;B Wm;B Wn=0;B fI=0;B Il=0;B hx=0;B pa=L;B Ez=L;B hB=L;B 3h=L;B i5;B g0;B ot;B wc=L;C=9G(C,fj.R);C=9G(C,v[18]);B U=[C.1e];1e=U[0];J(C.JD)?U[1]=C.JD:\'\';J(C.Jg)?U[1]=C.Jg:\'\';J(C.1L)?C.1B=C.1L:\'\';if(2E(C.Jc)){o.a5?C.1K=C.Jc:\'\'}if(1e=="2Z"){o.f6=H}if(J(C.3d)){if(C.1D=="1B"&&C.3d!=\'\'){if(J(v[C.3d+\'1B\'])){C.1B=v[C.3d+\'1B\']}}if(C.3d.I("1g#")==0){9N=C.3d;if(C.2N==\'\'&&9N.I(",")==-1){C.2N=2P(v.1g[\'1g\'+9N.1j(9)+\'1e\'])}}if(C.3d.I("6d")>-1){v.Jf=H}if(C.3d.I("2Z:")>-1){o.f6=H}if(C.3d=="Wo"){C.Wp=1u Wq(C)}}B 7q=C.2N?C.2N.2q("///"):[];if(C.Jn==1){C.1D="1B";C.1B=gU(0)+(U.S>1?\'///\'+gU(1):\'\');if(2E(C.aV)){C.1v=C.aV}}C.it=[];C.il=[];B xr=0;B 2O=1u cp();B 1q=1u cp();B d3=1u cp();B Wr=1u cp();B gY=0;B b0;if(C.1D=="1B"){if(C.4E){if(J(v[C.4E+\'1B\'])){C.1B=v[C.4E+\'1B\']}}if(J(C.1B)){2O[0]=4D(C.1B);C.p0=C.1B.S;B vc=[\'/\',\'|\',\'-\'];vc.I(C.1B.1j(-1))>-1?C.wR=C.1B.1j(-1):\'\';vc.I(C.1B.1j(0,1))>-1?C.wT=C.1B.1j(0,1):\'\';if(1e=="17"||1e=="1m"){if(C.1B.I(\'0:\')==0){C.p3=H}if(C.1B.2q(":").S==3){C.DY=H}F{if(C.1B.I(\'bF:bF\')>-1){C.GN=H}}if(C.lG==1){v.lG=1}}if(C.Jl==1&&C.1B.I("-")==0){C.GS=H}if(C.1B.I("///")>0&&(1e=="4O"||C.Jn==1)){C.gS=C.1B.2q("///");C.1B=2O[0]=C.gS[0]}}if(v.v6==1){1z(9q,100);1z(9q,3V);1z(9q,2h)}}F{if(J(C.1q)){2O[0]=C.1q;if(2O[0].I("///")>0&&2O[0].I("kC")==-1){2O=C.1q.2q("///")}if(J(C.pL)){2O[1]=C.pL}if(C.H5==1){if(2E(C.JL)){2O.2L(C.JL);gY=2O.S-1}}}}if(1e=="4O"){if(C.Ws==1&&J(C.ov)){C.wG=C.3d}}B Z=1X("2c");if(C.1n.I(\'91\')>-1){o.91?o.91.1R(Z):1z(E(){o.91.1R(Z)},100);o.JS=H}F{if(h4(C.1n,["Z","2K"])&&o.bB){o.1r.1R(Z)}F{o.1O.1R(Z)}if(1e=="aE"&&C.Wt==1){Z.C.51=xa}}if(C.HX==1){C.hb=1u Wl(C,Z)}B pD=1X("2c");Z.1R(pD);B dU=1X("2c");O(dU,{"1n":"2x","1b":0,"1c":0});Z.1R(dU);O(Z,{"1n":"2x","1b":0,"1c":0,"1A":1,"eb":"po","oU":"iN"});if(2E(C.4E)){42(Z,{"id":(v.id+"4o"+"9R"+C.4E)})}if(C.HZ==1||C.JO==1){O(dU,{"5h":"2T 0.2s 3c"})}if(2O.S>0){V(i=0;i<2O.S;i++){1q[i]=1X("2c");O(1q[i],{"1n":"2x","1c":0,"1b":0,"ah":"1Y","1A":C.a,"5h":"1A 0.1s 3c"});if(C.gq>C.1K){O(1q[i],{"5h":"1A 0.1s 3c,2T 0.1s 3c"})}if(C.1D=="eC"&&C.2Y!=\'\'){if(2E(C.4E)){42(1q[i],{"id":(v.id+"4o"+"Z"+"4o"+C.4E+"4o"+"1q")});if(v[C.4E+\'2Y\']){C.2Y=v[C.4E+\'2Y\']}}if(h4(C.2Y,[".tE",".gX",".Wu","kC",".8T"])){C.2Y.I("//")==-1&&C.2Y.I("kC")==-1?C.2Y=\'//\'+C.2Y:\'\';B z=1X("41");C.9b=1;z.1w("eu",wU);z.2Y=C.2Y;1q[i].1R(z);C.w=1q[i].2b;C.h=1q[i].2V;if(C.HN>0){O(z,{1f:C.HN})}}}if(C.1D=="1B"){O(1q[i],{"1v":(C.1v),"eb":C.ey*2B(v.8f,1),"sa":f5(C.3Z),"ih-gf":C.hq+\'px\',"2S":"0 cK 0 cK","b9-8U":"eg"});if(o.a5){if(2E(C.Hy)){O(1q[i],{"eb":C.Hy*2B(v.8f,1),})}}if(C.2t==1){if(C.1B.I("<a ")>-1||18=="bs"){O(1q[i],{"ah":"2y"})}}if(C.HC==1){O(1q[i],{"3Z-ei":"HC"})}if(C.lq>0){O(1q[i],{"3Z-ei":C.lq})}if(C.HF){O(1q[i],{"oU":C.HF+"em"})}2O[i]==\'5I\'?2O[i]=2P("5I"):\'\';1q[i].1V=v7(2O[i]);1z(wC,100);C.w=1q[i].2b;C.h=1q[i].2V;if(2E(C.4E)){42(1q[i],{"id":(v.id+"oH"+C.4E+"Ww")})}}if(C.1D=="O"){o.1t?1z(vb,4B):\'\'}B 9c=2O[i].5Y();if(9c.I(\'B:\')==0){9c=2B(1M[9c.1j(4)],\'\')}B lv=9c.I(\'<2v\')>-1||9c.I(\'<Wx\')>-1;if(C.1D=="2v"&&(9c.I(\'<g>\')>-1||lv)){if(1e=="5k"||1e=="4O"){9c=9c.1Q(/h7/g,\'h7\'+v.id+18)}if(9c.I(\'4A\')>-1){cQ(1q[i])}1q[i].1V=(!lv?"<2v Y=\'20\' 1f=\'20\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'>":\'\')+9c+(!lv?"</2v>":\'\');1q[i].2b>20?C.w=1q[i].2b:\'\';1q[i].2V>20?C.h=1q[i].2V:\'\';O(1q[i],{"Y":C.w,"1f":C.h});if(C.aV!=-1){oQ(1q,C.aV)}if(2E(C.4E)){42(1q[i],{"id":(v.id+"oH"+C.4E+"Wy"+i)})}}dU.1R(1q[i]);i>0?1k(1q[i]):\'\'}b6();ot?wU():\'\';if(C.3d=="4a"){C.4a=1;C.1k=1;o.4a?1q[0].1V=o.4a.oq(C.aV!=-1?C.aV:\'#3F\'):\'\';if(o.1i.2f){1q[0].HO=xj;1q[0].Wz=5T;1q[0].xn=sN}F{1q[0].kj=6w;1q[0].jY=5T;1q[0].iT=dQ}}F{if((bg.2b*C.1K<35||bg.2V*C.1K<35)&&C.1D!=\'1B\'){wV();cQ(9a)}F{cQ(bg)}}if(1e=="4O"){B lu=\'\';if(C.fy==1&&J(C.3d)){lu=C.3d;if(lu.I("3o:")==0){B 1G=lu.1j(4).2q(",");if(1G.S==2){B xD=1G[1].2q("/");if(xD.S==2){1G[0]==\'hd\'?1G[0]="4J":\'\';if(v[1G[0]]==xD[1]){C.a=1;O(1q[0],{"1A":C.a})}}}}if(lu=="IL"||lu=="4L"){o.U.eJ();Z.C.51=xa;o.yn=1}}if((C.1k==1&&(C.IN==1||C.IW==1||C.J3==1))||lu.I("7a")==0||lu=="IE"||lu=="9F"){C.Ii=1;if(7n([C.1n],"Z")){C.Ik=1}}if(lu.I("7a")==0){Z.C.51=xa}}V(B sf in C){if(2E(C[sf+\'4o\'+\'B\'])){if(2E(2M[C[sf+\'4o\'+\'B\']])){C[sf]=2M[C[sf+\'4o\'+\'B\']]}}}if(1e=="1g"&&C.g0==1){g0=1u WA(Z,bg,C)}if(C.2t==0){fD(Z)}if(C.9b==1){1k(bg)}if(C.2r==1){oV()}if(C.1n.I("2m")>-1){fI=1}if(C.1n.I("1c")>-1){Il=1}if(C.1n.I("2K")>-1||C.1n.I("Z")>-1){hx=1}2z();B t=\'\';if(C.ax!=0){t+="pw("+C.ax+"xo)"}if(C.WB==1){t+=" 3k(-1)"}if(C.WC==1){t+=" 3t(-1)"}if(t!=\'\'){O(dU,{"2T":t})}if(1e=="aE"){hP()}B 1G=[];B i;if(1e=="W"){1G=[\'dq\',\'Ig\',\'lD\',\'It\',\'lE\',\'oe\'];V(i=0;i<1G.S;i++){if(J(C[1G[i]])&&!J(v.W[1G[i]])){v.W[1G[i]]=C[1G[i]]}}}if(1e=="1L"){1G=[\'o2\',\'xd\',\'yh\'];V(i=0;i<1G.S;i++){if(J(C[1G[i]])&&!J(2M[1G[i]])){v[1G[i]]=C[1G[i]]}}}C.ol==1?8G():\'\';if(1e=="4O"&&C.on==0){3n(Z)}if(C.1k==1&&C.mN>0){1z(IA,C.mN*2h)}}E IA(){C.mN=-1;o.Q.4w()}E wV(){if(9a){9a.4z.3q(9a)}9a=1X("2c");O(9a,{"1n":"2x","1c":0,"1b":0,"Y":C.1D=="eC"?bg.2b:(bg.2b>35?bg.2b:35)*C.DE,"1f":C.1D=="eC"?bg.2V:(bg.2V>35?bg.2V:35)*C.yk});C=4b(C,\'hy\',\'hy\');Z.1R(9a)}E cQ(x){if(1e.I("17")==0&&U.S==1){C.2t=0}if(1e=="4O"&&C.fy==0){C.2t=0}if(C.2t==1){if(C.hk==1){O(x,{"6H":"4A"})}O(x,{"ah":"2y"});if(o.1i.2f){x.1w("bw",E(e){sN(e)});x.1w("fS",E(e){xj(e)});x.1w("fR",E(e){Ir(e)})}if(v.cz==1||!o.1i.2f){x.eN=aZ}if(v.1r.i7==1||C.i7==1){O(x,{"2w-1v":"#ph","1A":0.5})}}F{O(x,{"6H":"7G"})}if(!o.1i.2f){x.kj=6w;x.jY=5T}if(C.3h==1||C.2r==1){x.iT=dQ}}E sN(e){js("WD"+18);e.aq();bw=H}E xj(e){C.Iq==1?6w():\'\';e.aq()}E Ir(e){e.aq();e.aa();C.Iq==1?5T():\'\';if(!bw){aZ(e)}bw=L}E b6(){if(bg){bg.4z.3q(bg)}bg=1X("2c");O(bg,{"1n":"2x","1c":0,"1b":0});if(2E(C.4E)){42(bg,{"id":(v.id+"oH"+C.4E+"WE")})}w=C.w;h=C.h;C.eL=-1;C.ay=-1;C=4b(C,\'2I\',\'2I\');C=4b(C,\'9O\',\'9O\');if(C.ap&&o.a5){if(C.ap!=\'0 0 0 0\'){C=4b(C,\'9O\',\'ap\')}}if(C.1D=="1B"){w=1q[xr].2b;h=1q[xr].2V;if(C.xA>0){w<C.xA?w=C.xA:\'\'}}C=4b(C,\'gI\',\'gI\');C=4b(C,\'ID\',\'ID\');if(2E(C.4E)&&J(v.4O)&&C.1e=="4O"){if(1J(v.4O)==\'3M\'){V(B i=0;i<7D.6a(v.4O).S;i++){if(v.4O[i][C.4E]){if(v.4O[i][C.4E]=="6O"){C.on=0}F{B 1G=v.4O[i][C.4E].2q(":");if(1G[0]=="2I-1b"){if(1G[1].I("%")>0){C.hR=2J(1G[1])}F{C.4m=2J(1G[1])}}}}}}}C.h=h;C.w=w;if(C.bg==1){h=h+C.9L+C.a9;w=w+C.6V+C.7b;C.h=h;C.w=w;if(C.1D=="1B"){C.hl=1q[0].2V}}F{C.5o=0}O(bg,{"Y":(C.IM==1?Id:w),"1f":h,"yg":(C.oS*h)/2,"2w":(C.HL==1?"3c-4H("+(C.Wv==1?"to 2m,":\'\')+5R(C.4U,C.5o)+","+5R(C.Wj,C.5o)+")":5R(C.4U,C.5o)),"5h":"2w .1s 3c, 2T .1s 3c"+(2E(C.da)?\', 6I .1s 3c\':\'\')});if(C.1D=="eC"){O(bg,{"Y":w,"1f":h,"yg":(C.oS*h/C.1K)/2,})}if(C.Ea==1){pS(bg,C.4U,C.Ee,C.Ej)}if(C.pO==1){O(bg,{"2R":2B(C.W8,1)+"px 6r "+C.pM})}if(C.9Z==1){O(bg,{\'kB-6I\':\'9Z(am)\'})}pD.1R(bg)}E 2z(){B eL=(-bg.2V/2);B ay=(-bg.2b/2);if(eL!=C.eL||ay!=C.ay){O(bg,{"1c":(-bg.2V/2),"1b":(-bg.2b/2)});C.eL=eL;C.ay=ay}if(9a){B x=C.1D=="eC"?bg.2b:(bg.2b>35?bg.2b:35);B y=C.1D=="eC"?bg.2V:(bg.2V>35?bg.2V:35);O(9a,{"1c":(-y/2)+C.GQ-C.Fu,"1b":(-x/2)+C.Wi-C.VZ})}V(B i=0;i<2O.S;i++){B it=C.1D=="2v"?2D.4i(2J(1q[i].C.1f))/2:2D.4i(1q[i].2V)/2;B il=C.1D=="2v"?2J(1q[i].C.Y)/2:1q[i].2b/2;if(it!=C.it[i]||il!=C.il[i]){O(1q[i],{"1c":-it,"1b":-il});if(bg){O(1q[i],{"1c":(5e(1q[i].C.1c)+C.9L/2-C.a9/2+C.W0/2+C.W1/2),"1b":(5e(1q[i].C.1b)+C.6V/2-C.7b/2+C.W2/2+C.W3/2)})}C.it[i]=it;C.il[i]=il}}}E 6w(){B i;6p=H;if(C.d3==1){if(on&&J(C.pL)){i=1}F{i=0}if(b0&&d3.S>2){i=2}if(d3[i]){oL();1o(1q[d3[i]])}}if(C.bg==1){O(bg,{"2w":5R(vX(C.cE,C.4U),vX(C.9U,C.5o))});if(2E(C.da)){O(bg,{"6I":"ha("+C.da+")"})}}if(C.7c>-1&&!JX){V(i=0;i<2O.S;i++){if(1q[i].C.5u!="3h"){O(1q[i],{"1A":C.7c})}}}if(C.pK!=-1){oQ(1q,C.pK)}if(C.JO==1){ho+=45;h1(1q[0],ho)}if(C.gq>C.1K&&C.gq>-1){1K(C.gq)}if(1e=="1g"&&o.Q.cN()){}F{if(C.2r==1&&C.ol!=1){B x=7q.S>1&&!on?7q[1]:7q[0];if(x){if(x.I(\'B:\')==0){2N.1V=1M[x.1j(4)];8G()}}1o(2r);O(2r,{"1A":1})}}if(1e=="5k"){o.U.5g(H);o.5g=H}o.dv=H;o.Q.i8(18,"6p")}E 5T(){6p=L;B i;if(C.d3==1){if(on&&J(C.pL)){i=1}F{i=0}if(b0&&d3.S>2){i=2}oL();1o(1q[i])}if(C.bg==1){O(bg,{"2w":5R(C.4U,C.5o)});if(2E(C.da)){O(bg,{"6I":"ha(1)"})}}if(C.7c>-1){V(i=0;i<2O.S;i++){if(1q[i].C.5u!="3h"){O(1q[i],{"1A":C.a})}}}if(C.gq>-1){1K(C.1K)}if(C.pK!=-1){oQ(1q,(C.aV==-1?\'#3F\':C.aV))}if(1e=="5k"&&!o.22){o.U.5g(L);o.5g=L}vj();o.dv=L;o.Q?o.Q.i8(18,"5j"):\'\'}E vj(){if(C.2r==1&&C.ol!=1){1k(2r);O(2r,{"1A":0})}}E aZ(e){e?e.6v=H:\'\';if(!pa){o.Q.eG(18);if(1e=="4O"){p7()}vj();if(C.W4==1){ho+=45;h1(1q[0],ho)}hB=H;if(C.Jy==1||(18=="vw"&&C.1k==1&&C.wB==1)){o.Q.4w()}}};G.Jx=E(){aZ()};E p7(){if(2O){if(2O.S>1){if(on==H){1o(1q[0]);1k(1q[1])}F{1o(1q[1]);1k(1q[0])}}if(C.2r==1&&7q.S>1){2N.1V=o.ni+(on==H?7q[0]:7q[1])+o.hc;8G()}}if(J(C.wG)){if(on==H){C.3d=C.wG}F{C.3d=C.ov}}oP();on=on!=H;if(C.3d){if(C.3d.I(",0/1")>-1){js(C.3d,on?1:0)}}if(C.bg==1&&J(C.wM)){if(C.wM!=-1){if(on){C.Ju=C.4U;C.4U=C.wM}F{C.4U=C.Ju}b6();cQ(bg);2z();if(C.1D=="1B"){9q()}F{1K(C.1K)}}}}E oP(){if(J(C.gS)){if(C.gS.S>1){if(on==H){62(C.gS[0])}F{62(C.gS[1])}}}}E vp(1d){1d.6v=H;o.Q.eG(18)}E oL(){V(B i=0;i<2O.S;i++){if(1q[i].C.5u!="3h"){O(1q[i],{"1A":C.a});1k(1q[i])}}}E wC(1B){if(1q[0]){if(1q[0].2b>o.2U-C.4m-C.4C-C.6V-C.7b){if(C.wO==1){if(!1B){1B=1q[0].1V}1q[0].1V=\'<wO>\'+1B+\'</wO>\'}F{O(1q[0],{"b9-8U":"gK"})}O(1q[0],{"Y":o.2U-C.4m-C.4C-C.6V-C.7b})}}}E wU(){if(bg){ot=L;C.9b=0;1k(bg);if(1q[0]){C.w=1q[0].2b*C.1K;C.h=1q[0].2V*C.1K;1K(C.1K)}C.a4=0;b6();wV();cQ(9a);1o(bg);2z();o.Q.4N();if(!5N(Z)){3n(Z)}}F{ot=H}}E E7(1d){1d.6v=H}E dQ(){if(!o.1i.2f&&!o.dv){6w()}8G()}E 1K(x){if(x>0){O(bg,{"2T":"1K("+x+")"});V(i=0;i<2O.S;i++){O(1q[i],{"2T":"1K("+x+")"})}if(C.hb){C.hb.1K(x)}3k=x;3t=x}}E oV(){2r=1X("2c");O(2r,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'1f\':\'2y\',"1A":0,"5h":"1A 0.1s 3c"});hv=1X("2c");C=4b(C,\'kk\',\'kk\');C=4b(C,\'F0\',\'F0\');O(hv,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':\'100%\',\'1f\':30,\'2w-1v\':C.km,\'1A\':C.kt,\'2R-6S\':C.qf});2N=1X("2c");O(2N,{\'1n\':\'2x\',\'1b\':C.qy,\'1c\':C.oT,\'1v\':C.qu,\'3Z-eD\':f5(C.qr),\'3Z-3O\':C.qq*2B(v.8f,1),"ih-gf":C.qi+\'px\',"2C-1f":"1"});if(C.2N){if(C.2N.I("B:")==0){C.EZ=H}}if(!C.EZ){O(2N,{\'b9-8U\':\'eg\'})}if(C.eB==1){8g=1X("2c");8g.1V=\'<2v Y="am" 1f="qJ" rO="0 0 8 6" 8w="1.1" 4e="3L://4f.w3.3Y/47/2v" 4e:4d="3L://4f.w3.3Y/7T/4d"><eA id="EE" 4r="1Y" 6i="#\'+C.km.1Q("#","")+\'" 6i-EF="EG" 8l="0 0 8 0 4 6"></eA></2v>\'}if(C.ol==1){O(2r,{"1A":1});cQ(2r)}F{fD(2r)}Z.1R(2r);2N.1V=o.ni+(C.2N==\'\'?2P(1e):7q[0])+o.hc;2r.1R(hv);2r.1R(2N);if(C.eB==1){2r.1R(8g);B w4=o.w7?\'-am\':\'-qJ\';B ps=C.W5;if(!J(ps)){ps=\'\'}B tp=ps.I("1c")>-1;if(tp){h1(8g,\'-W6\')}O(8g,{\'1n\':\'2x\',\'2m\':(ps.I("2m")>-1?10*C.1K:\'2y\'),\'1b\':(ps.I("1b")>-1?10*C.1K:(ps==\'\'||ps==\'1c\'?\'50%\':\'2y\')),\'2I-1b\':(ps==\'\'||ps==\'1c\'?\'-zr\':0),\'2K\':(tp?\'2y\':w4),\'1c\':(tp?w4:\'2y\'),\'1A\':C.kt})}8G()}E 8G(){if(C.2r==1){O(2r,{"1c":(hx==1?-h-2r.2V+3:-2r.2V/2)+C.VY-C.W7,"1b":(fI==1?-2N.2b:(hx==1?-w/2:+2N.2b))-(hx==1?0:2N.2b/2+5)+C.W9-C.Wa,"1f":C.oT+2N.2V+C.qv,"Y":C.qy+2N.2b+C.Fm});O(hv,{\'1f\':2r.2V});2r.C.51="2h"}}G.c=E(){K Z};G.s=E(x){K C[x]};G.ss=E(x,x2){K J(C[x])?C[x][x2]:L};G.g=E(x){cg(x){1l"Y":K w;1h;1l"1f":K h;1h;1l"h":K 2B(C.hl,h);1h;1l"x":K 5e(Z.C.1b);1h;1l"y":K 5e(Z.C.1c);1h;1l"1A":K Z.C.1A?Z.C.1A:1;1h;1l"1o":K 4j;1h;1l"3k":K 3k;1h;1l"3t":K 3t;1h;1l"1e":K 1e;1h;1l"Fr":K 9N;1h;1l"hB":K hB;1h;1l"1D":K C.1D;1h;1l"S":K C.p0?C.p0:0;1h;1l"18":K 18;1h;1l"x0":K x0;1h;1l"y0":K y0;1h;1l"6p":K 6p;1h;1l"1g#":K 9N.I("1g#")==0;1h;1l"1g:":K 9N.I("1g:")==0;1h;1l"wk":K 1e=="4O"&&C.1D=="1B";1h;1l"1U#4j":K wc;1h;7G:K L}};G.1U=E(k,x){cg(k){1l"1o":6p?5T():\'\';4j=x;1h;1l"2l":Fi(x);1h;1l"6N":6N(Z);1h;1l"3n":3n(Z);1h;1l"Fq":C.3h=0;1h;1l"wh":if(C.Fn>0&&C.3h!=1&&!i5){2G(i5);i5=1z(E(){3n(Z);(C.Wb!=1?C.3h=1:\'\');i5=1I},C.Fn*2h)}1h;1l"1K":1K(x);1h;1l"Wc":O(Z,{"2T":"1K(0)"});1h;1l"3k":O(Z,{"2T":"3k("+x+")"});3k=x;1h;1l"3t":O(Z,{"2T":"3t("+x+")"});3t=x;1h;1l"1A":O(Z,{"1A":x});1h;1l"we":O(1q[0],{"1A":x});1h;1l"i0":O(1q[0],{"6I":"i0("+x+")"});1h;1l"1b":O(Z,{"1b":x});1h;1l"1c":O(Z,{"1c":x});1h;1l"Y":O(Z,{"Y":x});1h;1l"1f":O(Z,{"1f":x});1h;1l"rt":C.rt=x;1h;1l"fI":fI=x;1h;1l"1U#4j":wc=x;1h;1l"x":O(Z,{"1b":x});1h;1l"y":O(Z,{"1c":x});1h;1l"5S":C.5S=x;1h;1l"7a":C.7a=x;1h;1l"x0":x0=x;1h;1l"y0":y0=x;1h;1l"fr":C.fr=x;1h;7G:K L}};E Fi(x){if(x&&o.1i.2f){pa=H;1z(F8,dz)}if(!x){if(oN()&&b0){1k(1q[gY]);1o(1q[0]);b0=L}}if(C.9b==1){x?1o(Z):1k(Z)}F{if(18=="Wd"||18=="Fe"){x?1o(Z):1k(Z)}F{O(Z,{"2l":(x?"4L":"1Y")})}4j=x;x?1o(Z):\'\'}if(x&&C.p9){C.p9=L;1z(9q,100)}}E F8(){pa=L}G.62=E(x,y){if(9N!=\'\'&&(C.1B==\'x\'||C.1B==\'1x\')){x=x+\'x\'}if(y){x=C.1B+x}62(x);!5N(Z)?C.p9=H:\'\'};B wz;G.h9=E(x){if(wz!=x){C.9n=x;62(x);!5N(Z)?C.p9=H:\'\';o.Q?o.Q.4N():\'\'}wz=x};G.wi=E(){h1(dU,om);om+=20};E h1(x,y){O(x,{"2T":"pw("+y+"xo)"+(x==1q[0]&&!Ez&&3k!=1?\' 1K(\'+3k+\')\':\'\')})};G.DZ=E(x){if(C.1B.I("{1L")>-1){62(C.1B)}};G.p7=E(){p7()};E 62(1B){if(C.1D=="1B"){if(J(1B)){if(C.DY){if(1B.S==4){1B=(C.p3?\'0:0\':\'bF:0\')+1B}if(1B.S==5){1B=(C.p3?\'0:\':\'bF:\')+1B}if(1B.S==7){1B=(C.p3?\'\':\'0\')+1B}}if(C.GN){if(1B.S==4){1B=\'0\'+1B}}C.p0=1B.S}1B=(C.wT?C.wT+(C.GS?\'\':\' \'):\'\')+1B+(C.wR?\' \'+C.wR:\'\');B GT=1q[0].2b+(C.bg==1?C.9L+C.a9:0);B H6=1q[0].2V+(C.bg==1?C.9L+C.a9:0);1q[0].1V=o.ni+(1e=="4O"?v7(1B):1B)+o.hc;if(C.We==1){1q[0].1V+=\'<7r C="2l:bG-4L;Y:dN"></7r><7r C="2R-1c: cK 6r \'+3E(C.1v)+\';2R-1b: cK 6r e9;2R-2m: cK 6r e9;1n: 2x;2m:cK;1c: 50%;2I-1c: -3U;"></7r>\'}if(1e=="1L"){O(1q[0],{"Y":"2y","b9-8U":"eg"});wC(1B)}C.w=1q[0].2b+(C.bg==1?C.9L+C.a9:0);C.h=1q[0].2V+(C.bg==1?C.9L+C.a9:0);if(GT!=C.w||H6!=C.h||(C.w>0&&wI==0)){9q()}if(1q[0].2b>0){wI=C.w}F{9N!=\'\'?1k(1q[0]):\'\';if(1B!=\'\'){1z(9q,10)}}}}G.9q=E(){9q()};E oN(){K!o.P.5q()&&C.H5==1}E 9q(){if(C.1D=="1B"){if(1q[0]){if(1q[0].2b>0){9N!=\'\'?1o(1q[0]):\'\';w=C.w=1q[0].2b;h=C.h=1q[0].2V;b6();cQ(bg);2z();if(o.Q){if(7n([C.1n],"Z")){o.Q.wH()}F{o.Q.4N()}}}}}}G.wF=E(x){if(C.H0==1){B n=4;if(18=="Wf"){if(o.1i.2f){K}}F{n=8}B y=\'h7\';B z=[];V(B i=1;i<n;i++){z[i]=1T.8n(y.a2(v.id,18,\'Wg\',i))}if(z[1]){V(B i=1;i<n;i++){z[i]?1k(z[i]):\'\'}if(n==4){V(B i=1;i<n;i++){x>(i/n)&&z[i]?1o(z[i]):\'\'}}F{V(B i=n;i>0;i--){if(x*1+(1/n)>=(i/n)&&z[i]){1o(z[i]);1h}}}}}};G.On=E(){if(!on){if(2O){if(2O.S>1&&U.S>1){1k(1q[0]);1o(1q[1])}}if(U.S>1){1e=U[1];if(C.2r==1){2N.1V=gU(1);8G()}}if(oN()&&b0){1k(1q[gY]);b0=L}oP();on=H}};E gU(x){K o.ni+(C.2N==\'\'?2P(U[x]):(7q.S>1?7q[x]:7q[0]))+o.hc}G.c4=E(x){c4(x)};G.GU=E(x,y){if(C.hb){C.hb.dY(x,y)}};E c4(x){B y=\'h7\';B z=1T.8n(y.a2(v.id,18,\'Wh\'));if(z){O(z,{"5h":"2T 0.1s 6q-5j"});if(x==1){z.C.2T=\'FY(0, 0)\'}F{z.C.2T=\'FY(-FT, 0)\'}}F{if(x==1){C.a=1}F{C.a=0.5}}on=x==1;if(C.2r==1&&7q.S>1){2N.1V=(on?7q[0]:7q[1])}O(1q[0],{"1A":C.a})};G.gT=E(){if(on){if(2O){if(2O.S>1&&U.S>1){1o(1q[0]);1k(1q[1]);O(1q[0],{"1A":C.a})}}1e=U[0];if(U.S>1){if(C.2r==1){2N.1V=gU(0);8G()}}oP();on=L;b0=L}};G.vp=E(){if(oN()){oL();1o(1q[gY]);b0=H}};G.FD=E(){B 2F=L;if(C.1k==1){if(C.FA==1){if(5N(o.2e)){2F=H}}if(C.WF==1&&!o.22){2F=H}if(C.Wk==1&&o.22){2F=H}}if(!2F){6N(Z);B ge=Z.cT("*");V(B i=ge.S;i--;){O(ge[i],{"5S-1y-7o":"WG"})}4j=H}};G.hP=E(){hP()};E hP(){3n(Z);B ge=Z.cT("*");V(B i=ge.S;i--;){O(ge[i],{"5S-1y-7o":"8j"})}4j=L}G.4c=E(){if(2O.S>0){V(i=0;i<2O.S;i++){if(1q[i].4z==Z){Z.3q(1q[i])}1q[i]=1S}}if(bg){bg.eO("eN");bg.eO("kj");bg.eO("jY");bg.4z.3q(bg);bg=1S}if(C.1n.I(\'91\')>-1){if(Z.4z==o.91){o.91.3q(Z)}}F{if(Z.4z==o.1O){o.1O.3q(Z)}F{if(o.1r){if(Z.4z==o.1r){o.1r.3q(Z)}}}}if(2r){if(2r.4z==Z){Z.3q(2r)}}Z=1S};G.Gb=E(){g0?g0.hS():\'\'};G.G8=E(){vb()};E vb(){G5(2O[0],C.1v,1q[0])}E v7(x){B z=x+\'\';if(x.I(\'{\')>-1){if(x.I(\'{17}\')>-1&&J(o.3p)){x=x.1Q(\'{17}\',f0(o.3p.a1().t))}if(x.I(\'{1L\')>-1){B y=o.cd?o.cd:(v.1L?v.1L:\'\');if(x.I(\'{c9}\')>-1&&o.Q){x=x.1Q(\'{c9}\',o.Q.bu(\'c9\'))}if(o.b5&&o.Q){y=o.Q.bu(\'b5\')}x=x.1Q(\'{1L}\',y);if(o.b5&&!o.Q){1z(62,100,z)}}if(x.I(\'{1B\')>-1){V(B i=1;i<6;i++){if(x.I(\'{1B\'+i+\'}\')>-1){if(J(v[\'1B\'+i])){x=x.1Q(\'{1B\'+i+\'}\',v[\'1B\'+i])}F{x=x.1Q(\'{1B\'+i+\'}\',\'\')}}}}if(x.I(\'{6J}\')>-1){o.hV=18;if(o.Q){x=x.1Q(\'{6J}\',o.Q.bu(\'G1\'))}}}K x}G.v4=E(){62(C.1B)};E oQ(1q,6B){V(B i=0;i<1q.S;i++){JK(1q[i],6B)}if(C.3d=="4a"){if(o.4a){o.4a.X4(1q[0],6B)}}}};B G3=E(18,1e){B i;B C=[];B w;B h;B bg;B 4j=H;B x0;B y0;B 3k=1;B 3t=1;B eV=0;B 8I=0;B X6;B 3C;B pf;B 6p;B 2t;B 3A;B EA;B E1;B q3;B E2;B 2r;B 2N;B 8g;B eX;B rE;o.Em=-1;B pF;B 6p;B r7;V(i in fj.R){C[i]=fj.R[i]}B 1e=v[18].1e;B 1D=v[18].1D;V(i in fj[1e]){C[i]=fj[1e][i]}V(i in v[18]){C[i]=v[18][i]}C.w=2J(C.w);C.h=2J(C.h);C=4b(C,\'2I\',\'2I\');C=4b(C,\'9O\',\'9O\');if(o.a5){if(C.Ga>0){C.w=2J(C.Ga)}if(C.ap){if(C.ap!=\'0 0 0 0\'){C=4b(C,\'9O\',\'ap\')}}}B Z=1X("2c");if(v.1r.FZ==1&&v.1r.1k==1){o.1r.1R(Z)}F{o.1O.1R(Z)}1e=="2C"?o.91=Z:\'\';B 8z=L;if(C.7w){if(C.7w!=\'1F\'){8z=H}}O(Z,{"1n":"2x","1c":0,"1b":0,"1A":1,"eb":"po","oU":"iN"});if(C.Ge==1){Z.C.51=C.53}b6();B 9d=1X("2c");O(9d,{"1n":"2x","2K":2D.4i(-C.h/2),"1b":2D.4i(-C.w/2)});if(C.7j>0&&C.Gw==1){O(9d,{"2R-6S":C.7j*C.h/2,"1f":C.h,"6s":"3h","4A-3f":"1Y"})}if(2E(C.4E)){42(Z,{"id":(v.id+"oH"+C.4E)})}Z.1R(9d);if(1e==\'2C\'&&v.vY==1){F9()}if(C.2r==1){oV()}B 96=1X("2c");hf(0,96,0.3,(C.4H==1?"3c-4H("+(C.vF==1?"to 1b,":\'\')+3E(C.Gi)+", "+3E(C.p5)+")":3E(C.p5)),C.w,C.X7);if(C.FE==1&&J(C.pc)){B ht=1X("2c");ht.1V=C.pc.1Q(/\\#FG/g,3E(C.p5));96.1R(ht);O(ht,{"1n":"2x","2K":-2D.4i(C.h/2),"1b":0,"4A-3f":"1Y"});O(96,{"6s":"3h","2w":"1Y"});B x=["xT","eA","p4","i1","d6"];V(B y=0;y<x.S;y++){B z=ht.xW("2v "+x[y]);if(z.S>0){V(B y2=0;y2<z.S;y2++){z[y2].C.6i=3E(C.p5)}}}}9d.1R(96);B X8=[];B cR=1X("2c");hf(1,cR,C.Gp,(C.4H==1?"3c-4H("+(C.vF==1?"to 1b,":\'\')+3E(C.Gc)+", "+3E(C.FX)+")":C.FX),0,C.X9);9d.1R(cR);if(C.7c>0){B du=1X("2c");hf(2,du,C.Fz,C.Xa,0,C.7c);9d.1R(du)}B 7d=1X("2c");hf(3,7d,C.FB,(C.4H==1?"3c-4H("+(C.vF==1?"to 1b,":\'\')+3E(C.FC)+", "+3E(C.1v)+")":C.1v),0,C.a);if(C.FE==1&&J(C.pc)){B oX=1X("2c");oX.1V=C.pc.1Q(/\\#FG/g,3E(C.1v));O(oX,{"1n":"2x","2K":-2D.4i(C.h/2),"1b":0,"4A-3f":"1Y"});O(7d,{"6s":"3h","2w":"1Y"});7d.1R(oX)}if(C.5A==1){B cv=1X("2c");C=4b(C,\'vC\',\'vC\');C=4b(C,\'vB\',\'vB\');O(cv,{"1n":"2x","2K":C.h/2,"1b":0,"4A-3f":"1Y","3Z-3O":C.FI*2B(v.8f,1),"1v":C.6l,"2C-1f":"100%","2S-1c":C.Xb,"2S-2K":C.Xc,"2S-1b":C.Xd,"2S-2m":C.X5,"2I-1c":C.Xe,"2I-2K":C.Xg,"2I-1b":C.Xh,"2I-2m":C.Xi,"2R-6S":(C.Ha+"px"),"2l":"1Y"});if(C.Hc==1){O(cv,{"2w":3E(C.Hd)})}7d.1R(cv);B kh=L;B Xj=L}o.pN=C.h;9d.1R(7d);if(C.eS==1){B 8l=[];if(1J Hg!=="1I"){B 9h=1u Hg(Z,8l,w,C)}}if(C.3A==1){if(C.dO.5Y().I(\'<2v\')==-1){C.dO==\'\'?C.dO="<2v Y=\'20\' 1f=\'20\'><g><d6 ry=\'5\' rx=\'5\' cy=\'10\' cx=\'10\' 6i=\'#fx\'/></g></2v>":\'\'}3A=1X("2c");3A.1V=C.dO.5Y();C=4b(C,\'Hj\',\'Hj\');O(3A,{"1n":"2x","1c":-10+C.Xk-C.Xl,"1b":-2h,"4A-3f":"1Y","1f":20,"Y":C.eQ,"1A":C.qP,"5h":"2T 0.1s 3c, 1A 0.1s 3c"});if(C.kb==1||C.rp==1){O(3A,{"2T":"1K(0)"})}F{if(C.pA!=1){O(3A,{"2T":"1K("+C.pA+")"})}}if(C.Xm==1){O(3A,{"6I":"Xn-ae(3U 3U cK 5p(0, 0, 0, .7))"})}Z.1R(3A);if(C.yf!=-1){B x=["xT","i1","d6"];V(B y=0;y<x.S;y++){B z=3A.xW("2v "+x[y]);if(z.S>0){V(B y2=0;y2<z.S;y2++){z[y2].C.6i=3E(C.yf)}}}}C.ew=3A.2b}if(C.ax!=0){O(Z,{"2T":"pw("+C.ax+"xo)"})}if(C.3h==1){1k(Z);4j=L}if(1e=="1F"&&!8z){if(C.1k==1&&C.hW==1){o.hN=H;C.3h=H}F{o.hN=L}}C.au=0;if(C.ax!=0){C.hM=2D.z4(C.ax);if(C.hM>45&&C.hM<Xo){C.au=90}if(C.hM>Xf&&C.hM<Gu){C.au=DK}}if(8z){C.7w?o[\'2C\'+\'4o\'+C.7w]=C.7w:\'\';w=C.w;C.7w=="54"?6A(1,o.5L.6F(-1)[0],"no"):\'\';if(C.7w=="uc"){B pv=v.1F;v.2a?(v.2a.1F?pv=v.2a.1F:\'\'):\'\';6A(pv,1,"no")}}E hf(n,x,y,z,Gv,GC){O(x,{"1n":"2x","2K":0,"1b":0,"Y":Gv,"1f":(C[\'h\'+n]>0?C[\'h\'+n]:C.h),"2w":z?(z.I("3c")>-1?z:3E(z)):\'\',"2R-6S":(C.Gw==1?1:C.7j*C.h/2),"1A":GC,"4A-3f":"1Y","5h":"2T 0.2s 6q-in-5j"})}E b6(){bg=1X("2c");C=4b(C,\'gI\',\'gI\');B hl=C.h+C.9L+C.a9;B Gt=C.w+C.6V+C.7b;if(C.bg==1){}F{C.5o=0}C=4b(C,\'hy\',\'hy\');if(v.1r.i7==1||C.i7==1){C.4U=\'#ph\';C.bg=1;C.5o=0.5}O(bg,{"1n":"2x","1c":0,"1b":0,"Y":Gt,"1f":hl*C.yk,"yg":(C.oS*hl)/2,"2w":5R(C.4U,C.5o),"ah":"2y","5h":"1A .1s 3c, 2w .1s 3c"});if(C.9Z==1){O(bg,{\'kB-6I\':\'9Z(am)\'})}if(C.pO==1){O(bg,{"2R":"3U 6r #"+C.pM})}if(C.2t==1){if(C.hk==1){O(bg,{"6H":"4A"})}if(!o.1i.2f||v.cz==1){bg.eN=aZ;bg.X3=r6;bg.WS=oD;bg.iT=dQ}}F{O(bg,{"6H":"7G"})}if(!o.1i.2f){bg.kj=6w;bg.iT=dQ;bg.jY=5T}if(o.1i.ql&&C.2t==1){bg.1w("fS",E(1d){1d.6v=H;if(!J(1d.6b)&&1d.7L.S>0){1d.6b=1d.7L[0].jP;1d.9o=1d.7L[0].oO}pF=1d;6w(1d);oD(1d)});bg.1w("fR",E(1d){1d.6v=H;o.3C=L;5T(1d);r6(pF)});bg.1w("2t",E(1d){1d.6v=H});bg.1w("bw",E(1d){if(!J(1d.6b)&&1d.7L.S>0){1d.6b=1d.7L[0].jP;1d.9o=1d.7L[0].oO}pF=1d;o.3C=H;dQ(1d);if(o.1i.ql){oD(1d)}})}O(bg,{"1b":2D.qo(-C.w/2-C.6V)});O(bg,{"1c":2D.qo(-C.h/2-C.9L+C.GQ-C.Fu)});if(C.Ea==1){pS(bg,C.4U,C.Ee,C.Ej)}Z.1R(bg)}E 2z(Y){if(Y!=w){w=Y;o.ro=w;B aJ=w/96.2b;O(bg,{"Y":(w+C.6V+C.7b),"1b":-w/2-C.6V,});O(9d,{"1b":-w/2});O(96,{"Y":w});O(9d,{"Y":w});B xx=cR.2b*aJ;if(xx>96.2b){xx=96.2b}O(cR,{"Y":xx});B wp=7d.2b*aJ;O(7d,{"Y":wp});kg(wp);if(1e=="2C"){EJ()}if(C.eS==1){9h?9h.DO(w):\'\'}if(o.5X){o.5X.2z()}}}E kg(x){if(C.3A==1){if(x<C.ew/2&&C.eQ!=20){x=C.ew/2}if(x>w-C.ew/2&&C.eQ!=20){x=w-C.ew/2}B y=x-w/2-C.ew/2+C.X2-C.WJ;O(3A,{"1b":y})}}E qF(){O(3A,{"2T":"1K("+C.pA+")"})}E 6w(1d){o.Q.i8(18,"6p");if(C.bg==1){if(C.9U!=-1){B m=1u 5y({"mc":bg,"1D":"8o","to":C.9U,"17":0.1,"me":(18+"bg")})}if(2E(C.cE)){O(bg,{"2w-1v":C.cE})}}if(2E(C.rH)){O(7d,{"2w-1v":C.rH})}if(C.3A==1){if(C.En==1&&J(C.rK)){if(C.ox==1&&3C){}F{3A.1V="<2v Y=\'"+C.eQ+"\' 1f=\'20\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'>"+C.rK.5Y()+"</2v>"}}if(C.kb==1){if(C.rp==1&&!o.1t){}F{qF()}}F{if(C.pz!=-1){B m2=1u 5y({"mc":3A,"1D":"8o","to":C.pz,"17":0.1,"me":(18+"3A")})}}}if(C.2r==1&&(o.P.1m()>0||1e=="1F"||8z)){jX()}if(C.eR>0){O(bg,{"2T":"3t("+((C.eR-1)/5+1)+")"});r5(C.eR)}if(C.3A==1&&C.rl==1){kg(dr(1d.6b)-8I)}if(1e=="1F"){o.U.5g(H);o.5g=H}6p=H;o.dv=H}E r5(x){O(96,{"2T":"3t("+x+")"});O(cR,{"2T":"3t("+x+")"});du?O(du,{"2T":"3t("+x+")"}):\'\';O(7d,{"2T":"3t("+x+")"})}E 5T(){if(!pf){if(C.7c>0){O(du,{"Y":0})}if(2E(C.rH)){O(7d,{"2w-1v":C.1v})}if(C.bg==1){if(C.9U!=-1){B m=1u 5y({"mc":bg,"1D":"8o","to":C.5o,"17":0.1,"me":(18+"bg")})}if(2E(C.cE)){O(bg,{"2w-1v":C.4U})}}if(C.3A==1){if(C.En==1&&J(C.rK)){if(C.ox==1&&3C){}F{3A.1V="<2v Y=\'"+C.eQ+"\' 1f=\'20\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'>"+C.dO.5Y()+"</2v>"}}if(C.kb==1){O(3A,{"2T":"1K(0)"})}F{if(C.pz!=-1){B m2=1u 5y({"mc":3A,"1D":"8o","to":C.qP,"17":0.1,"me":(18+"3A")})}}}if(C.eR>0){O(bg,{"2T":"3t(1)"});r5(1)}if(1e=="1F"&&!o.22){o.U.5g(L);o.5g=L}o.Q.i8(18,"5j")}if(C.eS==1&&9h){9h.5j()}if(C.2r==1&&(o.P.1m()>0||1e=="1F")){oE()}if(o.og&&1e=="2C"){o.th.1k();o.Em=-1}6p=L;o.dv=L}E aZ(1d){1d.6v=H}E E7(1d){1d.6v=H}E r6(1d){if(1e=="1F"){if(o.9p){pf=H;2G(r7);r7=1z(E(){pf=L;5T()},2h)}}rr();o.3C=L;if(C.3A==1){if(C.ox==1&&J(C.qY)){3A.1V="<2v Y=\'20\' 1f=\'20\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'>"+C.dO.5Y()+"</2v>"}}c6(1d.6b,1d.9o);o.Q.eG(18);o.Q.fT(1d.6b,1d.9o);1d.6v=H}E oD(1d){3C=H;if(C.3A==1){if(C.ox==1&&J(C.qY)){3A.1V="<2v Y=\'20\' 1f=\'20\' 4e:4d=\'3L://4f.w3.3Y/7T/4d\' 4e=\'3L://4f.w3.3Y/47/2v\'>"+C.qY.5Y()+"</2v>"}}eV=iY(bg);8I=gh(bg);c6(1d.6b,1d.9o);6A(2t,1,"no")}E c6(dT,dG){B x;dT=dr(dT);dG=dr(dG);B DJ=2D.6h(1T.o7.b3,1T.aH.b3);B DI=2D.6h(1T.o7.dI,1T.aH.dI);if(o.1i.2f){}F{dG=dG+DI;dT=dT+DJ}if(C.au>0){x=dG-eV-C.7b;2t=x/w;if(C.au==DK){x=dG-eV-C.6V;2t=x/w;2t=(2t-1)*-1}}F{x=dT-8I-C.6V;2t=x/w;if(C.ax>WK&&C.ax<WL){x=dT-8I-C.7b;2t=x/w;2t=(2t-1)*-1}}2t>1?2t=1:\'\';2t<0?2t=0:\'\'}E dr(x){if(o.9z>1){x=x/o.9z}K x}G.DN=E(){9h?9h.DO(w):\'\'};G.kl=E(){9h?9h.dY(w):\'\'};E rr(){3C=L}E dQ(1d){8I=gh(bg);if(C.7c>0){if(o.1t||1e!=\'2C\'){O(du,{"Y":dr(1d.6b)-8I})}}if(C.2r==1&&(o.P.1m()>0||1e=="1F"||8z)){jX();eV=iY(bg);c6(1d.6b,1d.9o);if(1e=="2C"){if(v.WM==1){if(o.P.5q()&&o.P.bX().I("?rb")>0){2N.1V=\'- \'+f0((1-2t)*o.P.1m(H))}F{2N.1V=f0(2t*o.P.1m())}}F{B d=o.P.1m();if(v.4g>0){d=d-v.4g*1}B aP=\'\';if(C.eS==1&&9h){aP=9h.2r(2t*d);aP!=\'\'?aP=aP+\'<br>\':\'\'}2N.1V=aP+f0(2t*d)}}if(1e=="1F"||8z){2N.1V=u1(2t)}8G(1d)}if(o.og&&1e=="2C"&&o.th){rE=1d;if(!eX||v.DS!=1){rG()}if(v.DS==1){2G(eX);eX=1z(rG,50)}}if(C.3A==1&&C.rl==1){kg(dr(1d.6b)-8I)}}E rG(){2G(eX);eX=1I;if(C.2r==0){eV=iY(bg);8I=gh(bg);c6(1d.6b,1d.9o)}6p?o.th.bC(rE,w,2t,8I):\'\'}E 8G(1d,t,l){B 1b=(-w/2+(dr(1d.6b)+1T.o7.b3-8I)-2N.2b/2)+(l?l:0);B jW=0;if(v.tg!=1){if(1b+w/2+2N.2b+10>o.2U){jW=1b;1b=o.2U-w/2-2N.2b-10}if(1b+o.2U/2<0){jW=1b;1b=-o.2U/2}}B x={"1c":(-2N.2V-C.DV*1-C.oT-C.qv)-(C.DW==1?(C.h/2)*(C.eR>0?C.eR:1):0)+(t?t:0),"1b":1b};O(2r,x);if(C.eB==1){O(8g,{\'1n\':\'2x\',\'1b\':2N.2b/2-4+(jW!=0?jW-1b:0),\'1c\':2N.2V-6})}}G.jX=E(e,x,t,l){jX();2N.1V=x;8G(e,t,l)};E jX(){if(!5N(2r)||2r.C.1A==0){1o(2r);O(2r,{"1A":1})}}G.oE=E(){oE()};E oE(){1k(2r);O(2r,{"1A":0})}G.c=E(){K Z};G.s=E(18){K C[18]};G.ss=E(x,x2){K C[x][x2]};G.g=E(x){cg(x){1l"Y":K w;1h;1l"WN":K 96.2b;1h;1l"1f":K C.h;1h;1l"x":K 5e(Z.C.1b);1h;1l"y":K 5e(Z.C.1c);1h;1l"1A":K Z.C.1A?Z.C.1A:1;1h;1l"1o":K 4j;1h;1l"3k":K 3k;1h;1l"3t":K 3t;1h;1l"1e":K 1e;1h;1l"18":K 18;1h;1l"x0":K x0;1h;1l"y0":K y0;1h;1l"2t":K 2t;1h;1l"eK":K 8z;1h;7G:K L}};G.1U=E(18,x){cg(18){1l"1o":4j=x;1h;1l"3C":3C=x;1h;1l"2l":1e=="2C"||C.1k==1?O(Z,{"5u":(x?"4j":"3h")}):O(Z,{"2l":(x?"4L":"1Y")});4j=x;1h;1l"3k":O(Z,{"2T":"3k("+x+")"});3k=x;1h;1l"3t":O(Z,{"2T":"3t("+x+")"});3t=x;1h;1l"1A":O(Z,{"1A":x});1h;1l"1b":O(Z,{"1b":x});1h;1l"1c":O(Z,{"1c":x});1h;1l"2t":2t=x;1h;1l"dZ":C.dZ=x;1h;1l"Y":O(Z,{"Y":x});1h;1l"1f":O(Z,{"1f":x});1h;1l"rt":C.WO=x;1h;1l"x":O(Z,{"1b":x});1h;1l"y":O(Z,{"1c":x});1h;1l"x0":x0=x;1h;1l"y0":y0=x;1h}};G.2z=E(x){2z(x)};G.oM=E(x){};G.fQ=E(b4,aS){if(3C){if(1e=="1F"||8z){c6(b4,aS);o.Q.eG(18)}if(1e=="1F"){o.9p=H}c6(b4,aS);6A(2t,1,"no")}};G.fT=E(b4,aS){if(3C){rr();3C=L;c6(b4,aS);o.Q.eG(18);6A(2t,1,"no")}};E 6A(17,1m,x){17<0?17=0:\'\';if(v.4g>0&&1m>1){1m=1m-v.4g;17=17-v.4g}if(C.3A==1&&C.rp==1&&C.kb!=1){if(!C.E0&&17>0){qF();C.E0=H}}if(3C&&1m!=1){}F{B 4n;if(1m>0&&17>0){if(17>1m){17=1m}4n=w*(17/1m);if(4n==7d.2b){4n=-1}}F{4n=0}if(4n>=0){O(7d,{"Y":4n});if(C.rl==1&&6p&&!x){}F{kg(4n)}}if(J(cv)){if(1m<2&&1e=="2C"){if(kh){3n(cv);kh=L}}F{if(!kh){6N(cv);kh=H}cv.1V=1e=="2C"?4p(17==0?1m:17):u1(17)}}}};G.6A=E(17,1m,x){if(1m!=E1||17!=E2||x){6A(17,1m,x)}};G.E4=E(){2t>1?2t=1:\'\';2t<0?2t=0:\'\';O(7d,{"Y":(2t*w)})};G.E5=E(17,1m){if(1m>0&&17>0){B 4n=w*(17/1m);4n>w?4n=w:\'\';O(cR,{"Y":5e(4n)});EA=1m;q3=17}F{q3=0;O(cR,{"Y":0})}};G.k5=E(x){if(C.5X==1){if(!o.5X){if(x!=0){if(1J F6!=="1I"){o.5X=1u F6(Z,C,x);o.9x=H}}}F{if((!J(x)||x==0)&&o.9x){o.5X.1k();o.9x=L}F{if(!o.9x||(J(x)&&x!=1&&x!=0)){o.5X.pZ(x);o.9x=H}}}}};E F9(){o.bC=1X("2c");O(o.bC,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':v.Fa,\'1f\':v.Fc,\'6s\':\'3h\',"4A-3f":"1Y","2w-1v":"#es","2R-6S":v.Fd+\'px\',"2l":"1Y"});o.bC.id="WP"+v.id;if(v.F4==1){O(o.bC,{"2R":v.Fg+"px 6r "+qD(\'1v\',v.Fj)})}if(v.Fk==1){O(o.bC,{"5W-ae":"fG 3U ic 5p(0,0,0,0.5)"})}o.bC.C.51="ky";Z.1R(o.bC)}E oV(){2r=1X("2c");O(2r,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'1f\':\'2y\',"4A-3f":"1Y","1A":0,"5h":"1A 0.1s 3c"});C=4b(C,\'kk\',\'kk\');2N=1X("2c");O(2N,{\'1n\':\'2x\',\'2S-1b\':C.qy,\'2S-2m\':C.Fm,\'2S-1c\':C.oT,\'2S-2K\':C.qv-1,\'1B-8E\':\'8i\',\'1v\':C.qu,\'3Z-eD\':f5(C.qr),\'3Z-3O\':C.qq*2B(v.8f,1),\'ih-gf\':C.qi+\'px\',\'2C-1f\':"1",\'2w-1v\':5R(C.km,C.kt),\'2R-6S\':C.qf});C.F1?C.eB=C.F1:\'\';if(C.eB==1){8g=1X("2c");8g.1V=\'<2v Y="am" 1f="qJ" rO="0 0 8 6" 8w="1.1" 4e="3L://4f.w3.3Y/47/2v" 4e:4d="3L://4f.w3.3Y/7T/4d"><eA id="EE" 4r="1Y" 6i="\'+3E(C.km)+\'" 6i-EF="EG" 8l="0 0 8 0 4 6"></eA></2v>\'}Z.1R(2r);2r.1R(2N);if(C.eB==1){2r.1R(8g);O(8g,{\'1A\':C.kt})}2r.C.51="2h"};E EJ(){if(o.3p&&v.c8==1&&!o.1t){B f=o.3p.a1();if(f.t&&f.d){6A(f.t,f.d)}}};E u1(x){B y=2D.4i(x*100);if(8z){if(o.jv){K(8z&&2E(C.2N)?C.2N+\'&eM;\':\'\')+3K(x*o.5L.6F(-1)[0]).ub(1)}if(o.EK){K(8z&&2E(C.2N)?C.2N+\'&eM;\':\'\')+o.uc}}K y};G.4c=E(){Z.3q(9d);if(bg){bg.eO("eN");bg.eO("kj");bg.eO("jY");bg.4z.3q(bg);bg=1S}if(3A){Z.3q(3A)}if(Z.4z==o.1O){o.1O.3q(Z)}F{if(o.1r){if(Z.4z==o.1r){o.1r.3q(Z)}}}Z=1S}};B ud=E(1c){B i;B C=[];B w;B h;B 4j=H;B 3k=1;B 3t=1;B x0=0;B y0=0;B aK=5F(oR,WQ);B 1e,18="bg";B 1D="WI";if(1c==H){C["1n"]=\'1c\';C.h=2B(v.1r.WR,50);C.a=2B(v.1r.WT,0.5);C.1v=2B(v.1r.WU,\'#es\')}F{C["1n"]=v.1r.1n;V(B k in v.1r){if(v.1r.2n(k)){C[k]=v.1r[k]}}}if(C.1o==0){v.1r.h=C.h=0;C.2S=C.2I="0 0 0 0";C.4H=0}C["1K"]=1;C=4b(C,\'2I\',\'2I\');if(J(C.k4)){if(C.k4!=20&&C.2I=="-20 0 0 0"){C.9r=C.k4}}if(2E(C.EO)&&o.a5){C=4b(C,\'2I\',\'EO\')}if(C.WV==1){C.4m+=\'%\';C.4C+=\'%\'}B Z=1X("2c");if(C.9Z==1&&C.4H==0){C.a<1?C.tK=C.a:C.tK=0.2;v.1r.a=C.a=1}F{C.9Z=0}O(Z,{\'1n\':\'2x\',\'1b\':0,\'1c\':0,\'Y\':(C.k8==1||1c?\'100%\':o.aD),\'1A\':C.a,\'4A-3f\':\'1Y\',\'eb\':\'po\',\'oU\':\'iN\'});o.1O.1R(Z);B bg=1X("2c");O(bg,{\'1f\':C.h-(C.1n!=\'1c\'?C.d8+C.9r:0),\'2l\':\'4L\',\'2I-1b\':C.4m,\'2I-2m\':C.4C,\'2R-6S\':C.7j});if(C.jU>0){B jU=\'3U 6r \'+5R(2B(C.WW,\'3F\'),C.jU);if(C.WX==1){O(bg,{\'2R-1c\':jU})}F{O(bg,{\'2R\':jU})}}Z.1R(bg);w=Z.2b;v.db=-C.9r;if(C.4H==1||1c){if((C.1v==\'3W\'||v.1r.ac!=\'\')&&!1c){if(C.1n!=\'1c\'){v.db=98-C.h}B 41=\'28:ac/tE;kC,WY+WZ/T/D+X0/X1/WH==\';if(v.1r.ac.I("28:ac")>-1){41=v.1r.ac}O(bg,{\'1f\':C.h+(C.1n!=\'1c\'?v.db:0),\'2w\':\'X(\'+41+\') gj-x 50% 100%\',\'2w-3O\':\'2y\'})}F{B gL=(1c?\'to 1c, \':\'to 2K, \')+5R(C.1v,0)+\', \'+5R(C.1v,1);O(bg,{\'2w\':\'-p8-3c-4H(\'+gL+\')\',\'2w\':\'-3N-3c-4H(\'+gL+\')\',\'2w\':\'-ms-3c-4H(\'+gL+\')\',\'2w\':\'-o-3c-4H(\'+gL+\')\',\'2w\':\'3c-4H(\'+gL+\')\'})}}F{if(C.9Z==1){O(Z,{\'kB-6I\':\'9Z(am)\'});O(bg,{\'1A\':C.tK})}O(bg,{\'2w-1v\':C.1v})}if(1c){O(Z,{"5h":"1A 0.2s 6q-5j"})}G.h=E(){K C.h-(C.1n!=\'1c\'?C.9r:0)};G.c=E(){K Z};G.s=E(18){K C[18]};G.g=E(x){if(Z){cg(x){1l"w":Z.2b>0?w=Z.2b:\'\';K w;1h;1l"Y":K Z.2b;1h;1l"1f":K Z.2V;1h;1l"x":K 5e(Z.C.1b);1h;1l"y":K 5e(Z.C.1c);1h;1l"1A":K Z.C.1A?Z.C.1A:1;1h;1l"1o":K 4j;1h;1l"3k":K 3k;1h;1l"3t":K 3t;1h;1l"18":K 18;1h;1l"x0":K x0;1h;1l"y0":K y0;1h;1l"aK":K 18+aK;1h;7G:K L}}F{K L}};G.1U=E(18,x){cg(18){1l"1o":4j=x;1h;1l"w":w=x;1h;1l"2l":O(Z,{"2l":(x&&v.t7!=1?"4L":"1Y")});4j=x;1h;1l"1K":O(Z,{"2T":"1K("+x+")"});3k=x;3t=x;1h;1l"3k":O(Z,{"2T":"3k("+x+")"});3k=x;1h;1l"3t":O(Z,{"2T":"3t("+x+")"});3t=x;1h;1l"1A":O(Z,{"1A":x});1h;1l"1b":O(Z,{"1b":x});1h;1l"1c":O(Z,{"1c":x});1h;1l"Y":O(Z,{"Y":x});1h;1l"1f":O(Z,{"1f":x});1h;1l"x":O(Z,{"1b":x});1h;1l"y":O(Z,{"1c":x});1h;1l"x0":x0=x;1h;1l"y0":y0=x;1h}};G.4c=E(){o.1O.3q(Z);Z=1S}};if(1J(2M)=="4W"){Jw()}o.G=G;if(2M.id){if(1T.8n(2M.id)){uH()}F{1T.1w(\'VW\',gO)}}F{1J Jr==\'E\'?Jr():\'\'}E uH(){if(J(2M.id)){if(1T.8n(2M.id)){if(!zS(1T.8n(2M.id))||2M.4j==1){2M.Vd==1?1z(gO,50):gO()}F{1z(uH,50)}}}}E gO(){V(B i=0;i<4X.S;i++){if(J(4X[i])){if(4X[i].3o("id")==2M.id){if(4X[i].3o("7u")){4X[i].3o(\'2F\')}}F{if(v.VV==1&&4X[i].3o("v","3b")==1){2M.3b=0}}}}4X.2L(o.G);B 2F=L;if(J(2M.3i)){V(B i=2;i<10;i++){if(2M.3i==i&&o[\'u\'+i]!=\'\'){v=9G(v,59.6K(d9(o[\'u\'+i])));2F=H}}}if(o.u!=\'\'&&!2F){v=9G(v,(1J o.u!="3M"?59.6K(d9(o.u)):o.u))}if(1J(US)!="E"){V(B 18 in 2M){if(2M.2n(18)){if(18.I("JB")==0){2M[18]=1S}}}}v=9G(v,2M);o.1E=1T.8n(v.id);if(v.ji==1&&v.UT==1&&1J(uQ)=="E"){wq(o.1E,"UU");if(!uQ()){1M.1T.1w("8O",uQ)}}F{JH()}}E JH(){B uo=v.2e;if(v.UV==1&&J(v.2e)&&J(uo)){v.2e!=\'\'?v.2e=uo:\'\'}if((!J(v.3w)||v.3w==\'\')&&v.UW==1){1p(\'6f\');K}if(v.J9==1||v.uz==1){1M.1w(\'8p\',E(1d){B x=1I;B y;J(1d.28.17)?x=1d.28.17:\'\';J(1d.28.1F)?x=1d.28.1F:\'\';J(1d.28.Jb)?y=1d.28.Jb:\'\';J(1d.28.3o)?y=1d.28.3o:\'\';if(y&&v.uu){if(v.uu!=\'\'){B pm=v.uu.1Q(/\\s+/ig,\'\').2q(\',\');if(pm.I(y)==-1){K}}}if(v.uz==1){if(1J(Ji)=="E"){Ji(1d)}}if(y&&o.8t){if(J(1d.28.1U)){x=1d.28.1U}B z=3B(y,x);1M.9P.od({1d:y,UX:z},\'*\')}})}V(B 18 in o.gy){if(o.gy.2n(18)){o.gy[18]!=\'\'?o.iW+=o.gy[18]+\' \':\'\'}}1p(o.8w+\' \'+o.iW);cW=v.id;o.d=8s.ul;o.hs=8s.UY;if(!v.4t&&7n([o.hs],\'#1y-\')){v.4t=o.hs.1j(o.hs.I(\'#1y-\')+6)}if(9P){B o5=L;3g{if(9P){if(9P.1T){B oi=9P.1T.cT("JM");V(B i=0;i<oi.S;i++){if(oi[i].jy===1M){o.8e=oi[i];o.op=H;v.JU!=1?O(o.8e,{"2R":"1Y"}):\'\';o.JW=o.8e.C;1p("e8")}}}F{o5=H}}}2H(dV){o5=H}if(o5){o.op=H;1p("UZ-k7")}}o.op&&1T.pJ?o.k7=1T.pJ.2q(\'/\')[2]:\'\';!o.JT?JV():\'\';if(1J(JY)=="E"){if(JY()){K}}o.8t=H;JP();B HW=1u 6M();if(HW.UR()==20){if(5F(1,20)==10&&v.V0!=0){sy(o.sz,o.sz);1z(E(){if(1M.ga){ga(\'go\',\'UA-V2-6\',\'2y\',{\'6x\':\'6T\',\'V3\':H});ga(\'V4\',\'I3\');ga(\'I3:V5\',[o.d]);ga(\'6T.bD\',\'1d\',{I6:\'ow\',I7:\'gO\',I8:o.d})}},jR)}}if(v.ga==1&&v.I9!=1){if(1J Ib==\'E\'){o.ga=1u Ib()}}if(!o.1E){v.1p=1;1p(\'id "\'+v.id+\'" gN oz\');K L}o.1E.1V=\'\';O(o.1E,{\'2S\':0,\'V6-gf\':\'gK\'});o.8R=o.1E.2V;o.8X=o.1E.2b;if(J(v.iJ)&&!J(v.4R)){if(J(v.iJ.4R)){v.4R=v.iJ.4R}if(J(v.iJ.oB)){v.oB=v.iJ.oB}}if(o.1E.C.Y.I("%")>-1){o.V7=o.1E.C.Y}if(v.4R=="6O"||o.1E.C.1f.I("%")>-1){v.4R="%";o.oj=o.1E.C.1f;o.8R=0}if(o.8X==0){if(o.1E.C.Y.I("px")>0){o.8X=2J(o.1E.C.Y)}F{if(o.1E.4z.C.Y.I("px")>0){o.8X=2J(o.1E.4z.C.Y)}F{if(o.1E.4z.4z.C.Y.I("px")>0){o.8X=2J(o.1E.4z.4z.C.Y)}}}}if(6E(v.4R).I("x")>0){o.4R=v.4R.2q("x")[0]/v.4R.2q("x")[1];if(o.8R==0){o.8R=o.8X/o.4R}}F{o.4R=0}O(o.1E,{\'1n\':\'gJ\',\'5W-iR\':\'sQ-5W\',\'1B-8E\':\'1b\',\'-3N-rY-V8\':\'1Y\',\'sa\':f5(\'pd-oG\'),\'92-1f\':15,\'eb\':14*2B(v.8f,1),\'2C-1f\':\'iN\',\'yJ\':\'yQ\',\'1v-HM\':\'1Y\'});if(v.ae==1){O(o.1E,{\'5W-ae\':\' 0 J5 V9 5p(50,50,93,.1), 0 ic J5 5p(0,0,0,.Va)\'})}if(o.4R>0){O(o.1E,{\'1f\':o.8R})}F{O(o.1E,{\'1f\':o.8R==0?o.oj:o.8R})}if(o.8X==0){O(o.1E,{\'Y\':\'100%\'})}o.1O=1X("2c");O(o.1O,{\'1n\':\'2x\',\'5W-iR\':\'sQ-5W\',\'7N\':v.pk,\'1v\':\'#3F\',\'Y\':\'100%\',\'1f\':\'100%\',\'1b\':0,\'1c\':0,\'eb\':\'po\',\'2C-1f\':\'iN\'});if(v.tg!=1){o.1O.C.6s=\'3h\'}if(v.V1==1){o.1O.C.7N=\'e9\'}o.O=1T.1X(\'C\');o.O.1D=\'1B/O\';o.1O.1R(o.O);o.1O.6m("id",\'UP\'+v.id);pq(1);if(1M.HG){B HH=1u HG(E(e){if(e[0].sZ.S>0){V(B i=0;i<e[0].sZ.S;i++){if(e[0].sZ[i]==o.1O){xL()}}}});HH.UE(o.1E,{UO:H})}o.dH=1X(\'e8\');42(o.dH,{"id":"IU"+v.id,"IR":"no","1L":"IU"+v.id,"IZ":"H","J2":"H","IS-pB":"H"});O(o.dH,{\'1n\':\'2x\',\'Y\':\'100%\',\'1f\':\'100%\',\'2R\':0,\'4A-3f\':\'1Y\'});if(v.2R==1){if(v.Uu==1){O(o.dH,{"5W-ae":"fG fG fG "+v.sL+"px "+v.8x+" Uv",\'51\':2})}F{O(o.1E,{\'2R\':v.sL+\'px 6r \'+v.8x})}}if(!1T.Uw(\'.sH\')){B 1G="";if(v.IB==1){V(B i=1;i<4;i++){if(2E(v[\'1v\'+i])){1G+=\'--Ux\'+i+\':\'+3E(v[\'1v\'+i])+\';\'}}}iQ("5d, 5d > *{-3N-Uy-5u: 3h;1n: o4;1c: 2y;1b: 2y;6s:4j;yJ:yQ!5O;6h-Y:1Y!5O;dR-1e: Uz;2T-UB: 8i 8i;5W-iR:sQ-5W!5O;-3N-yY-zc-1v: 5p(0,0,0,0);-3N-yY-zc-1v: e9;1B-UC:0!5O;"+1G+"} 5d 41{6h-Y:1Y} 5d > *:5V{Ut: 1Y} 5d,5d a,5d a:UD,5d a:UF,5d a:fy,5d a:e7,5d a:5V{1v:#fx;3Z-3O:100%;}5d e8{2R:0}5d e8{2l:4L!5O;6h-1f:1Y!5O;2w:e9}.sH{}5d 2v{2I:0}");o.1O.6m(\'UG\',\'sH\')}o.1O.1R(o.dH);o.1E.UH=E UI(e){o.pn++;if(o.pn==5){v.1p=1;1p(o.8w+\' \'+o.iW+\' \'+o.iX)}if(!e)B e=1M.1d;e.6v=H;if(e.aq)e.aq();B x=e.jP-gh(o.1O);B y=e.oO-iY(o.1O);if(v.UJ==1){if(J(v.pi)){if(4D(v.pi)!=\'\'){o.tm=v.pi;J(v.zd)?o.fg=v.zd:\'\';v.pi==\'1Y\'?o.fg=o.d:\'\'}}}s8(x,y);K L};E s8(x,y){if(o.fg.I(o.d)==-1||v.Ah==1||v.4P==1){if(!J(o.4P)){!v.oy?v.oy="3W":\'\';!v.rS?v.rS="3F":\'\';o.4P=1X(\'2c\');B 1G;B n=0;V(B i=0;i<10;i++){if((v[\'rm\'+i]==1&&v.4P==1)||i==9){if((J(v[\'rm\'+i+\'t\'])&&J(v[\'rm\'+i+\'a\'])||i==9)){1G=1X("tn");if(i==9){if(v.UK!=1){1G.tl=o.tm+(v.zU==1?" "+o.8w:\'\')}F{1h}}F{1G.tl=v[\'rm\'+i+\'t\']}if(i!=9){if(v[\'rm\'+i+\'a\'].I(",0/1")>-1||v[\'rm\'+i+\'a\'].I(",1/0")>-1){B z=v[\'rm\'+i+\'a\'].2q(\',\');1G.tl+=\' (\'+(3B(z[0].1j(4))==1?2P(\'on\'):2P(\'6O\'))+\')\'}if(v[\'rm\'+i+\'a\'].I("2Z")==0){o.f6=H;!o.2Z?o.Q.zw():\'\'}}1G.6m("i",i);zq(1G);1G.1w("2t",zE);o.4P.1R(1G);n++}}}O(o.4P,{"1B-2T":"UL","2C-1f":"1","b9-8U":"eg","2w":5R(v.oy,0.7)});if(n>1){O(o.4P,{"2S":"ic"})}o.4P.C.51="UM";o.4P.iT=zO;o.1O.1R(o.4P)}F{6N(o.4P)}O(o.4P,{"1n":"2x","1c":y,"1b":x,"1B-8E":"1b"});B td=L;if(o.2U-x<o.4P.2b-20&&v.tg!=1){O(o.4P,{"1b":x-o.4P.2b});td=H}if(v.UN==1||td){O(o.4P,{"1B-8E":"2m"})}o.zQ=x;o.zx=y;2G(o.py);o.py=1z(E(){3n(o.4P)},47)}}E zO(){2G(o.py);o.py=1z(E(){3n(o.4P)},47)}E zE(e){B i=e.4k.7C("i");B y;B rP=L;if(i>0){if(i==9){o.fg!=\'\'?1M.7I(o.fg):\'\'}F{B x=v[\'rm\'+i+\'a\'];if(x){if(x.I("3o:")==0){if(x.I(",0/1")>-1||x.I(",1/0")>-1){B z=x.2q(\',\');B b=o.Q.t8(x,"3d");B u=3B(z[0].1j(4),z[1],b);js(z,u);sD();s8(o.zQ,o.zx);rP=H}F{y=x.2q(",");3B(y[0].1j(4),(J(y[1])?y[1]:1S))}}if(x.I("2Z:")==0&&o.2Z){o.2Z.3o(x.1j(6))}if(x.I("js:")==0){y=x.2q(",");2g(y[0].1j(3)+\'(\'+(J(y[1])?\'"\'+y[1]+\'"\':\'\')+(J(y[2])?\',"\'+y[2]+\'"\':\'\')+\')\')}if(x.I("X:")==0){x=x.1Q(/\\(X\\)/g,zi());x=x.1Q(/\\(Vb\\)/g,zk(J(v.zm)?v.zm:1T.pJ));x=x.1Q(/\\(1L\\)/g,o.cd);x=x.1Q(/\\(7E\\)/g,v.7E);1M.7I(x.1j(4))}}}!rP?3n(o.4P):\'\'}}E zq(x){O(x,{"2S":"zr ic","3Z-3O":(v.zs?v.zs:"55")*2B(v.8f,1)+"%","ih-gf":"0.UQ","1A":0.9,"1v":v.rS});x.1w("oC",Aq);x.1w("oA",A0)}E Aq(e){O(e.4k,{"1A":1});O(e.4k,{"2w":5R(v.oy,0.5)})}E A0(e){O(e.4k,{"1A":0.9});O(e.4k,{"2w":"1Y"})}o.1i=1u zV();if(o.1i.5a){B sj=(v.yA==1?\'*::-3N-P-Q-1t-Vc-oq {2l: 1Y!5O;-3N-sl: 1Y;}\':\'\');if(v.o9==1&&v.yv!=1&&(v.yu!=1||!o.1i.7t)&&(v.yt!=1||!o.1i.io)){}F{if(o.1i.5a&&v.fo==1){}F{sj+=\'gB::-3N-P-Q {2l:1Y !5O;}*::-3N-P-Q-VA {2l: 1Y!5O;-3N-sl: 1Y;}*::--3N-P-Q-1y-oq {2l: 1Y!5O;-3N-sl: 1Y;}\'}}B 1G=1T.1X(\'C\');1G.1D=\'1B/O\';1G.1R(1T.yE(sj));o.1O.1R(1G)}if(o.1i.z6){v.3b==1&&v.VC==1?v.3b=0:\'\'}if(o.4R==0){if(o.1O.2V==15&&!o.oj&&v.yO>0){O(o.1E,{"1f":v.yO})}}if(J(v.ir)){v.W.dq=v.ir}if(J(v.oc)){v.W.oe=v.oc}if(J(v.1t)){o.29=v.1t}if(J(1M.C7)&&v.VD==1){1M.C7(g6)}F{g6()}}E g6(){1p("g6");o.U=1u Cx();if(!v.3w){v.3w="?"}if(v.pl){v.3w=v.pl+o.dn}o.VE=oF();o.CC=0;o.5m=us();if(o.5m){if(2W.46("uE")!=1S){o.uS=2W.46("uE")}F{o.uS=oF();2W.7A("uE",o.uS)}if(v.uO==1){if(2W.46("uN")!=1S){o.4J=2W.46("uN");if(2E(v.ch)){if(v.ch.I(o.4J)>-1){o.4J=1S}}}}if(v.Ct==1){if(2W.46("uI")!=1S){v.aQ=2W.46("uI")}}V(B i=0;i<o.ce.S;i++){if(v[\'C9\'+o.ce[i]]==1){if(2W.46("Cd"+o.ce[i])!=1S){}F{v[o.ce[i]+\'s\']=0}}}7H("VF");7H("VG")}o.9j=o.9u.1j(o.9u.I("://")+3);if(o.9j.I("#")>0){o.9j=o.9j.1j(0,o.9j.I("#"))}if(o.5m&&v.c8==1){o.3p=1u Cg()}if(v.ji==1){o.5u=v.VH;wq(o.1E,"5u",H)}v.fY==1&&v.ji==1?o.fY=1u VI():\'\';v.ab==1?VJ():\'\';if(v.VB==1){o.bn=1u VK();o.bn.bh()}o.P=1u Cn(v.3w);if(!o.1i.2f||v.cz==1){o.1O.1w("VM",E(){o.4S=H;o.oY=H;o.Q?o.Q.Cp():\'\'});o.1O.1w("VN",E(e){if(!o.3C){if(v.1r.9t>0){2G(o.CR);o.CR=1z(E(){if(o.4S!=o.oY){o.4S=o.oY;o.Q.tA()}},v.1r.9t*2h)}F{o.4S=L}o.oY=L;if(o.Q){o.Q.oM()}}})}if(!o.1i.2f){o.1O.1w("Dj",E(e){if(!o.jz){o.3C=H}});o.1O.1w("a0",E(e){if(!o.jz){o.3C=L;if(!o.5g){o.9p=L;o.dW=L}if(o.1i.dR&&o.1i.cz&&o.22){1z(E(){o.4S=L;o.Q.tA()},3V)}1z(E(){o.5V=H},3V);if(o.1i.2f&&o.Q.pH()){}F{o.Q?o.Q.fT(e.6b,e.9o):\'\'}if(v.fJ==1){if(o.Q.cN()){o.Q.7x()}}}});o.1O.1w("qm",E(e){if(!o.jz){if(J(o.Q)){if(o.3C){o.Q.fQ(e.6b,e.9o)}F{o.Q.xB()}}}})}if(o.1i.2f){1M.1w("VO",z3,L)}v.ty==1&&1J Di==\'E\'?o.ty=1u Di():\'\';o.3z.1w("fS",E(e){if(e.7L){o.fV=e.7L.S}o.3C=H;o.4S=H;o.oK=L;oJ("1t",e)},{fP:H});o.3z.1w("bw",E(e){if(e.7L){o.fV=e.7L.S;if(o.fV>1){o.tT=1}}if(o.3C){o.oK=H;oJ("VP",e)}},{fP:H});o.3z.1w("fR",E(e){o.3C=L;1z(E(){o.4S=L},3V);if(v.pI==1){B j3=1u 6M().9m();if(j3-o.9y<(v.jJ?v.jJ:0.3)*2h){pg(e)}}!o.oK&&o.fV<2&&o.tT!=1?fw(e):\'\';o.oK=L;o.fV=0;if(e.7L.S==0){o.fV=0;o.tT=0}oJ("43",e)},{fP:H});3g{1M.1T.1w("a0",E(e){o.5V=L;if(!o.5g){o.9p=L;o.dW=L}if(o.3C&&o.Q){o.3C=L;o.Q.fT(e.6b,e.9o);o.Q.oM()}if(!o.4S&&!o.1i.2f&&!o.1i.tv){o.Q.bp();if(o.2X){o.2X.ao()}o.Q.D1()}})}2H(dV){}1M.1T.1w("qm",E(e){o.Q&&o.3C?o.Q.fQ(e.6b,e.9o):\'\'});if(!o.1i.tv){o.1O.1w("fS",E(e){o.jz=H;o.1i.2f=H;o.dR=H;o.3C=H},{fP:H});o.1O.1w("fR",E(e){o.dR=L;o.3C=L},{fP:H});1M.1T.1w("bw",E(e){if(o.Q&&o.dR){o.Q.fQ(e.7L[0].jP,e.7L[0].oO)}},{fP:H})}1M.1T.1w("VQ",E(e){B x=e.4k.oW.oZ();if(x==\'pW\'||x==\'B1\'||x==\'B4\'){K}F{o.Q?o.Q.D9(e):\'\'}});1M.1T.1w("VR",E(e){B x=e.4k.oW.oZ();if(x==\'pW\'||x==\'B1\'||x==\'2c\'||x==\'B4\'){K}F{o.Q?o.Q.B5(e):\'\'}});if(o.8e){q0(9P.1T,CD)}q0(1T,CL);E q0(x,z){B y=[\'\',\'p8\',\'3N\',\'ms\',\'VS\'];if(x){V(B i=0;i<y.S;i++){x.1w(y[i]+(i<y.S-1?"VT":\'\'),z,L)}}}if(!J(o.dH.jy)){1p("VU");K}F{o.dH.jy.1w(\'4N\',pb,H)}if(!o.1i.2f){o.3z.1w("2t",E(e){!o.jz?fw(e):\'\'},L);if(v.ob==1&&v.pI==1){o.3z.1w("B9",pg,L)}}p6();if(v.4a){v.4a.on==1?o.4a=1u VL():\'\'}v.5B==1?o.5B=1u Vz():\'\';v.gp==1?o.gp=1u Vo():\'\';o.Q=1u rz();if(v.bs.Bh){o.o6=v.bs.Bi}ag();aY();if(o.5m){if(v.rC==1&&v.1F!=0&&!o.1i.2f){if(2W.46("rF")!=1S){v.1F=2W.46("rF")}if(2W.46("jE")==1&&v.oa==1){v.5k=1}}if(v.AE==1){B sp=2W.46("AF");if(J(sp)){if(sp.I(\'.\')>0&&o.jv){o.U.9s(sp,1)}F{if(o.5L){B oh=7n(o.5L,sp,H);if(oh!=-1&&o.Q.AG(\'54\')){o.9v=oh;o.P.9s(o.5L[oh])}o.Q.AJ()}}}}B qT=L;if(v.qN==1){V(B j=0;j<o.cn.S;j++){if(2W.46("os"+o.cn[j])!=1S){v[o.cn[j]]=2W.46("os"+o.cn[j]);qT=H}}}if(o.1i.2f){if(!qT){v.qH&&v.qH>-1?v.dg=v.qH:\'\'}if(J(v.AU)){v.ou=v.AU;2E(v.BM)?v.pG=v.BM:\'\'}}}if(o.3p){B f=o.3p.a1();if(f.t&&f.d){o.Q.dy(f.t,f.d);o.Q.3H(f.t,f.d);v.1m=f.d}}o.U.3R(v.1F);if(v.5k==1){o.U.56();o.Q.4w()}if(J(v.C1)){3B("54",v.C1)}o.a6=1u pU();if(v.7j>0){if(v.fJ==1||o.bm<qB){O(o.1E,{"2R-6S":(v.7j+"px")});O(o.1O,{"2R-6S":(v.7j+"px")})}F{Vy()}}if(J(v.6y)){qA("6y")}if(J(v.f9)){qA("f9")}if(J(o.W)){js("W")}if(v.8a==1&&v.Vf==1){o.U.pC()}V(B i=2;i<10;i++){if(J(v["e6"+i])){if(v["e6"+i]=="2f"&&o.1i.2f){3B("e6",i)}}}1z(pb,3V,H);1z(E(){js("8t");if(v.3T){if(1J v.3T==\'E\'){v.3T=v.3T.6x};2g(v.3T+(v.3T.I(\'()\')==-1?\'("\'+v.id+\'")\':\'\'))}},1)}E fw(e){if(o.qn[o.3z]>2){K}o.pt=H;v.jJ==0?v.pI=1:\'\';if(o.oo&&v.e2==1&&!o.1i.tv){pg(e)}F{B t=(v.jJ?v.jJ:0.35)*2h;o8();2G(o.BB);o.BB=1z(E(){o.cG=0},t+4B);if(v.pI==1||(v.ob==0&&v.1N.pj!=1)){xf()}F{o.oo=1z(xf,t)}}o.cG++;pE()}E xf(){o8();if(o.1i.2f){if(o.Q.pH()){o.Q.xB();if(o.3y&&v.pu==1){o.U.6c();v.pu=0}if(v.Vg!=1){K}}if(o.jN){if(v.C0==1&&v.Vh==1&&o.1i.as){K}if(v.fo==1&&v.Vi==1&&o.1i.5a){K}}}if(o.cG>1&&v.1N.pj==1){o.cG=0;K}o.cG=0;if(v.e2==1){o.1i.2f&&v.Vj==1?\'\':o.U.fw()}}E pg(e){o8();B y=L;if(v.1N.pj==1){if(e){if(v.1N.Vk==1&&!o.1i.2f){}F{B x;if(o.1i.2f){x=e.Vl;if(!x){if(e.AS){x=e.AS[0].jP-gh(o.1O)}}}F{x=e.Vm}if(o.9z>1){x=x/o.9z}if(x){if(x<o.2U/2){if(x<o.2U*20/100){3B("3S","-"+2B(v.1N.AP,10)*o.cG);v.1N.2O==1&&v.1N.AH==1?7i(\'3S\',0):\'\';y=H}}F{if(x>o.2U-o.2U*20/100){3B("3S","+"+2B(v.1N.AP,10)*o.cG);v.1N.2O==1&&v.1N.AH==1?7i(\'3S\',1):\'\';y=H}}if(y){if(e.aq)e.aq()}}}}}if(!y){if(v.ob==1){if(v.o9==1&&o.1i.2f){}F{o.22?o.U.8B():o.U.8M()}}}}E o8(){2G(o.oo);o.oo=1I}E pb(x){if(o.Bf!=o.1O.2b){x?o.Bf=o.1O.2b:\'\';pb()}F{aY()}}E aY(){B y=L;if(o.aD!=o.1O.2b||o.bm!=o.1O.2V){y=H}p6();o.Q?o.Q.4N():\'\';o.P.4N();y&&!o.22?js("4N",o.aD+\',\'+o.bm):\'\'}E p6(){B xw=o.1O.2b;B xh=o.1O.2V;if(o.Q){if(v.vO==1){if(v.W.1n!="2K"){B x=o.Q.bu("B0")+o.Q.bu("1c")+5+o.Q.bu("D4")+2B(v.Ve,0);O(o.1E,{"1f":x})}}}if(o.4R>0&&!o.22&&!o.cU){xh=xw/o.4R+2B(v.v8,0);O(o.1E,{"1f":xh})}if(!o.22&&!o.cU&&!o.aC){o.aD=2D.4i(xw);o.bm=2D.4i(xh)}if(o.1i.2f&&o.22&&v.vg==1&&bx.eh){if(o.4R>0){if(o.4R<1||o.P.8W()<1){B sp=bx.eh.v9(\'Ap\');if(sp!==1I){sp.bP(E(){}).2H(E(e){})}}F{B sp=bx.eh.v9(\'wN\');if(sp!==1I){sp.bP(E(){}).2H(E(e){})}}}F{B sp=bx.eh.v9(\'wN\');if(sp!==1I){sp.bP(E(){}).2H(E(e){})}}}o.2U=xw;o.4Q=xh;if(J(v.1L)&&o.Q){v.1L!=\'\'?o.Q.CW():\'\'}if(J(o.jr)){o.P.1K(o.jr)}if(o.1Z&&!o.22){o.1Z.2z()}o.2X?o.2X.2z():\'\';o.bn?o.bn.2z():\'\';o.5B?o.5B.3o(\'4N\'):\'\';o.bI?o.bI.2z():\'\'}E ag(){o.U.pe(v);V(B x in v){if(v.2n(x)){if(x.I("1L")==0){if(v[x]!=\'\'){o.vh=v[x];o.U.ag(x)}}}}o.gp?o.gp.Dg():\'\'}E 9S(X,1E,1K){if(X){if(X!=\'\'){if(v.bt==1){X=bt(X)}if(1E==o.2e&&X==o.wQ){}F{if(X.I("#"+v.9C)==0){X=o[o.fd[0]](X)}if(X.I("#0")==0){X=bR(X)}X=w6(X);if(J(v.DD)&&X.I("//")==-1){X=v.DD+X}B s="vn";if(1K=="6i"){s="Dp"}if(1K=="1Y"){s="2y"}if(1K=="Dn"){s="100% 100%"}if(X.I(\' gi \')>0&&1E==o.2e){o.je=X.2q(\' gi \');3G(o.wJ);o.wJ=6R(Cj,2B(v.Vn,2)*2h);o.gG=0;X=o.je[0]}X=X.1Q(/ or /g,\'"),X("\');X=X.1Q(/\\s/g,\'%20\');if(v.Vp==1&&7n([X],\'.AA\')){B 1G=\'6T\'+v.id+\'Vq\';1E.1V=\'<gB id="\'+1G+\'" 2Y="\'+X+\'" 8N=1 jc=1 3b=1 3y=1 C="Y:100%"></gB>\';o.gu=1T.8n(1G)}F{o.gu=1I;1E.1V=\'\';O(1E,{\'2w-ac\':\'X("\'+X+\'")\',\'2w-gj\':\'no-gj\',\'2w-1n\':\'8i\',\'2w-3O\':s})}1o(1E);1E==o.2e?o.wQ=X:\'\'}}}};E Cj(){if(J(o.je)&&J(o.gG)){o.gG++;if(o.gG>=o.je.S){o.gG=0}9S(o.je[o.gG],o.2e,v.gv)}}E Vr(x){if(x.on==1&&J(x.2Y)){x.2Y=w6(x.2Y);B y=1X("2c");if(x.2Y.I("3L")>-1||x.2Y.I("//")==0){B z=1X("41");z.2Y=x.2Y;y.1R(z)}x=9G(x,v.CM);x=4b(x,\'2I\',\'2I\');O(y,{\'1n\':\'2x\'});if(x.1n.I("2K")>-1){O(y,{\'2K\':x.d8})}if(x.1n.I("2m")>-1){O(y,{\'2m\':x.4C})}if(x.1n.I("1c")>-1){O(y,{\'1c\':x.9r})}if(x.1n.I("1b")>-1){O(y,{\'1b\':x.4m})}o.1E.1R(y)}};E CL(){if(o.22&&!vU()){o.U.wg(H);o.1i.ff?aY():\'\'}F{if(o.cU||o.4S){vU()?o.22=H:\'\';o.U.wo()}}1p("22",o.22)}E CD(){if(v.ji==1){wq(o.1E,"5u",H)}}E Vs(){1p("eh "+bx.eh.om)}E z3(){if(2D.z4(1M.eh)===90){1p("wN");if(v.An==1){B ok=H;if(v.Aw==1&&!o.1t){ok=L}if(v.Av==1&&!o.1y){ok=L}if(o.8Q){ok=L}if(o.1Z){ok=H}!o.22&&ok?o.U.8M():\'\'}}F{1p("Ap");if(v.An==1){o.22&&v.vg!=1?o.U.8B():\'\'}}}E vU(x){!x?x=1T:\'\';B y=L;3g{y=!!(x.Vt||x.Vu||x.Vv||x.Vw||(x.Vx!=1I))}2H(e){y=L}K y}E zS(x){K x.2b==0&&x.2V==0};E xL(){V(B x in o){if(x.I("A1")>-1){3G(o[x])}if(x.I("xE")>-1){2G(o[x])}}1p("Rr")}}', 62, 3942, '|||||||||||||||||||||||||||||||||||||var|style||function|else|this|true|indexOf|exist|return|false|||css|media|controls|but|length||actions|for|playlist|url|width|control||||||||time|key||pjstg|left|top|event|action|height|settings|break|system|substr|hide|case|duration|position|show|log|icon|toolbar||start|new|color|addEventListener||play|setTimeout|opacity|text|hls|type|container|volume|tmp|playlist_dic|undefined|typeof|scale|title|window|hotkey|frame|faction|replace|appendChild|null|document|set|innerHTML|subtitle|createElement|none|vast|||fullscreen||||subs||data|seekto|pip|offsetWidth|div||poster|mobile|eval|1000|file_type|error|vasturl|display|right|hasOwnProperty|sub|open_action|split|tip||click|files_quality|svg|background|absolute|auto|Resize|Play|existv|line|Math|exist2|stop|clearTimeout|catch|margin|parseInt|bottom|push|options|tiptext|icons|Lang|_type|border|padding|transform|screen_w|offsetHeight|localStorage|droplist|src|share|||||||||||files_subtitle|autoplay|linear|linkurl|Pause|events|try|hidden|player|plid|scaleX|media2|current_quality|hide2|api|continue|removeChild|current_subtitle||scaleY|rows|sbt|file|floatleft|muted|mediacontainer|handle|apiProcessor|mouseDown|mediascale|CheckColor|ffffff|clearInterval|Duration|urls|dash|parseFloat|http|object|webkit|size|Seek|vasttype|Volume|seek|ready|1px|500|000000|files|org|font||img|attr|end|||getItem|2000|||chromecast|MarginPadding|Remove|xlink|xmlns|www|delete|ShowOrHide|round|visible|target|values|marginleft|_to|_|Time|obj|stroke|pause|plstart|tagvideo|preload|refresh|youtube|settings2|parentNode|pointer|200|marginright|trim|dom|is_hls|_from|gradient|empty|default_quality||block|xhr|resize|custom|rightmenu|screen_h|aspect|mouseHere|subtitle_on|bgcolor|f2title|string|pljssglobal|Action|casting||zIndex||order|speed||Mute|||JSON|ios|folder|quality|pjsdiv|int|valuefontsize|volumewheel|transition|m_to|out|mute|butPosition|storage|canvas|bga|rgba|isLive|_value||menuproc|visibility|arr_up|m_type|arr_down|Motion|shuffle|value|effects|f2action|Hls|f2value|random|onError|vastloader|live|vast_loaders|dechar|files_speed|airplay|isVisible|important|ftitle|plx|hex2rgb|animation|onOut|SetQuality|focus|box|cut|toString|is_dash|||UpdateText||||||||keys|clientX|Unmute|captions|UpdatePlaylist|remove|vast_|max|fill|evntclk|iset|valuecolor|setAttribute|dash_created|hlsconfig|over|ease|solid|overflow|charAt|File|cancelBubble|onOver|name|midroll|minutes|UpdatePlay|clr|intro|activeiconsize|String|slice|control2|cursor|filter|next|parse|removeEventListener|Date|show2|off|status|download|setInterval|radius|pjs|cuid|bgpaddingleft|preroll|files_audiotrack|vast_and|motions|||||||||||skip|bgpaddingright|aover|line3|redirect|ioff|FindBut|ended|PluginHotIcon|rounding|Events|current_audiotrack|okpd|indOf|state|obj2|tips|span|safari|iphone|playing|_url|customline|Settings|audiotrack|toolbarHidden|setItem|val|getAttribute|Object|label|waiting|default|SettingsTimers|open|StopWaiting|playedstore|touches|always|backgroundColor|f2i|channels|navigator|bg2|seconds|1999|com|current_url|onEnded|layer|HLS|realfullscreen|||||||||||pass|timer|buffered|reload|parentIframe|globalfs|tipcrn|hours|center|paused|Value|points|VAST|getElementById|alpha_div|message|floor|ShowPoster|location|init|_show|metadata|version|bordercolor|lastwheel|_cul|is_sleep|Normalscreen|fvalue|isVastBgLoad|align|Advertising|Tip|apiprm|leftBg|pipwebkit|Waiting|info|Fullscreen|loop|scroll|is_ws|ispipkit|container_h|xbg|gif|space|ll1I|ratio|container_w|hlsquality|stretch_width||timeline|min||opid||line0||||area|loading|icn|lines|sub_off|vast_or|SetSubtitle|pnt|ctx|href2|txt|onWaiting|getTime|customtext|clientY|hidden_volume_over|ResizeText|margintop|SetSpeed|hideleavetimeout|href|current_speed|hls_subs|cutted|clicktime|fzoom|hls_created|plhistory|enc2|HlsLevelsLength|wait|bitrate|UpdateObject|all|nativecontrols|srch|HideControl|bgpaddingtop|track|actionstt|marginproc|parent|onDuration|control_|Poster|destroy|bgaover|files_quality_ag|onPlay|Sub|curtain|blur|mouseup|flag|concat|fbg|loaded|small|alert|lIll|Arrows|bgpaddingbottom|preventDefault||image||shadow|ncrtat|Title|pointerEvents|fltrs|reloadTimer|tag|End|8px|pld|Close|mrgnprs|stopPropagation|charCodeAt|android||vertical|_hide|media_error|rotation|bgl|_cstm|PlaylistNext|audiotracks|fullscreen_process|normal_w|buffer|Stop|scrollbgcolor|body|evntout|delta|motion_id|Status|console|bgtop|onMouseUp|add|default_audio|but_x|stage_y|gaTracker|_keyStr|iconscolor|Retimer|_css2|MainResize|onClick|replay|||scrollLeft|stage_x|butplstart|Background|evntovr|Switcher|white|SubtitleChanged|noads|vimeo|f2id||unmute||Start|upld|m3u|||normal_h|quiz|playById|SettingsClose|qualities||control_title|fplace|PlaylistG|pjs_i|touchmove|screen||PlaylistNextExist|toolbar_hide|tlbrhd|thumb|send|forcehide|00|inline|pause_before_vast|rec|open_settings|currentTime|_rb|line_width|hls_config|id_|then|deltaY|fd0|audioTracks|gao|vast_loadtxt|ShowOrHideProcessor|native|currentFile|enc3|cubic|source||||CustomSwitch|hlsaudio|CalculateClick|salt|timestore|title2|volumewheelin|||titlestore|vsts||switch|forbidden_quality|search|onMeta||reloadto|but_space|sub_options||Array|onTimeupdate|ldr|but2||dur|line3value|_speed|||desktop|lang|sec|onload|VastRemoveAndPlay|bgcolorover|CreateItem|clicks|DashLevelsLength|levels|Remove2|3px|skpbt|StyleItem|SettingsVisible|browser|Playlist|Clickable|line1|sttx|getElementsByTagName|fullscreen_start|plfolder|pljssglobalid|MediaReady|ActionPlaylist|sub_shift|CreateHLS|Home|stout|iconsover|shuffle_|hidejustfull|ellipse|PipWebkit|marginbottom|decode|bgbrovr|toolbar_margintop|Scale||cow|floatwidth|sub_bottom|or0|err404v|||onVolume||pltxt|file2|_lastime|autoplaylist|Zoomed|ll1l||line2|controlover|onPause|pljsplayfrom_|Played|300|ScrollTo|toend|l1lI|file3_separator|UpdateTime|played|event_y|frameresize|scrollTop|vast_longtimeout|vast_impressions|pauseroll|prev|10px|handleicon|files_|onMove|touch|speed1|event_x|icns|err|hidden_volume_over_process|pjs_id|update|hiddenwidth|SetAudioTrack|PlaylistPrev|screenclick|responseText|tagframe|NewFile|design|active|iframe|transparent|Toggle|fontSize|PlayerState||coh|_start|nowrap|orientation|weight|qbr2|mediapip||||is_visible|channel|but_y|fontnames|000|casturl|load||handlewidth|textTracks|fontsize|autoLevelCapping|polygon|tippointer|pic|family|current|mediaSession|ControlClick|nomute|RemoveCurtain|Curtain|cul|bgt|nbsp|onclick|removeAttribute|stretch_with_volume|handle_width|expand|pointed|rightbs|setSpeed|topBg|videoHeight|thmove|hlsDashSub|linecap|timeFormat|ObjectFit||20px|PlaylistExist|checkFont|shareme|showoverto|showovercontrol|overlay||settingsovertimer|control_line||Subtitle||brandurl|_ease|overopentimeout|default_style|_step||posterhide|opn|nativefullios|||hdnn|alpha|||vast_poster|ScreenClick|fff|link||_status|flip|XHR|Pnt0|readyState|f2bg|0px|hlsdrm|rightside|hidevideo|maxBufferLength|url_shift|subtitle_start|subupld|Airplay|passive|StageMove|touchend|touchstart|StageMouseUp|_preloaded|tchs|VastRecover|Pos0|minify|loading_error|hdicon|HidePoster|Reload|_id|seeking_time|rldcnt|Ready|Il1l|sub_or|VastAddPreload||hideonpause|ToolbarDown|HideProof|items|spacing|600|findLeft|and|repeat|starttimeout|groupId||sub_settings_on|create|mediatags|scaleover|NativeEnterFs|SubtitleSettingsMenu|autohide|pstrv|poster_scale|HideForce|actplay|compilation|nativeAudioTrack|HideInterval|video|abc|justshow|upldfl|plNxtExst|pstrsi|AfterVast|bgpadding|relative|normal|bgg|PlaylistPrevExist|not|Init|butNames|FindPlStart|hls_force|texts|Off|TipText|AirplayChanged|PlaylistControls|jpg|iconreplay|scrollarrows|QualityChangedNoHand|Rot||resizePlaylist|indOf2|PlaylistVisible|custom_speed|pjs_|Download|CustomText|brightness|tmln|ni2||volumescroll|StyleLine|ResizeSettings||PlaylistShow|UpdateSpeed|hand|bgh|ToolbarShow|floatheight|iconangle||letterspacing|scl||svg0|StyleArrow|tipbg|onplay|bottomside|clickmargin|downin|sxs|clicked|airplayed|ymax|_prevIcon|uijs|HistoryPlaylist|headfontsize|offsetLeft|hmaxk|fcdef|SetSetting|rotation2|hidden_volume|hidewithoutmoving|BufferStop|win|marginprocleft|toggle|SettingsN|toolbarInterval|ctxtnk|hideoutmute|hidetimeout|stty|prm|saturate|rect|ShowForce|ScrollOverOut|lrpd|htto|seekwindow|clickarea|Mouse|shr|RenameQualities|parentcontainer|5px|||||letter||pljsplayed_|memory||subload||ipad|SubtitleLoad2|400|autonext|||file2_separator|NativeControls|ErrorOr|m3ut|swipev||Parsed|TimeSub|heartbeat|srt|hlsrows|hlsend_to|https|unshift|normalscale|playersize|_activeIcon|removed|hls_stuck_time|1em|_play_i|_wait|pushCSS|sizing|cftlr|onmousemove|_ended|VstLdTxt|compilations|playerid|findTop|created|errorto|FileTo|YtInit|now|pldur|recover|sub_color|qbr1|file_separator|url2|result|128|playsinline|chrome|pstrs|sub_sizeproc|sub_color2|Ctxt|observer|shift|days|galabels|yamtrid|canvas2|ssfontsize|ctx2|_t|custom_aspect||playlist_source|pjs_parent|line_speed|pl_first_id|midrolls|contentWindow|touched|dontplay|vast_longtomsg|frag|SubtitleLoad|pljsmute|VastNext|Thumbs|va2l|scrollleft|dclckto|PluginSub|RenewSubtitle|heartbeatInterval|nativefull|wheelstep|pageX|gatracked|3000|autoQuality|TagPlay|brd|seeking|left0|ShowTip|onmouseout|pip_quality|Error|gain|||paddingtop|Cut|sourceBuffer|domain|stretchonfullscreen|hlsautoquality|float|handlehide|errorMessage|currentLevel|hlschangequality|kbps|HandleWidth|l3v_show|mode|onmouseover|tippadding|RenewPoints|tipbgcolor|limitmaxwidth|_max_order|details|FltrVal|xtitle||tipbga|_seekaftervast|iosfull|speeds|mpi|999|onSeeked|onSeeking|backdrop|base64|loadLevel|subdrag|fspr|onStep|navigationUI|KeyPlusUp|_steps|full|HlsUpdateAudio|_fullscreen_end|VolumeWheelX|nhs|autoprevopenfolder|MidrollOverlay|sub2|floatlimitwidth|AudioTrackChangedNoHand|Load|VastLoader|VastBgLoad|sub_all|VastAndLimit|done|find|picture|scrollwidth|limitwidth|adsfirst|alldd|parsed|getHLS|NativeExitFs|VastVisible|num|getDASH|KeyPlusDown||seeked|sub_bga||sub_bgcolor||but_h|CreateShare|ima|gifed|setActionHandler|lang_|yaCounter|wght|playlist_title|onClickSubtitle|||isvg|lastIndexOf|eventstracker|started|clr_options|iclr|suboptns|omt|openplaylistbefore|openplaylistroot|StringVar|dvrtime|gaTrackPlay|covervideo|quartile|rld|timeld|userseek|998|vol|playroll|close|SettingChanged|copyObject|fit|sub_shadow|current_file|audioTrack|bgtmp|thumbnails|vars|while|||||opera|mtp|offsettimer|sub_weight|fid|rldplay|postroll||StopMedia||_lastactbut|UpdateVars|vastfrombg|valuefromlang|UpdateVars0|apdr||mediaSource|showinterval|fileTimeout|files_channel|Update|||isTypeSupported|Recover|RemoveMedia|playVideo|rumble|FileType|drtn|YoutubeID|_readyonplay|sub_upload|timerTime|vastonmobile|quality_received|YouTubeIframeAPIReady|_stopped|BeforeVast|hidevar2|resizeonwidth|remember_sub|fatal|hideuntilto|response|stuck|HlsLevel|container_id|ksu|hidevar|newfile|mini|playbgcolor|ShowLayer|edge|script|tpp|setaction|StyleActive|youtube_id|code|stretch_width_last|autonextopenfolder|wheelinterval|unmuteplease|vast_type|ssflyp|current_plurl|wtcntrl|plurls|SubtitleError|CreateDASH|MenuProc|scrollarrowcolor||scrollarrowsize|PipSize|videoWidth|PlaylistHere|PlaylistError||HidePoster2|SubtitleOff|worked|ResizePlaylist|BgBrAct|resizeonplay|vstpause|PlaylistRewind||write|openById|pauserollonplay|isPlaying|ssa|prefile|720p|urls_and|poster_a|poster_aover|dashquality|classList|rename_audio|resizeSettings|Start0|1080p|Show|480p|filerorto|subsor|subopt1|360p|240p|nops|AudioContext|YoutubeReady|wait_to|audiosrc|restart_audio|Ended|showtitleplaylist|youtu|static|exception|title_template|documentElement|ClearClick|nativecontrolsmobile|mutestore|doubleclick|playlistloop|postMessage|playlistrewind||thumbs_on|spd|frames|container_h_procent||tipalways|angle||click_t|iniframe|button||pljs|imgldd|sub_size|linkurl2|Player|handleiconspress|rmbgcolor|found|mouseout|changeheight|mouseover|onDown|HideTip|randomstr|serif|_control_|marginbg|Touch|mouseMove|hideAllIcons|StageLeave|isReplay|pageY|SwitchText|IconsColor|100000|bgo|tippaddingtop|lineHeight|CreateTip|tagName|svg3|mouseHere2|toLowerCase|lngth|333333||timeshort|polyline|colorbg|MainUpdateSize|CustomToogle|moz|resizetxt|noclick|FrameResizer|customdesignsvg|sans|TitleTemplate|mouseUp|DoubleClick|ff0000|rc_label|seeksides|screencolor|||rightclick|14px||datetime|||acted|unmuteonclick||rotate||rightout|handleaover|handlescale|scripts|Password|bgcontainer|JsClk|lastTouch|sub_size_fullscreen|ToolbarHidden|click0timeout|referrer|iconscolorover|icon2|bgbordercolor|timeline_h|bgborder|overlays|sub_stroke|VastVideo|Bglines|vast_midroll_limit|Alert|midrollo|input|removeTracks|_hlssubtracks|restart|FSL|||_time_load|floatmarginright|outro|vastgo|playiconbut|hlsSub|IndexPlaylist|pstr_to|pjs_parent_i|paddingleft|paddingright|IndexPlaylistProcessor|tipbgrounding|SubUpload|fixed|tipletterspacing|FileReader|setQuality|mobtch|mousemove|moving|ceil|posteronpause|tipfontsize|tipfont|vastcontainer||tipcolor|tippaddingbottom|removeItem|nextLevel|tippaddingleft|vastclick|str2obj|120|stopotherplayers|SettingsParser|nativesub|ShowHandle|NewAspect|sub_bottommob|onPipLeave|6px|decoration|VastPreloaded|sleep2|sub_designstore|RemoveForNextAd|handlea|order0|_rights|_move_rights|substore|VastPreloadLoad|onPipEnter|lastsub|splice|handleiconpress|Action2|historybga|||but_w|moveOr2end|LineScale|onUp|onup_to|historybgcolor|historytitlea|vast_preload|DVR|sub_bgpadding|toggleControl||SetSubtitle2|subtitles|sub_font|SubRem|iOSTrackLoaded|dash_subs|handlemove||vstdwn|timeline_w|handlehideinit|VastGo|EndMove|vast_starts|over_final||Style|leftandrightpadding|||Controls|onTagError|Empty|volumestore|VastCheckNext|movevent|pljsvolume|Thumb2|coloroverplay|_recover|bg_hide|handleiconover|adsinchain|contentDocument|isAuto|viewBox|dont|activeicon|NxtExt|rmcolor|playedstored|getQuality|getAudioTrack|ll11|posterhidepause|user|Playing|poster_float|||||scrpt|l1ll|maxMaxBufferLength|RightMenu|timerInterval|fontFamily|NativeSubtitle|join|Shuffle|SubtitleParse||network|160p||ioscss||appearance|sleep_timeout|HlsSleep|Captions||hlserror|Menuproc|||urlcnfg||||Script|gaurl|1440p|2160p|urlsl|reRightMenu|sub_upload0|livewakeup|150|pjscssed|playerjscom|CreatePoster|Preload|bordersize|sepia|onMobMove|PluginMovable|toolbarhidden|content|xy00|mediadrag|startwait_t|RadioTags|tagsurl|SetCurrentQuality|nohls|onYtPlayerReady|removedNodes|getVideoData||||||StartSpeed|nocontrols|butByS|ytautoquality|cntrls||getDuration|tmpr|MediaYoutube|onDash|notofh||_set_quality|pauseVideo|dontload|innerText|brand|div2|||CheckDash|is_hls2|HlsSleep0||CheckPip||audioctx|Heartbeat|geo|gained|Review|vts|fts|clientWidth|png|fjs|offsetTop|mdswp|onerror|PlaylistLoad|blra|m3ui|pp2|nativeControls|ChangePip|settimer|pljssubtitle|SubtitleLoadAll|v360|tchs2|plcontinue|xvalue|enabled|nohead|tagSrc|PlayerSize||TipVol||||||||||toFixed|volume2|ControlsBg|End2||End3|sub_store||autoplaymute|SubtitleTimerMenu|hostname|Seeked|vtt|pstr||prototype|_tags|StorageSupport|checknative|postmessages|MseIsSupported|ErrorMsg|LoadedData|Metadata|pjsframed|heightInterval|WaitSize|pipto|onYoutubeReady|pljsuserid|span05|ass|VisibleCheck|pljstrack|CreateWS|ws_created|hls_started|isNaN|pljsquality|qualitystore|HlsAudioTrack|InitVisible|renameTracks|userid|HlsAudioTracks|ErrorReload|VisibleItems|reloadtimeout|cnt|reloadfirst|advertising|ie9|scrollarrowbgcolor||rename|UpText|playlistovertimer|fonts|Places|screenmarginbottom|lock|utx|SetCSS|smbls|onClick2|Prefile|upload|landfullmobile|maintitle||TipHide|toolbarisdown|embed|Loaded|contain|last|ReplayIcon|logout|match|marginbgcolor|tem|MediaSess|quick|control_start||destroyed|fileorto|UpdateStart|valuemargin|valuepadding|reloadlog|youtubeposter|grdlft|play75|playerjs_|play50|play25|_blank|check|clck|marginbgpadding|change2playlist|HidePositionControl|stvs|Loading|subpausehide|StartTimeout|isFullscreen|killMotion|start2|exist2v|thumbs|arrinterval|stringify|other|||btm|fromCharCode|checkBase64|doctype|spn|SubOpt|removebykey|NoSpan|settingsNumberVisible|insertBefore|iconopacity|ControlOut|NormalscreenUI|hidetime|Rotate|Text|ctxt|resizeonmouse|resizeme|startcss|FullscreenUI||Visibility|sub_x||downi|updown|||sub_reset|_css|lastt|SpeedChanged|hideonplay|Marquee|chr|encoded|UpdateVolume|linkurl0|resizeFromText|last_text_w|pstrsin|updatePlaylist|pepper|bgcolorlink2|landscape|marquee|_i|currentposter|postsmbl|3600|presmbl|imageLoaded|ClickArea|ActionOptions|mutedautoplay|TheEnd|StyleSubtitle||||||bordercolored|QualityChanged|sleeptimer|playbgcolored|leftright|2001|show_settings|mozRequestFullScreen|addtitleplaylist|ssfontcolor|ScreenClick2|CustomTextButs||webkitRequestFullScreen|onMobOver|customTextPl|cpm|msRequestFullscreen|ontouchmove|deg|resizetext|TitlePl|_currentIcon|requestFullscreen|show_playlist|CloseSttx||||piped|deltaX|minw|StageMove2|wheel|tmp2|timeout|ShowShare|re_y|zpTSMqp0Kn48HZ9WajM|ControlCoordinate|ToolbarHide|requestFullScreen|Destroy|butseekto|hideuntilstarted|JsEvent|plopenid|exitfullscreen|introstart|pjslng|path|effect|_stop|querySelectorAll|pldur3|pldur2|VolumeWheel||||||ahd|upText|volumewheelfull|sstext|submm|noprevicon|_timeout|drawImage|scrollarrowbg|ClosePl|handlecolor|borderRadius|addtitleplaylistbr||hdbrdclr|clickscaley|fullblack|Alpha|stopkeys|firstly|640|nameofyoutubequality|360|full_hours|nativenotipad|nativenotiphone|nativenotios|sfjs|arial||I1lI|hidestartbutios|current_time|menufltr|playlist_id|createTextNode|helvetica|PluginPip|keyframes|ChkHlsEnd|direction|rgb|last_subtitle|High|playByYoutubeId|playerheight|playId|ltr|pipSrc|Scripted|notag|VastBreak|1800|setVolume|getPlayerState|tap|time2|||toLocaleTimeString|OrientationChange|abs|full_minutes|mobiletv|540p|900|1150|SetChannel|1550|highlight|rc_labelurl|default_subtitle|ga_event|CreateMedia|_html|Href|VastInfo|encodeURIComponent|seekTo|parent_domain|rand|callback|wrapper|RightCSS|4px|rmsize|Yandex|getContext||CrShr|right_y|ParseUrl||dashaudio|pjsframe|PlayerjsEvents|maxresdefault|RightClick|reachGoal|pjsfrm|yaHit|YouTube|Timer|api_|dasherror|PjsFramed|gtag|RightMove|imageExists|right_x|crt|isHidden|vast_adid|rc_version|System|PlgnVstPstr|pjslog|Papi41|PipToggle|RightOut|Interval|lI1l|menu|youtubeready|timestorejustbut|RenameTracks|Start00|rel|PlgnVstLdtx|isyoutube|sub_allmyt|sub_off_title||reYT|movable|yamtr_event|rc_anyway|geobj|skipads|fileto|FileTimeout|filetod|landscapefull|removeNativeSubtitle|portrait|RightOver|slng|Timeout|nativeSubtitle|PipSwitch|lsfullplay|lsfullstart|mss|Playerjs|FindIdPl|mp4|posterhidestart|intros|writePl|speedstore|pljsspeed|SettingsExist|seekicon|openpl|SettingsSpeed|finishrewind|adscounter|Quartile|TheEnd2|TdKtknQK|seeksidesec|PostFullscreen|fs_error|changedTouches|scrollwheelfull|sub_sizemob|whlskfll|playedquartile|shwvstfnsh|elastic|yamtr|scroll_height|textarea|limit|redirectonclick|pjsin|KeyDown|seeked_time|endfull|006|dblclick|PluginTrack|dfTYfHKG|reloadlive|zpTSJW48HZ9WajM|vpaid_starts|screen_lw|nomidroll|templated|template|passontime|iosExitFullscreen|str|redirectonplay|timelimit|Stopped|vast_longtimemsg|isVpaid|sub_split2words|ovr|ct2|SubtitleBottom|timebreak|current_vast_url|VastLongTimeout|timelimited|midrollimprsd|Number|click_t2|PluginIntro|width_div|height_div|minduration|SourceBuffer|vast_prestarttimeout|sub_big_fullscreen|cancelFullScreen|sub_bg|exitFullscreen|sub_sizemobfull|last_ors|cancelFullscreen|mozCancelFullScreen|ffdd1f|webkitCancelFullScreen|msExitFullscreen|frmvst|Ease|playerjs|analytics|unset|preloaded|zoom|nativefulldroid|default_speed|sub_bgo|andlimit|sub_lineheight|posterhidetime|fullonplaymobile|requestAnimationFrame|noindex|vast_nofirst|together|device|Playback|pljsfirst|norld|notv|TimeStore||ffect|Posters|denied|access|_ue|Media|_ud|StageOver|swipep|Swiping|swiping|trackstore|alerts|incorrect|subshift|Actions|styleSheet|XMLHttpRequest|GET|700|sesstime|ParentFS|parentElement|tagsinterval|onPlayTag|alert404|recovery|zpTSMqp0Kn4dsZXdzpTSJW48HZ9WajM|ReloadTimeout|FullscreenChange|logo|PluginErrorVideo|alert404video|alert404v|alert404text|leavetimeout2|224|fullonplay|autoplayed|175|updateTitle|FindFileInPlaylist|InvertPlaylist|reverse|sub_off0|closePl|comment|trcka|margin_bottom|outside|PluginThumbs|Exit|Hide|KeyUp|heartbeatinterval|adblock|resume|StopOtherPlayer|HidePoster3|935|read|MSIE|PluginGeo|mousedown|sugar|livets|maxTouchPoints|stretch||cover|Open|PluginRec|after|scrollX|url3|globalfontname|msie|ShuffleEnd|getBoundingClientRect|firefox|apto|offset|plapto|preposter|clickscalex|rest|titlepl|volumechange|yOffset|xOffset|270|sort|offsetwrite|PlacePoints|place|leavepictureinpicture|enterpictureinpicture|durationchange|thumb_move|loadedmetadata|always2|linetipmarginbottom|toptip|timeupdate|with_hours|RenewFromTitle|handleinit|_duration_play|_time_play|showing|UpdatePlaySeek|UpdateLoad|ControlsBgClick|CancelBubble|addTrack|PlaylistBack|bglines|normalscreen|back|userpause|bgline1|PlaylistOpenId|userplay|unmuteonplay|actpause|bgline2|sttr|PlayerjsAsync|current_thumb|handleiconsover|historycolor|marginprocright|historytitlestrike|lrppp|lrpps|PlaylistMove|ControlX|marginproctop|marginprocbottom|PluginShare|NewPl|zoomed|_duration_load|ScrollLeft|minute|PjsCheck360|Rectangle|rule|evenodd|nums|width100|Continue|line_volume2|autoLevelEnabled|ffeeab|second|mrgnsmll|webkitSetPresentationMode|gainedsource|hour|connect|volumegain|SubtitleSettings|Gain|um1|nextAutoLevel|plusminus|tipvar|tipmargin|linetippointer|valuealign|Wheel|thumb_border|subtitleTrack|PluginCut|hls2|noClickTimeout|CreateThumb|thumb_width|setHlsAudioTrack|thumb_height|thumb_radius|control_duration|ControlOver|thumb_borderwidth|setDashQuality|DisplayControl|thumb_bordercolor|thumb_shadow|UpdateSettings|tippaddingright|hidesec|setHlsQuality|setTracks|unhidden|action_settings|DownIn|hideonvolume|clickmarginbottom|ScrollRight|keyCode|hideonfullscreen|unfixing|linespeed2|hidewithposter|linespeed3|gradientcolor|Buffer|customdesign|onClickSubtitle2|FFFFFF|hideuntilmeta|valuesize|borderbottom|PluginSkip|headbordercolor|wtpstr_to|pstrwt|brda|hidewovar|hideonvar|WaitPoster|HideElement|7px|hidebeforesec2|posteronwait|220|colorload|translate|hidedown|setting|nxtttl|floatwidthsmall|ControlLine|smallfontsize|controlCSS|leavetimeout|playonhover|setcss|updateCuid|wps|HdIcon|gradientcolorload|floatheightsmall|ontop|upd|18px|apdra|gradientcolorbg|ShowAnimate|HideAnimate|PluginMbps|ShowControl|onClickTimer2||linespeed1|hidebeforesec|hideaftersec|pipVol|bgw|315|_w|roundout|resize2|PlaylistPlayId|upTexts|customText|showShare|_a|MediaVideo|scrollarrowbgovercolor|plclose|scrollarrowbgover|linktarget|ssflyw|1001|ArrowsInterval|screenshot|linkpause|with_min|ScrollDown|ScrollUp|clickmargintop|muteiconbut|minus4back|prevorius_default_w|Tmln|PreNewPl|hideonwidthlimit|Volumescrolled|hideonwidth|PluginPlSrch|displayvolume|hideoverwidthlimit|hideoverwidth|UpdateTimer|Exist|iconsreplay|prevorius_default_h|alwaysjustpause|scrollarrowgradient|alwaysnotfullscreen|valuerounding|_nextIcon|valuebg|valuebgcolor|hidewithoutplaylist|Visible|PluginPoints|prenewpl|bgbract|handlemargin|40px|which|setDashAudioTrack|_reset|customBuffer|PlgHlsFdt|show1value|666666|hls_stuck_duration|dvr|pljs_yt_|HideLayer|ytcl|iframe_api|fontsizesmall|youtubecontrols|scrollHeight|hlscookies|bold||cstm|lineh|MutationObserver|obsrvr|_xIcon|pressed|playsinlineonmobile|bggr|scheme|picheight|ontouchstart|alertsfontsize|HlsLiveWaiting|livewakeuptime|hlsTextTracks|supported|debug|FlussonicMsePlayer|today|svgtmln|setupx|rotateplaying|alertsbga|Width|alertspaddingh|linker|showById|alertspaddingv|eventCategory|eventAction|eventLabel|ga4|alertscolor|PluginOldGA|alertsbgcolor|5000|Youtube|loadSource|openplaylistafter|ENDED|often|m3u8|often2|topside|PluginDash|_subfile|mpd|framei|mobileover|onMobOut|nativehlsios|openplaylistpause|disableRemotePlayback|anonymous|customyterror|yterrors|onQualityChanged|Qualities|Hideuntilto|clrs|audio|iconmargin|bandwidth|40000|hlsaudio_off|hlsfto|PlayingChecker|hlsmto|onYtPlayerStateChange|unblock|bgstretch|hideafter|hlsdebug|hlsvastwait|reHls|scrolling|allow|hlsquality_off|pjsfrrs|dashjs|hidebefore|preloaddash|PLAYING|allowfullscreen|preloadhls|isSupported|allowtransparency|hidebefore2|scroll_down|15px|scroll_left|onLoadedData|sourceBufferValidAPI|postmessage|mimeCodec|method|scalesmall|iset2|MediaSource|hlscaptions|opposite|changeAspect|PjsFrMsg|onMouseDown|language|inversetime|MetaAudio|liketext|HlsQualityLevels|renameQualities|unpause|PluginReplace|SubtitleSettingsClose|togglesubs|bgcolorlink0|startLoad|optStr|Click|hideafterclick|Control|nameofhlsquality|rc_|hlsmaxlvl|action2|hidecontrol|hlslowquality|audioGroupIds|Init2|ShowTimeout|nopause|SvgColor|icon3|IFRAME|onLoadStart|rotateonhover|CustomFonts|playlistfolder|wrong|rszr|prted|notframe|prtObj|parentIframe_style|selectOpen|PjsFr|Audio|aaaaaa|409829|Copied|LIVE|Previous|copied|073DA0|website|fullwheel|Reset|D90000|clipboard|ffff00|zqMdarteLkxjL3tQzCa0MjpRM2UeaqElxC41vZX1uCM|wkdt|983|youtubeid|1bVtWI3tiJG5gL2USMfs6sgXTwnXTwZsPskBSL2UfIHsfykPfI29PL3sfyfsTwnXTwnXfvZtlKGBisglUvZtQIHtkKG4fyfsQwgXdwZXTsnXfvZtkMjphKGFRaZs6wCTfIG5mLGp0KG9RsglfIGUTKqofvZtesglUvZtPJGJ0IG5hMjikKrBTIGBhKG5ksglUwZTfKZs6xDY9vZtgL250Mj9PH3BmaqUisgm7sj9VJqFVsglUvZtSLfs6wZTfIGx0KG9Rsglfaqi0LqEfvZt0bHYisglfaqF4aZsPskYSM2i0KG9Rsglfaq9TvGUiJkAfvZtgLqigKVs6wZTfKqpRJZs6wZTfaqF4aZs6sfsPskJeMfs6skBmaqUisfTfKqihJCs6wCTfKqihJG9RMqUebCs6wCTfIG5mLGp0KG9RsglfMq9WKHBmL24fvZtfJVs6wCTfIjaesglTvgAPsjtkMqphJqiRJVs6sgIdxfX2snIfcCTfI29RartSLp9PKG5isgm7sj9VJqFVsgl0vZtSLfs6wCTfariTJCs6skxlIHYisfTfIGx0KG9RsglfLqiRJCsPsjdfygAPsktSaG5hKG5ksglfwZ43sfTfaVs6wDXTvZtesglUvZteIjMfyfsTvgwfvZteLq9eJZs6sgXRxZsPsjpSajFVsglfwZsPsjxSLq9VsglfwGpeJGJjsfTfI29PL3tfJVs6sjJjJjJjJfsPsjxSLq9VLq9eJZs6sjJjJjJjJfsPsjxSLq9VL3JiMfs6sjJjJjJjJfsPsjt1JjJiMfs6bVtSLfs6wZTfI29PL3sfyftjJjJjJjIfvZtesglTvgF9vZtTL3xmaqiSLfs6sjxSLkBVL2UWsfTfLGpVJ2iRsglfwZXTsnXdwDsfvZtlIG5hLqEfygoPsjtkMqphJqiRJVs6sgEdwZX1snXfvZt0KHXfygoPsjemJqEfygoPsjemJqFSLjUmajEfygoPsjeeLjBPJHxgIGUisglfwC4WsfTfLqiRJHBmMq1eMjamLjtSarBSLCs6wDXPskBSMrBmMZs6wCTfaqiTIjagL2USMfs6sjJjJjJjJfsPskBmMqtkMj91LjBmLjMfygwPsjF4MqpRJZs6sgoRxZsPskBmMqxSLq9VsglfwnXTwnXTsfTfaqiTMqphJqiRJVs6sgEdxVX0snMfvZt0KHYjL250M2i6JCs6wDoPskBmMqtkICs6sgofvZt0KHYesglfwZ44sfTfLqiRJHBmMrYSKG50JHsfygoPsjpRKG1eaqiSLfs6skYSM2i0KG9RsfTfaqiTLGpVJ2iRsglfwZXTsnXdwZt9vZtgL250Mj9PH3YPIHhfykPfL3thJHsfygsPsj9RsglUvZtmI29Rsglfzrx2JVY3KGB0Kn0kwDdksqeiKGalan0kwDdkzgUTIHBlsqA9t00UxC41xgsdyZ4UDnwRynMRwgs1AWwRwnEVvC4WwWMdwfXRwgs1snsdwC4UwgF2wDERxWFgwZXRyCXUvgX1wfXUvgA2wfXUvgd3vgiwwDERxDIWsnhRyGwRxDd0vC40xC41ynAQwC4WxCXTvDoRyrlksqJmLqT9tVxjJjJjJjIkzgUMv3Yeaqd|PluginUpload|feba54|1val|Skip|Enter|b3fee8|redirectplaylist|faed54|zpTSMqp0Kn4dsZXdsZXdsZXdsZX8Mqp0KZYhzCaxxZ42xgh0wDA1xZTUvgwWwnE4xDA2soTTvgE3xnX2xWX3wfT1vgAVxDhWwghWtW48HZ9TIHBlzfXdsZXdsZXdzpTSJW4dsZXdsZXdsnUTIHBlsqA9t001vgM4xfT3vgXTyZYwwf43wDAPxV4TwnddAWsRwgd2vnMRwnX4snsPxV4WwCXVvnMRxWIdDnsPwDsRwgMVsowVvnoVvgMVxZXVvgs4xfTUwV4TwgAdwf43wDAPwDwRwns0soT1vgM4xfTUwV4TwgAdDnhRynE3vno2vgd4wfYnwDXRwWE3vno3vgo4wfXUwCTUxf44ynsdwDoPwDIRwgddDnoUvnwRxWEVsowUwCTWvgo1wCXUwZ4WxDMPwf43xWEdyC44xDMPwV4UxDodDnERxWd2vnMRwnX4splksqJmLqT9tVxjJjJjJjIksqJmLqTQMkFPJD0kLj9RbjFVLVM|trident|usernew|d9bb8c|62de50|Sleep|72ccf8|appName|993|userAgent|advertiser|All|Quad|1296p|zrYeaqddJn0kDDdRyDh5yDhPwDXRxnw3xnhdDndRyDh5yDhPwDXRxnw3xCYwwfT1vgsUynM1soT4vgh5yDh5vnXdDndRyDh5yDhPwDXRxnw3xnhdGfYxwZTTsoTVvnXdDnsPwDXRwgA5ynwdDnXPwDXRwgA5ynwdDnXPwZYKtVYjKGUPzCMgJjJjJjJjt1TSzgUMv2M|onchange|985|zpTSM3JkzfsPsjpgaqiSLfs6skYVJHIfvZt0bHYisglfM3JksfTfM2xeLqEfygoRwfTfMq9WKHBmL24fyftgL250Mj9PMV1fL3B0L20fvZtQIHtkKG4fyfsTsnXdwZXUxCt9vZtgL250Mj9PH25ibrAfykPfL3thJHsfygo3vZtSLfs6wZTfKGxSLfs6sgUWajMda2ihaqd9tWsTtVYlJGikKrA9tWsTtW48JVY0MjpRM2JSMj09t3BVIG5WLqp0JCd1vZX1uCM|current_channel|speed4live|Super|zrYeaqddJn0kDDXRxnI5xndPwGEQwnEdDnXRxnI5xndPwGEQwnEdDnXRxnI5xndPwZYwxV40xgh0xVT1vgsUynM1soTTvgA2yDA4vnoTvgAWxWEdDnXRxnI5xndPwGEQwnEdGfYxxV41wWX1wfTTsoT5vgEWwnEVvnXdDnhRxDwTxDsPwDXRxgs0ynsdDnMRxDwTxDsPwDXRxgs0ynsdDnMRxDwTxDsPwZYKtVYjKGUPzCMgJjJjJjJjt1TSzgUMv2M|ads|default_w|hidearrow|644082|zpTSM3JkzfsPsjpgaqiSLfs6sj5ibrAfvZt0bHYisglfM3JksfTfM2xeLqEfygoRwfTfMq9WKHBmL24fyftgL250Mj9PMV1fL3B0L20fvZtQIHtkKG4fyfsTsnXdwZXUxCt9vZtgL250Mj9PH3xlIHtisgm7sj9VJqFVsglUyZTfL24fygXPsjigL24fyfs8M3JksramJrBlzCMVwZMdKqFmJ2e0zCMVwZM|0val|979|ar2pbbt6cc3h|125|Ultra|vastbreak|Full|toogle|VpaidSet|home|Tiny|pjslng_|Small|915|the|adsinvitation|vpaid_|885|994|Medium|775|Test|dwn|997|startvast|default_h|prt|250|clr_|dispatchEvent|4bd9ac|sZXdsnUksrx0Mj9OJD0kLj9RJCMdM3BVL2QivHamJrBlzCMUtVYjKGUPzCaRL25itVYjKGUPvHt1LqE9t2F2JG5SJqAksrBVIG5WJj9VLD0karteLkxPIHBiuZ04vgXTwnXTwZTdvDdRwnXTwnXTuCM|matchMedia|sfTfIGx0KG9RsglfLHF0JCsPsjpgaqiSLgsfyft1Lj11aqEfvZt0bHYisglfM3JksfTfLGpVJ2iRsglfwZX1snXdwDXfvZtfJVs6wCTfIjagL2USMfs6sgpeIGFjJfsPsjtkLVs6sgXRwfsPsjtkMqphJqiRJVs6sgIdxVX2snIfvZtmI29RLGpVJ2iRsglfwZXTsnXdvDofvZtfJ2pSajFVsglfwCsPsjtkICs6sgXfvZt0KHXfygoPskBmMrYeJqBmLjMfyfs3snMdxVX3sfTfaqiTIjaesglfwCsPskBmMqJSLkBWKHmisglUwCTfaqiTIjaVL3FRJqiRJVs6wVTfaqiTIjagL2USMfs6sjJjJjJjJfsPskBmMqxSLq9VsglfwnXTwnXTsfTfaqiTICs6sgXRxVsPsjpRKG1eaqiSLfs6skYSM2i0KG9RsfTfaqiTMq9mLkBiMfs6wCTfaqiTMq9mLkBiMjpPKGaRsglfMjikKrAfcCTfI29RartSLp92L2U1LGEfykPfL3thJHsfyghPsj9RsglUvZt0bHYisglfM2eeMqEfvZteI3BmL24fyft2L2U1LGEfvZtlsgl0vZtVL3FRJqiRJVs6sgofvZtgaHx0L213KGB0KZs6wCTfaVs6xWXPsjofygoPsjpfJVs6sgXRwVsPsjpSajFVsglfwZsPsjxSLq9VsglfwGpeJGJjsfTfI29PL3tfJVs6sjJjJjJjJfsPsjxSLq9VL3JiMfs6sjJjJjJjJfsPsjemJqEfygXPsjemJqFSaHBQaHBisglUvZtVL3BeaqiSLfs6sgXfvZtfJ3YeJqBmLjMfyfs1snXdxCXTsfTfIjMfygXPsjeeLjBPJCs6wCTfMq9WKHBmL24fyftgL250Mj9PMV1VKGalaZsPsj1eMjamLfs6sgXdwZXTsnwfvZteLjiQIHBmL24fyftTL3xmaqiSLfsPsjemJqF1LkBmLrx0IHt0JGAfygXPsjemJqFSLjUiIHJisglTvZtlIG5hLqFWI2pPJCs6sgoRwVsPsjeeLjBPJGxSLq9VsglfvDofvZtibrYeLjAfyfsUvgAfvZt0KHXfygoPskBmMqtkI29PL3sfyftjJjJjJjIfvZt0KHYgL2USMfs6sgXTwnXTwZsPsjUmLjF0KHYQIHtkKG5fL3B0L20fygo1vZt0KHYfJ2ofyfsUsfTfaqiTIjaVL3FRJqiRJVs6wVTfLqiRJHBmMrYSKG50JHsfygoPskBmMqJSLkBWKHmisglUwH0PsjxSLkBVL2UcaqiQJCs6bVtSMjBiMfs6wVTfL24fygoPsjpgaqiSLfs6skBmLGEfvZt0bHYisglfaqF4aZsPskBibrAfyfsQwnlTwZsPsjJSLkBWKHmisglUwCTfLGpVJ2iRsglfwZXTsnXdwDXfvZtgLqigKVs6wZTfM2FTIHteaq9VsglfHZ8fvZtmLkJiMkxiaqiQJCs6wCTfIG5mLGp0KG9RsglfMq9WKHBmL24fvZtWKq93JrFVIHBmL24fygoPsjUiarBiMkxTIGxmLjMfyfsTvgsfcCTfI29RartSLp9haHteaqiSLfs6bVtSMjBiMfs6xfTfL24fygoPsjpgaqiSLfs6sjB1Mjp0KG9RsfTfariTJCs6skBibrAfvZt0JHe0sglfHZ8dwnlTwZsPsjJSLkBWKHmisglUwZTfLGpVJ2iRsglfwZXTsnXdwZsPsjxPKGxOsglTcCTfI29RartSLp9faGJjJHsfykPfL3thJHsfygMPsj9RsglUvZtmI29RsglfzqBmafYgLqpWMW0kLq9eJqFVurteLjAmtW48M3JksqxPIHxWzCagKHtgaGUeMfeVIG5huCMdajiia0tSbn0kwgEdwgEdxDXdxDXkzgUgKHtgLqEdI2UeM3w9t3YeaqdlMjpRJZhksrx0Mj9OJD0kuqxSLq9VuCMdI3d9tWETtVYgbD0kxDXksrs9tWsTtVYjKGUPzCaRL25itVYWartSK2EQa2ihaqd9tWsksrx0Mj9OJC1QKHBiMjUmLGi0zCMUwZaMvW48HZ9WajM|WebkitAppearance|pressed_|sleepoptions|sZXdsZXdsZX8Mqp0KZYhzCaxwDMRwDw1vndRxWd0sowUxf41wgXWxWwPyZ42wWXWwDh2yCXUxf4TwDA5wnd0vndRwDh0xDo0wWwdwDERxWMVxns2wfT3vgITyDsTxDE2sowUxC41wgh5xnw5vnMRwnsWynh2yZXUxC41xWhUwgw5vnIRwWE4wWoVxWMdwDERyDX1vnERyno1sowUxf4VwgMPxC4VxWhdwDIRwDwPxZ44wDMdwDERynoUvnARxnh5soTUxC41wnoPxZ4UynhdAWo1vgo4wVTWvgd3wCXUxZ43wgoPwV43xWAdwDARwDd1vnARwnh1sowUwV42xno2ynMVvnARxnsTynM2wnddwDsRyDM2wDXWwfT0vgA3wnX1xgX4snoVvgw5wnM5xnAPxZ4VwgM1xWw4xZYnwDoRynX1xnd1xVTWvgh4xDX5wDE5snoUvgw2yDI4wnwPwV40xWh2wgMdwDoRwgo2vnsRynI1sowUwC4TxgEPwf4VxDddwDXRxgI5vnsdwDXRwgo5vnsdDnhRxWdUvnsdAWhRwWwUvnsdyZ45wWIPwf4VxDddyZ43ynAPwf44xgEdAWdRxgwTwWo5xghPwV40xWh2wgMdyZ4UyDA1wDAWwVTWvgh4xDX5wDE5snMRxgX5wgX1xDIPxZ4VwgM1xWw4xZYnxV4Twgw4yDI4vnARxnMTwnE2wnddxf4WxDdWwDs3xVT0vgAVwnd3xgX4snERyno1vnARwnh1sow1vgs3yCTWvgM3wVX0vgdUxfTWvgd3snARxnh4vnARwDd4soT0vgo4yZT0vgA5yZYnwV44xVT0vgdUxfXWvgM3wVT1vgs3yCX0vgX5xCT1vgdUxCYnxZ40wgX4xWITyZT2vgw1ynwUwgM3snARxnMTwnE2wndPxV4Twgw4yDI4snARwgs3xDMWynAPxV42wnhVwnE1xfYnwV45ynETyDo1yCT4vgo5xnEUxnwWsnwRxnM5xgs3vndRxgwTwWo5xghdwf44xgEPyZ43ynAdAWsRwgIPyZ45wWEdwfT5vgwWsnsPyC43ynodDnsPwDXRwgo5sowVvnoTvgI2yCXVvgs1yZTUwC4TxgAdwf44xgEPwDoRwgo2sowWvgA3yDIVxVTUwC4Wxgh2ynXWsnwRyDd1wnhUxDhPwDoRynX1xnd1xVX0vgsVxWE3wWd0vnoVvgw5wnM5xnAdAWARxnMTwnE2wndPwDsRyDM2wDXWwfX0vgAVwnd3xgX4vnoWvgI0wDI4xWsdxZ4TyDEPwDARwDd1sowWvgM3wVTUxZ43wgodwV44xVTUxC4UynwdxZ4UynhPwDERxDXUsoT0vgA5yCTUxC44wDodAWARyno4vno2vgoWsnERwgdUvno2vgsVxfX1vgdUxCTUxC45wnEdAWIRwWE4wWoVxWMPwDERxDM5wDsWyCX3vgXVwWd5xgdPwDERxDs5yDAWyCX3vgITyDsTxDE2vno1vgM3wgAVxgsdAWdRwDh0xDo0wWwPwDIRwno0yDX4xZX4vgIWwnwUyDI5vno2vgEVwnw3wVX4vgM4xZTUxV4UwWEdAWdRyDw1vno3vgM0wfX5vgwWwCTUyZX5vgM4wCTUyZYwwDXRwgo5vno4sowUwZ42xghPwDddwDoRwnI0vno3vgM0wfXUwC4VwDIPwDMRwDw1sowUwC4Wxgh2ynXWvno2vgEVwnw3wVXUwC44wnE0ynE3vno2vgXUxnhTynAdwDsRwWhTxWh0xZTUxC43xWs0wgIVsowUwf45xWIUwnwVvno1vgEVyDh0wWhdwDwRxgAUxgd3wfTUxC41xWhUwgw5sno0vgo4xCTUxC45wnEdAWo0vgMVvno2vgsVxfXUxC4UynsPwDIRwDwdwDERxDXUvno1vgdUwCYwwDERynoUvno1vgETwCYnwDIRwDs5vno1vgo4wVXUxf4VwgIPwDARxWsdwDERyDX1vno0vgo4xCYnwDERxDM5wDsWyCTUwV42xno2ynMVsno1vgEVyDh0wWhPwDsRyDM2wDXWwfXUxC43xWs0wgIVvnoVvgw5wnM5xnAdAWo2vgXUxnhTynAPwDoRynX1xnd1xVXUxf41wgXWxWwPwDoRwWI5xgdTwVXUxV4UwWEPwDoRwgo2sowUxV43xnsPwDoRwnI1sno4vnoTvgI2yCXUyZTUwZ4VwDhdDno4vnhRxWdUsowUyZT5vgwWsno3vgM0vndRyDw1sno3vgoWxCT4vgM4xZYwwDMRwDw1vndRxWd0spldDDoTvnoWsow4vgw0wWo0xDM1vnoWsnMPwDoRxgE2ynE0wfX3vnoTsow3vndRwWAWwDA1xWEdyZ4WxnwUxnE3xCT3snoTvnMdAWoUvgI1xgd1xnsPxVXUwVT4vgw0wWo0xDM1snoWvnoTsowUwVTUwC42xDI4xDAVsnoUvgI1xgd1xnsPwDwdwDXPwDwdGfMdJjiPLn0ks0JqBhJqBfMdJjiPLZ1VaGUizCaRL256JHtStW48HZ9TIHBlzfXdsZX8HZ9kzgUMv3x2JW4fvZteI3BmL24fyftWJHB0KG5kMVsPskYSM2i0KG9RsglfI29RartSLrwQMjikKrAfvZtQIHtkKG4fyfsTsnXdwZXUwZsPskB5MqEfyftWajMfvZtWI2pPJCs6sgofvZt0KHXfygoPskBmMqtkMj91LjBmLjMfygwPsjpRKG1eaqiSLfs6skYSM2i0KG9RsfTfIjMfygoPsjtkMqphJqiRJVs6sgIdxfX2snIfvZtfJ2xSLq9VsglfwGpeJGJjsfTfIjaSsglfwZ4VsfTfIjaeL3JiMfs6sgofvZtfJ2ofyfsTsfTfKGxSLj1eMjamLfs6sgXdwZXTsnXfvZt0KHYTIGBhKG5ksglfxVX3snMdxVsPskBmMqtkICs6sgofvZt0KHYesglfwZ43sfTfaqiTJj9RarxmbjEfygoUvZt0KHYPJHB0JHtWMqpgKG5ksglTvZt0KHYgL2USMfs6sgXTwnXTwZsPskBmMqtkI29PL3sfyftjJjJjJjIfvZt0KHYTL2iRaqFVsglUvZt0KHYTL2iRaqFVIGUmJ24fyftVKGalaZt9vZtgL250Mj9PH3YPIHiPKHx0sgm7sj9VJqFVsglUwCTfL24fygXPsjigL24fyfs8M3JksramJrBlzCMUx3Y4tVYlJGikKrA9tWo2MrdksrJmJHaZL3d9tWsdwfXUxVXUxfMdajFVM2iSLg0kwC4UtVY4LGURMW0kKrB0MnmMv1TSa3a3vkMWvj9VJ1TSwgXTwpTSM3JktVY4LGURMWm4LqiRKW0kKrB0MnmMv1TSa3a3vkMWvj9VJ1TSwDh5yFTSbqUmLjPkzfXdsZX8JVYmJn0kB3tSaHXQwfMdM3BVL2QizCaRL25itVYWartSK2EQa2ihaqd9tWoksqJmLqT9t25SLjEksqJmLqTQMkFPJD0kJHJiLj9hJZMdarteLkxjL3tQzCa0MjpRM2UeaqElwV4TwnXTwnXPsnwRwnXTwnXTuCMdM3BVL2QivGUmLjFgIHX9t3tSaG5htVYWartSK2EQLqiRJGmSKG49t3tSaG5htW4dsZXdsZXdsnUTIHBlsqA9t00TvnodDno0vgEUynMWwnAPwCMdKGA9t0UmLjEksrx0Mj9OJD0ks0JqBhJqBfMdM3BVL2QivHamJrBlzCMVtW48HZ9TIHBlzfXdsZXdsZXdzrYeaqddJn0kDDXPxVYwwDARxDo4xWwTxZT3tVYmJn0kDqiRJCMdM3BVL2QizCMgBhJqBhJqtVYWartSK2EQa2ihaqd9tWskzgUMv3Yeaqd|Philips|playerjs_hit|watch|matches|Tizen|Roku|BRAVIA|__storage_test__|Font|capiom|eventlisteners|armv|fine||Shadow|toUpperCase|zpTSJqi2zkU8cZ5PL2phJHslMjpRJZhdb3YSM2i0KG9RyfYVJGUeaqi2JDQQIHtkKG46sZ0VxHY4snXdwZXQwgFTbnQ3KGB0KnldxDYTbnQ9vjUSIGBiMfeVIG5huDmfJGJSMjEdb2xSLkBiLkA6sZMky2BmM3YPIHh6sqtPL2xOy3YeJqBmLjMQaq9TyfXUwnXiy30RI2iVI3FPIHslMjpRJZhdbV13JGtOKHAQIG5mLGp0KG9RyfYVL3BeaqEdwkwdLqiRJGpVsqiRJjiRKHBiy2pRKG1eaqiSLgldMj90IHBisntWsqUmLjFeMfYmLjJmLji0JDQlJGikKrA6snoTwZE7vHaiIjQmaZ10MjpRM2JSMj0QL3tmJ2iRyfYgJG50JHsdI2FRaqFVy3BVIG5WJj9VLC1SMjikKG46sqxiLkBiMfYgJG50JHs7a2ihaqd6snoTwZE7Mq9WKHBmL246sqpfM29PaHBiy3BSMnldwnQfL3B0L206snX7LqFjanldwnQVKGalanldwnQQIHtkKG46sqp1aq87cC5TIHBlurteLjAmsrQWartSK2EQJqpWKqpVMjp5yfXUvZXVwnX7M3BVL2QivGBeM2eSJjJWJHA6snX7vHaiIjQmaZ1eLjiQIHBmL246sqBeM2ddwC41MVYiIHxivGiRvG91aZYmLjJmLji0JDQeLjiQIHBmL246sqBeM2ddwC41MVYiIHxivGiRvG91aZYmLjJmLji0JDQ9AZ13JGtOKHAQK2F5JkteLGFWsrtSaqp0JCY7wDXTtCY7vHaiIjQmaZ10MjpRM2JSMj06srtSaqp0JCdWxgYhJGMmy3BVIG5WJj9VLDldMj90IHBiunw2wqBiJVh7cH1XK2F5JkteLGFWsrtSaqp0JCY7wDXTtCY7vHaiIjQmaZ10MjpRM2JSMj06srtSaqp0JCdWxgYhJGMmy3BVIG5WJj9VLDldMj90IHBiunw2wqBiJVh7cH1XvHaiIjQmaZ1OJHijMjpQJHwdJqpWKZY7wZEdb3x0Mj9OJC1hIHxlIHtVIHh6snoPsnsTwnQWartSK2EQJqpWKq9jJkxianldwnQ9xDXisrQWartSK2EQJqpWKqpVMjp5yfX4yCTdwgXTy3x0Mj9OJC1hIHxlL2JjM2F0yfXQwWFTbnQ9wDXTtCY7M3BVL2QivGBeM2eeMktebDldynhPsnsTwnQWartSK2EQJqpWKq9jJkxianldvDoVxrY4y319AqQibGJVIG1iMVYhIHxlsrPTtCY7M3BVL2QivGBeM2eeMktebDldwCTdwgXTy3x0Mj9OJC1hIHxlL2JjM2F0yfXTy301wZEdb3x0Mj9OJC1hIHxlIHtVIHh6snd5vZXVwnX7M3BVL2QivGBeM2eSJjJWJHA6sZ0WxHY4y30UwnXisrQWartSK2EQJqpWKqpVMjp5yfX4yCTdwgXTy3x0Mj9OJC1hIHxlL2JjM2F0yfXQwDs0Mrd7cH0fvZteI3BmL24fyftfaGJjJHsfvZt0bHYisglfI3xWsfTfMq9WKHBmL24fyftgJG50JHsfvZtWI2pPJCs6wCTfI2UmI2PfygXPsjemJqEfygp9vZtgL250Mj9PH3xiarBmLjaWsgm7sj9VJqFVsglUwZTfL24fygoPsjigL24fyfs8M3JksramJrBlzCMVwrY4tVYlJGikKrA9tWsTMrdksrJmJHaZL3d9tV04sZ04snsTsnsTtVY2JHtWKG9RzCMUvgoksreQLq5WzCalarBTyiTSHZ93a3MRaWwRL3tkHZ8VwnXTHZ9WajMksreQLq5WykePKG5OzCalarBTyiTSHZ93a3MRaWwRL3tkHZ8UyDh5HZ94LqiRKVM|sZXdsZXdsZX8Mqp0KZYhzCaxxC43ynIPxV4TwnM1xDIVxZYwwf43wDAPxV4TwnM1xDIVxZYnwf4VynIPxV4TwnM1xDIVxZXVvnMRwWX5xDE2wgAdwfT3vgM1yDE1xgs0soTVvnoVvgs3wDE1xgsdAWsPwDsRxWsWxDE2wfXVvgs4xfTUwV4Twgw1xDIVsnsRxWo0vnoWvgXVwWE1xgsdDnERxWd2vnoWvgXVwWE1xgsdDnhRynE3vno2vgd4wDE1xgsdAWoTvgw1xVTUxV4Uyno1xDIVsnoUvno2vgd4wDE1xgsdwDoPwDIRwgM5xDE2wfYwwDoPwV43xDo1xDIVxZYnwDoPwV4UxDX1xDIVxZXUwZ4WxDMPwf43xWA1xDIVxZX5vgd1xVTWvgo1wnE1xgs0soT1vgM4xfT3vgXTxWE1xgs0splksqJmLqT9tVxqBhJqBhIksqJmLqTQMkFPJD0kLj9RbjFVLVM|iosv|sfTfIGx0KG9RsglfJkFPLrxgMjFiLfsPsjpgaqiSLgsfyftRL3tQIGUWI3tiJG4fvZt0bHYisglfM3JksfTfMq9WKHBmL24fyftgL250Mj9PMV1VKGalaZsPsj1eMjamLfs6sgXdwZXTsnEfvZtWI2pPJCs6sgXRyCsPsjtksglUvZtfJ3YeJqBmLjMfyfs2snIdxfX2sfTfIjagL2USMfs6sgpeIGFjJfsPsjtkLVs6sgXRwfsPsjtkICs6sgXfvZtfJ2pSajFVsglfwCsPskBmMZs6wCTfaqiTJj9RarxmbjEfygoUvZt0KHYfJ2ofyfsUsfTfaqiTICs6sgXRxVsPskBmMrYeJqBmLjMfyfs3snMdxVX3sfTfaqiTIjaVL3FRJqiRJVs6wVTfaqiTIjagL2USMfs6sjJjJjJjJfsPskBmMqxSLq9VsglfwnXTwnXTsfTfIG5mLGp0KG9RsglfMq9WKHBmL24fvZtmI29RLGpVJ2iRsglfwZXTsnXdwCsPskBmMrYSKG50JHsfygoPskBmMrYSKG50JHteLqikLfs6sktmJ2e0sk0PsjxSLkBVL2UcM3BeMkAfykPfL3thJHsfygo0vZtTL3xmaqiSLfs6sjxiLkBiMfsPskxgIGUisglfwC4UsfTfL24fygoPsjigL24fyfs8M3JksramJrBlzCMUyZMdKqFmJ2e0zCMUyZM|300000|gainact|nonInteraction|zpTSMqp0Kn4dsZXdsZXdsnUTIHBlsqA9t00UwV4VynsPxf4Vyno1xDIVxZYnwDwRwDXVwnX4xfT2vgA1wWoTyndWsnoWvgXTwno0yDhPxf42yDX5wnE0xfXUwV4TwnXUxnh5vnIRyDw5xDE2wgAdAWoWvgXTwno0yDhPxV4UyndVwnMTwfXUwV4UwnsTwnd2vnMRxns2wnXWxgAdwDwRwgdVvnMRxDh3xDE2wgAdAWo0vgXUxVT4vgwWwgE1xgs0sno0vgs3xVT5vgX1xDE1xgs0sno0vgs3xVT5vgh5yDE1xgs0sowUxZ4VxWMPwDXRyDw1xDE2wfXUwV44xDsPwDoRyDo2xDE2wfXUwV4VynsPwDsRxnd2xDE2wfYnwDwRwDXVwnX4xfTUwf42xDdUwnd4snoWvgXTwno0yDhPwDsRynh1yDX1xCXUwV4TwnXUxnh5vnoWvgo0xnE1xgsdAWoWvgXTwno0yDhPwDwRwWhWwgX3snoWvgoTwgXTynIPwDwRxgwUwnXWxfXUwV4VynsPwDwRynXVxDE2wfYnwDwRxns3vnoWvgh0xWE1xgsdwDwRyDo4vno0vgX2xnE1xgsdwDARwVTUwV45xDd1xDIVsowUxZ40wDXUynhWvnoWvghWwnIWxgMdwDARxDoVwgI5xVTUwV44xWMUyDd2sno0vgE5yZTUwV44wns1xDIVsowUxC43xWwPwDsRxWwVxDE2wfXUxf4UwVTUwC4UxDh1xDIVsno2vgoWvnhRyDh5xDE2wgAdAWo2vgoWvnhRyns5xDE2wgAdwDIRwDs4vnhRxgE5xDE2wgAdwDIRwDo5vnhRxnd5xDE2wgAdAWo2vgX2xfT4vgA5xWE1xgs0sno1vgdPxV40ynA1xDIVxZXUxZ41yDMPxf4Vyno1xDIVxZYnwDARxns1xnA3xZT2vgoTwDE2xnddwDARwDd3xgETyZT1vgh5yDMTxgo0snoWvghWyCT1vgh5yDMTxgo0sowUwV42yDXWxnhVvnERyDh5xWX2wDAdwDwRxnEVxDEVxfT2vgoTwDE2xnddwDwRwgdUvnIRwgdUxDE2wgAdDnoWvgs4wfT2vgs4wDE1xgs0splksqJmLqT9tVxqBhJqBhIkzgUMv3Yeaqd|roll|sZXdsZXdsZX8Mqp0KZYhzCaxwDMRxVT0vgwdAWo3vgwPwV45sno2vgMPwV45sno2vgwPxZ4WsowUxC45vnARxVXUxC45vnERwVXUxf4WvnERxVYnwDMRxCT2vghdwDdRwCT4vgAdwDdRwCTUwZYnwDdRwCTUwC42sno3vgEPwDwRwCXUxf4Wvno0vgwdAWo1vghPwDARxVXUxC45vno1vgwdwDIRwVTUxC43sowUxf41vno1vghdwDIRyZTUxfXUxVTUxfYnwDMRwVTUxfXUxV41vno1vghdwDMRxVTUxC43sowUyC4Vvno0vgsdwgXRwCTUwf4VsnsTvgoPwDXdAWsTvgoPxV44sno5vgsPxC44sno3vgMPxZ4WsplksqJmLqT9tVxqBhJqBhIksqJmLqTQMkFPJD0kLj9RbjFVLVM|zrYeaqddJn0kDDo2vnMRwDw2xgoUwWsdDno2vnMRwDX5wDI5xnEdDno1vgsTyno3ynEPxV4UwnhUxgh0xCYwwDARwgM1wnhWvnMRwDX5wDI5xnEdAWo0vgs3xDX5wVTWvgo5yDoVxgs1snoUvgX2wWo5xVTTsnMRwDw3xDA2xnEPwZYnwV4VwDo4yDE5wCTTsnXPwV4UyDhUwgIVxCXTvnMRwDX5wDI5xnEdAWXPwDoRwno5wgoVxfXWvgsUwDd5xDhUvno0vgsUynwWynhdxV4UwWM1xnI0xCTUxZ4VwDdWwWd5soT3vgoWxWE0xgA1vnoVvgA0wDX0xgEdAWARwDhWwWX4xDEPwDsRxnAUwnA2xCXUvgM4xnw4xgIVvnoTvgX0wDMTwDddwC43ynAWynI2wfT3vgoTyDo2yDA1sowUvgM4xnw4xgIVvnARwDM2xgw3wnEdxZ4UyDwWwnd1xCTUvgM3xWs5wgw2snMRwDw3xDA2xnEPwC43xWMVyDsWxfYnwDXRwndUxWd0xZTUvgM3xWs5wgw2snoVvgA5wnMTxgwPxZ4UxWI2wWMTxCXUwf40yDX3wnIWvnMRwDX5wDI5xnEdDnoTvgI0xnEUxgMPxV4UwnhUxgh0xCYwwDwRwWdVynh5xfTUwC41xDs0wnX0soTUxfT3vgoWxgIUwDwVsplksqJmLqT9tVxjJjJjJjIkzgUMv3Yeaqd|nomobile|current_|zrYeaqddJn0kDDo1vgE2wfX4vgpwwV44xV4VwgFnwV4TxDsQvgwWxVXVsZ4VwgEdwfXUvgoVxHIUxC43xGwTsZ45snoRwnEVsnoRxnIVsnoRynMRyETUxC41xgwdyC45IV41ynAQvgA1vgE4xZ0Uvgw1snXQwC44bfMdJjiPLn0ks2JjJjJjJfM|sfTfIGx0KG9RsglfMqUebCsPsjpgaqiSLgsfyftTIHFWJCsPskB5MqEfyftWajMfvZtWI2pPJCs6sgofvZtWI2pPJG92JHsfyfsQwCsPsj1eMjamLfs6sgXdwZXTsnXfvZtfJ2xSLq9VL3JiMfs6sf0UsfTfICs6sgofvZteL3JiMfs6sf0UsfTfaqiTsglUvZtmI29RM2xSLq9VL3JiMfs6sf0UsfTfKGxSLkxgL2USMfs6sf0UsfTfIjMfygoPsjtkI29PL3sfyfsUIGpiJjIfvZtfJ3YeJqBmLjMfyfs3snIdxCX3sfTfIjaeL3JiMfs6sgofvZtfJ2ofyfsTsfTfIjaSsglfwZ4VsfTfKGxSLj1eMjamLfs6sgXdwZXTsnsfvZt0KHYfJ2xSLq9VsglfJjJjJjJjsfTfaqiTI29PL3sfyfsTwnXTwnXfvZt0KHYfJ3tSaG5hKG5ksglWvZt0KHYfJ2ofyfsUsfTfaqiTJj9RarxmbjEfygoUvZt0KHYTIGBhKG5ksglfxVX3snMdxVsPskBmMqofyfsTvgMfvZteLjiQIHBmL24fyftTL3xmaqiSLfsPskBmMrYSKG50JHsfygoPskBmMrYSKG50JHteLqikLfs6sjUiJkAfcCTfI29RartSLp9QaHBisgm7sj9VJqFVsgl4vZtSLfs6wCTfKGxSLfs6sgUWajMda2ihaqd9tWsUMrdksqeiKGalan0kwgYTbZMdajiia0tSbn0kvDo5sZ0UyZXVwCXVwZMdajFVM2iSLg0kwC4UtVY4LGURMW0kKrB0MnmMv1TSa3a3vkMWvj9VJ1TSwgXTwpTSM3JktVY4LGURMWm4LqiRKW0kKrB0MnmMv1TSa3a3vkMWvj9VJ1TSwDh5yFTSbqUmLjPkzfXdsZX8JVYWartSK2E9t25SLjEksrx0Mj9OJC13KGB0Kn0kwCMdJjiPLn0kLj9RJCMdJjiPLZ1VaGUizCaiajFRL2BhtVY0MjpRM2JSMj09t3BVIG5WLqp0JCdQwDhRwnXTwnXTvZXQwDdRwnXTwnXTuCM|offsetoptions|iemobile|sZXdsZXdsZX8JVY0MjpRM2JSMj09t3BVIG5WLqp0JCdUxZ4TwnXTwnXPsnMRwnXTwnXTuCMdKGA9t0UmLjEksrx0Mj9OJD0ks2JjJjJjJfMdM3BVL2QivHamJrBlzCMVtVYWartSK2EQLqiRJGxeMn0kMj91LjAksrx0Mj9OJC1PKG5iKj9mLg0kMj91LjAkzfXdsZXdsZXdsZXdsnUTIHBlsqA9t00Tvgw1yDo4xDMWxZTUvgwWwnE4xDA2soT0vgA1xnEWwWsPxC40wgE5wWs5wVM|blackberry|sfTfKGxSLgwfyfs8M3JksramJrBlzCMVwZMdKqFmJ2e0zCMVwZM|sZXdsZXdsZX8Mqp0KZYhzCaxxCTUsoTVvnodAWoRxZTUsnoPwC40snoPwfYwwCTUxfYnwCTUxf42snoRxZTUxVXVvno3soT1vno3sow1vgIPwDMdxfTUxf42snIPwDIdDnIPwfYnxfTUvgAdxC42vnodxCTUspldDDoUvnodAWoTvgAPwCXUwZTUvgAdwDXPwfYwwDXPwDIdAWoTvno2vgIdwDXRxZTUxVXUwCTUxVYwwDAPwDMdAWo0vgIPwDMdwDEPwDIRxfXUxCTUxfYwwDEPwfYnwDEPwC40sno0vgIPwCXUxZTUsoTUwCTUsplksqihzCaDKqpTJCMdJjiPLn0ks2JjJjJjJfMdJjiPLZ1VaGUizCaRL256JHtStW48HZ9TIHBlzfXdsZX8HZ9kzgUMv3x2JW4fvZtmI29RwVs6sgUWajMda2ihaqd9tWsTtVYlJGikKrA9tWsTtW48JVY0MjpRM2JSMj09t3BVIG5WLqp0JCdVvZXWuCM|castdevice|Yes|hlsqhsort|Metric|Firefox|Edge|ffc7d1|zpTSM3JkzfsPsjigL24Vsglfzrx2JVY3KGB0Kn0kwgYTbZMdKqFmJ2e0zCMVwrY4tVY2KGF3Aj94zCMTsnXdwgXdwgXksrJiMkxmL249tWoRwCMdbq1PLkw9t2e0arX6HZ9Mv3a3aV53wV5SMjaMvWsTwnYMv3x2JVMdbq1PLkw6bqUmLjP9t2e0arX6HZ9Mv3a3aV53wV5SMjaMvWo5yDiMv3ePKG5OtW4dsZXdzZoQvCYrJG5iMjp0L3s6spxOJHBgKZX0wfXlwWI3ynomsZ0dKrB0MnmMv1TSa3a3vjtSKqFQKGpRI29hKG5kvjxSLFTSM2QiaqxlsZ0QzfXdsZX8JqFWIW5nMjFeaqFhsramaqddE2QiaqxlvgUMv2BiM2w|pjslng_sub_sizeproc|adShown|Trident|createEvent|sZXdsnUhJGJWzgUMv2BiJkw|e8bbff|initEvent|zqMdarteLkxjL3tQzCa0MjpRM2UeaqElxZTdxZhkzgUVJGx0srd9tWXksrh9tWXksramJrBlzCMUwfMdKqFmJ2e0zCMUwfMdJjiPLn0ks2JjJjJjJfaMvW48HZ9kzgUMv3x2JW4fvZteI3BmL24fyftWaq9TsfTfariTJCs6skx2JVsPsjtksglTcCTfI29RartSLp9TMjF2sgm7sj9VJqFVsglUxfTfL24fygXPsjigL24fyfs8M3JksramJrBlzCMVwZMdKqFmJ2e0zCMVwZM|Bottom|sZXdsZXdsZX8Mqp0KZYhzCaxwZTUwVYwwDARxDo4xWwTxZTUwVMdKGA9t0UmLjEksrx0Mj9OJD0ks0JqBhJqBfMdM3BVL2QivHamJrBlzCMVtW48HZ9TIHBlzfXdsZX8HZ9kzgUMv3x2JW4fvZteI3BmL24fyftTLqp5LqiWaZsPskYSM2i0KG9RsglfLqFjaZsPsj1eMjamLfs6sgoTsnXdwZXVxCsPsjtksglTvZtWI2pPJCs6sgoRxCsPskB5MqEfyftWajMfvZteLjiQIHBmL24fyftTL3xmaqiSLfsPsjtkMqphJqiRJVs6sgXdwDXdwDXdwZsPsjtkICs6sgXfvZtfJ2pSajFVsglfwCsPskBmMZs6wCTfIjagL2USMfs6sgpeIGFjJfsPsjtkLVs6sgXRwfsPsjtkIj9VJqFVsglTvZtfJ2tSMjBiMjxSLq9VsglfJjJjJjJjsfTfaqiTIjagL2USMfs6sjJjJjJjJfsPskBmMqxSLq9VsglfwnXTwnXTsfTfaqiTMq9mLkBiMfs6wCTfaqiTMq9mLkBiMjpPKGaRsglfLqFjaZsPskBmMqtkMj91LjBmLjMfygwPskBmMqJSLkBWKHmisglUwCTfaqiTMqphJqiRJVs6sgMdxVX3snMfvZt0KHYfJ2ofyfsUsfTfaqiTLGpVJ2iRsglfwZXTsnETsZ00wZt9vZtgL250Mj9PH2J1LqTfykPfL3thJHsfygoWvZtSLfs6wCTfKGxSLfs6sgUWajMda2ihaqd9tWo4tVYlJGikKrA9tWo4tW48Mqp0KZYhzCaxwDXdw2dWvgJPvDAdxoTUwCX4vgBPxZ00FgelwiIUKZ03bh03snhRxjTQxZX0FgoTCnp2x2d3af0VCnARxqT0vDB6tVYjKGUPzCMgJjJjJjJjtW48HZ9TIHBlzgUMv3x2JW4fvZtmI29Rwfs6sgUWajMda2ihaqd9tWo4tVYlJGikKrA9tWo4tW48Mqp0KZYhzCaxwCXUwjdWvgJPvDAdxoTVsno3vgBPxZ00Fgo3Knt2vDaswHmxwDIdvgJPvDAdxpIUKZ0Vagalx1I2KZ0WvgJPxZ00bfMdJjiPLn0ks2JjJjJjJfM|Opera|logapi|appVersion|sfTfLqF0aqFVM3YeI2iRJVs6sgsfvZteI3BmL24fyftPKHJisfTfariTJCs6skBibrAfvZtlIG5hsglUvZtgLqigKVs6wCTfJj9RarxmbjEfygoVvZtQIHtkKG4fyfsTsnXdwZXUwZsPsjofyfsUsfTfKqihJCs6wCTfKqihJG9Raj9hsglUvZtjL250sglfAHtmIGTfcCTfI29RartSLp9Waq9Tsgm7sj9VJqFVsglUxCTfL24fygXPsjigL24fyfs8M3JksramJrBlzCMVwZMdKqFmJ2e0zCMVwZM|once|accept|MacIntel|resumed|sfTfKGxSLgsfyfs8M3JksramJrBlzCMVwHY4tVYlJGikKrA9tWsTMrdksrJmJHaZL3d9tV0UyCXQwDddwgodwgXksrJiMkxmL249tWoRwCMdbq1PLkw9t2e0arX6HZ9Mv3a3aV53wV5SMjaMvWsTwnYMv3x2JVMdbq1PLkw6bqUmLjP9t2e0arX6HZ9Mv3a3aV53wV5SMjaMvWo5yDiMv3ePKG5OtW4dsZXdzqMdKGA9t0aVL3FTtVYWartSK2E9t25SLjEksrx0Mj9OJC13KGB0Kn0kwCMdJjiPLn0kLj9RJCMdJjiPLZ1VaGUizCaiajFRL2BhtVY0MjpRM2JSMj09t3BVIG5WLqp0JCdQwDhRwnXTwnXTvZXQwDdRwnXTwnXTuCM|casterror|webOS|sZXdsnUksqihzCarMj91MZMdM3BVL2QizCaRL25itVYWartSK2EQa2ihaqd9tWoksqJmLqT9t25SLjEksqJmLqTQMkFPJD0kJHJiLj9hJZM|zqMdarteLkxjL3tQzCa0MjpRM2UeaqElwfTdwVhkzgUTIHBlsqA9t00UxfT3vgoWxgIUwDwVsoTUxfT3vgoTyDo2yDA1soTUxC4VwndUxWd1vnMRwDX5wDI5xnEdDno0vgs3xDX5wVT3vgoTyDo2yDA1sowUxZ4VxWETyDwPwV4UyDhUwgIVxCXUwC4TxgwUyDMPwZX3vgoWxWE0xgA1vnXdAWwRwgoUynh1yDoPwZXTvnwRwDh5wDs2wgEdwZT3vgoTyDo2yDA1sowTvnoUvgXUyDsUwgIdwV4VwDo4yDE5wCTUxZ4VwDdWwWd5snMRwDw3xDA2xnEPwDARwgo4wWw4yCYwxV4UwWM1xnI0xCTUwf40xnoTxnI1sow0vgo5wWwTynE1vnoVvgA0wDX0xgEdwC43ynAWynI2wfTUwZ4Txno3wno4snoRxWd0wWd2xgsPxV4UwnhUxgh0xCYnwC43ynAWynI2wfT0vgo3xgIWxWX1snARwDhWwWX4xDEPwC43xWMVyDsWxfX3vgoWxWE0xgA1vnoRxWM3wghVwWIdAWoTvgX4wDM4xnAPwC43xWMVyDsWxfXUwf40yDX3wnIWvnARwDM2xgw3wnEdwDsRxnhTxWX2wVT3vgoTyDo2yDA1soTUwZ42xnA1wDI3vnMRwDX5wDI5xnEdDnoWvgw4wgd5yDIPwDoRxDEVxnXTxZYwwDIPxV4UwWI2wDoWwfYKtVYjKGUPzCMgJjJjJjJjtW48HZ9TIHBlzgUMv2M|f2parent|tvOS|platform|vast_Impression|Input|zpTSM3JkzfsPsjpgaqiSLfs6skYPIHhfvZt0bHYisglfM3JksfTfIjMfygoPsjtkI29PL3sfyfsUIGpiJjIfvZtfJ28fygoPsjtkMqphJqiRJVs6sgo0sno0sno0sno0sfTfKGxSLj1eMjamLfs6sgwdwZXTsnEfvZtfJ2ofyfsTvghfvZtfJ2pSajFVsglfwCsPskxgIGUiL3JiMfs6sgoRwfsPsjemJqEfygoPsjemJqFSLkYPIHhfygoPsjemJqFSLkiSaHB1IjEfygoPsjtkIj9VJqFVsglTvZtesglfwCt9vZtgL250Mj9PH2UmajEfykPfL3thJHsfygEPsj9RsglUvZt0JHe0sglfzrxTIG4dM3B5LqE9t2xSLq9VyfxjwnXkziU1wgFgJgUMv3xTIG4|snUWMqpRsrx0bGUizCajL250vHxmbjE6wDYTbZM|ipod|unmuted|sleep2options|Windows|DoiGBDUMv3xTIG4|rewound|Safari|settings1|971|PluginDroplist|560|contains|embedwidth|embedsize|shareiconmargin|shareiconscaleover|shareiconscale|sharetop|sharetitle|ga_proc|vast_impression|vast_click|unescape|1005|vast_skip|WEBVTT|dashdebug|timestore0plroot|timestoreunauto|timestorenolive|sub_all_title|sub_allmy|16x9|dashcookies|errortimeout|subtitle_errdel|shuffle8|dashlowquality|1006|constrols|nameofdashquality|hidesmoothly|dropnohide|poster_floatheight||tippmargin|vast_postrolltbimp|vast_postrolltimebreak|vast_postroll_limit|vast_pauseroll_counter|Verdana|vast_pauserolltbimp|vast_pauserolltimebreak|vast_pauseroll_limit|scrollTo|vast_preroll_counter|normalonclick|vast_prerolltbimp|vast_prerolltimebreak|vast_preroll_andlimit|vast_preroll_limit|embedheight|ffce00|Dialogue|160|slidespeed|pointw|pointa|vast_timeout|vast_pauseonclick|tipa|pointcolor|stripsspace|stripsw|vast_closeonclick||vast_volume|vast_title|poster_floatbgcolor|poster_floatwidth|vast_playroll_limit|getCurrentTime|posters|posterheight|ytlog|posterwidth|ytEnded|PAUSED|177|postertitleonhover|setPlaybackRate|999999|historybgaover|888888|170|222222|BUFFERING|settings3action|medium|getPlaybackQuality|getAvailableQualityLevels|titlecolor|customyterrors|setSize|tiny||large|settings3|hd720|hd1080|unavailable|CUED|settings1action|settings2action|444444|unMute|poster_floatposition|settings5|ce63a1s2z2827313716243o0z3z1m253z2o193v2c1b3o0z1z2k3o0z302k3v3s35242t203n1z3038231q25332z142z2v232z1a3s271z1z38231q25332z1430361w1z10141z133v292o173z241s3s2t3z2n1z3u243c133v292o172z241z101m233c1g3c2936162v3s101z1m360w101z39213v3z2936162v3s101z1m3c162t39213v29213v39213v29213v1z1z2s271z303s271s3s271p2o1g25303o2c1x2112193v1z1z302233143z2o193v1z1i1t332z1b303n3c1z3u2m2z1o1e253z1o1m231z1q253r173z24143c1c3c39361a3w29321v3u2s3o3s3730293p35303717143z141z101m233c1o1z1z3u243c1b35383v1z1x21121g1b2q161d1i1e1j1d1h3c161c1r3c1a1e1b3d123e1k3e1i1c1u1e121d152c1r2c1y2c1s2c1z2c1r2d1s2c1q1c132c1t2e1w2c1s2c132c1r3e1u2c1s1c1i2c1s1c1x2c1u1c1v2c1q2d1u2c1r2c1t2c1q2d152c1r2c1s2c1s2c1c2c1s2e1r2c1s2d1r2c1q3e1v2c1q3e122c1u2e1w2c1r2e1x2c1q1c1s2c1q2e1t2c1r2c1t2c1t2c1t2c1q3d1u2c1s3c1q2c1q3e1f2c1q2d172c1s3d1y2c1q2d162c1q3d1h2c1q3d152c1q3e1y2c1s3d152c1s3d1s2c1q3d192c1q3d1r2c1q2d152c1u3d1t2c1q3d172c1r3c1c2c1q3d162c1s3d1w2c1s3d172c1s3d162c1q1d192c1s3d1c2c1q3d152c1s3e1p2c1q2d172c1q3d1c2c1q3d172c1q3e1u2c1s1d152c1q3d172c1q3d172c1q3d192c1q2c1s2c1s1c1d1c191d1c3e1a1c1i1e1k3e1p3b1d3d1d3d1i2d103d1j2d1d2d1k1c1b3c1d3e1a3d1k1e1d1e1q3e1d3c1d1d1d3c1b1d161e1q1d191d1a3d1d3e1g3d1e2c1d1c1b1c1d1e1p3c1d1c163d111e1f2c1b1d1i3e1b3c1e1e1h3e1j3e1h3e123d1c3d1k1e1p1e1g3e192c1d1e1f3b1d2d1a1c1q2e1d1d1d3d123c1d3d1d3c1k3d1j3c1d3e161e1b3c101c191d191d1d1d1b1d1h1e1d2c1o2c1d1c1d1c1b3d1d1c181b1d1e1f1c1s2c1r1c1h2c1s1e1i2c1q3c1r2c1t1e1v2c1r1c1p2c1s2d182c1r2e132c1q3c1q2c1t1c1u2c1s1c1t2c1r2c1f2c1q1e1r2c1q3e1s2c1t1c1w2c1r3c1x2d153c1w2c1v1c172e2d143e1d2d163e1p3c1a3c1u3e181e1g3c1h1c1o1c1h2c161b1e3d122c1u2e1t2c1s2d1p2c1q3e1x2c1s2e122c1s2e1w2c1t2e1z2c1q1c1q2c1q2e1v2c1t2c1t2c1r3c1t2c1s3d1w2c1s2c1o2c1q3e1h2c1s2c1x2c1q2c1c2c1s1c1i2c1q3c1x2c1s2c1v2c1u1d1p2c1r1c1e2c1s1d1x2c1r2c1k2c1s1e1v2c1t2c132c1s3c1w2c1s3c1e2c1s2c1p2c1q1d162c1u3c1e2c1q3d172c1u3e162c1q3d152c1q3d1b2c1s1d172c1q3d1t2c1s3d192c1q3c162c1q3d192c1u3e192c1q3d162c1s3d182c1q2d172c1s3d1v2c1s3d162c1q3c1a2c1s3d192c1r3e1b2c1q3d192c1s3d1i2c1q2d152c1u3e1c2c1q3d172c1s3c1q2c1s1d152c1r3c1g2c1s3d172c1q3d1c2c1q3d172c1s2c1x2c1q1c1i1c183d1k1e1h1e1d1c1g1d1p3e1r3b1d2e1d1d193e1h3e133d1j1c1g1d1f1d1g3c181c1d1d141e1d1d1j3c1d1c1e3d121d1f3e193d1c3d1q1e1k3c1d1c1d3d1s2d1k1c193c1d3d1c1c1p1e1d1e1h3e1b1c1s1d1p1e1k1e1k1e1k1e1c3e1k3d161c161c122d1d3e1d1c1k3c1d1d1e1d141e1c2c1e3c1b3d1d3d1c3c1i3c101c141e1i1d1h2c1s1e1o3d1d3e163e1k1e151d1i1c1d1c1b3d1s3c1c3d1q2e1j3c1b1c1w2c142c1s2e1f2c1s2c1r2c1s2d1h2c1r1c1r2c1s1c1p2c1r3d132c1r2e1h2c1u2e1r2c1q3e1r2c1u1c1x2c1s2d1t2c1s2c1w2c1s1e1y2c1q2d1c2c1s1c1t3c1s2c1u2c12121c1p1p1e1a1c1i2e141e1c3e1h1d1c3e121d1i1e1h1e1t2c1g2e1u2c1r1e1e2c1u1c1s2c1r2c1k2c1s2c162c1q2e1k2c1s1d172c1u2e1k2c1s1e1x2c1q2e1y2c1q3d1y2c1s3c1u2c1s1d1i2c1p2e1v2c1r3e1g2c1q2c1s2c1s1d1p2c1t2e1r2c1q2c1w2c1q2e1e2c1s1c1x2c1s3c1p2c1u2c122c1q2e1p2c1s1c1k2c1s3c1f2c1u3d1x2c1s3c1x2c1r1d1u2c1q1d172c1r3c142c1s1d162c1u3d162c1q3d172c1q3c1b2c1q3d152c1u3e1r2c1s1d172c1q3d1b2c1q3d172c1q3e142c1s1d172c1s3d1e2c1q3d172c1s3d142c1q2d172c1s3d1x2c1s3d172c1q3d1w2c1q3d192c1r3d1c2c1s3d152c1s3c1c2c1q3d182c1r3d192c1q1d152c1t3c172c1s3d152c1q3d192c1q2c1u2c1q2c1u1c1f1c103c161c1i3e193c141c101d141e1q2c193c1q1c163c1c1c1e3e121d1h3e171d1c3d1q1e1k3c1d1c1d3d1s2d1k1c193c1d3e1a3c1p1e1d2e1a3e1c1c1q1d1c3c1b2d141e1s1d191d1j3d1d1e1e3d1g2c1d1c1q3d1a3d1h3d183d122c1a1c1d3d1d3d183e1d3d1p3c101d123c1e1c1b3d1s3d1g1d1d3d1p1e1b1c143c1q3d1k3c181c1r3c1c3e1e1e1g3d171e1c3c1o1c1d1c1d2c1s1d1d3d1p1e1d3c1i1d1p3c101d1t2c1w2c1q3c1u2c1r3e1s2c1s1c1y2c1s3e1d1d1z1c1j2c1s2e1w2c1s2c1u2c1q2c1d2c1s2c1j1c1w2e1y2c1q2e1f2c1r1c172c1s1e1q2c1s1c1v1c1s3c173d1x2c161c121j1f2b1r1o1o1g1j1e1h221m|playerapiid|enablejsapi|playerVars|videoId|settings4action|API|loadVideoById|youtube_iframe_api|onYouTubeIframeAPIReady||ytcl1|settings5action|timestoredontuse|poster_floatmargin|html5|disablekb|||customimage|onReady|setPlaybackQuality|218124bf097df3ac5a115858223736ca|yttitle|ytReady|onPlaybackQualityChange|onStateChange|getVideoLoadedFraction|fb666o3q1t3s241c291s3b3x211d3o01121o272z2q1b3x2e1i1b3x111k1a21193u3y1z211611153v3b2q1922241u3u2v222n113w262e133x3b2q19202611211o232e1i2e2b361y2x3u11101o380y11102b233x2129381y2x3u1z121o2e182t213p112238251s27352c16212x252c183u29111z3a251s27332e1621281w1c3u291y2s29182u291s2u291q2e1z3w2811113u28113w263s2o3q01112z2b3y141o252e2q111z211411121o252e3q2o37202q11212129233x2228143q011e1e2t2e2b2q142s11121f211o11313a25353w273w273r153823111z3a391121141j111e1o2c182v212r2c2b233x212o1i29332e293y141o141t2e1e1f1e1c1h1e122f1i1e1e2g1m1c1a3g181g131g1m1e1k1d1f2e1s1f1p2e1v2g1t2c1s2e1w2e1q2g1g2e1u1c1z2e1s3e1p2e1w2e142c1s2g1m2e1s1e1m2e1u3c1h2e1u2f1x2e1u3e1z2c1t1f1u2e1q1f1w2e1s2c1u2e1t3g1t2e1w2e1v2c1u2g192e1s1f102e1t2e1q2e1s2f1w2e1v2g1l2c1t1e1u2e1r2e1u2e1s2c1y2e1s3e172e1w2g102c1s3e172e1r3g1v2e1s2d172e1s3f1v2e1u3f172c1s3f1e2e1q2f1b2e1s3d1a2e1s1f172e1v3g162c1s3f182e1q3f1x2e1s1d172e1t3f1a2e1u3f182c1s3f142e1q3f1b2e1u3d1a2e1s3f162e1u3f1h2c1s3f192e1q3f1f2e1s3d172e1s3f1r2e1u2f192c1s3f162e1q3f192e1t3c1i2e1s2f152e1u3g192c1s3f172e1s2e1w2e1s2c1e1e1f1e1k1g1e1e1k2d1d3e1b2e121e141g143d1s3f1c1g1s1f1y2f1j2d183f121d1d3g1g3g1m1c1b3e1f3f1h3f153g1l1c1i1f1h1f1e2e1a1e1f1d161g1s1f1h3e1e1e1g3e141f1h3g173f1e3f1s1e1m3e1f1e1d3f1e3f1f3d1f3f1f3f1d1f1d2f1e3d1e3f1e2g1q3e1h1e141e1s1g1f3f1p3d1e2f1f3c1f3e181e1d2g1d2e1c1e1b3f1g2e1d2e1e1g1k1c1d3e1g1f1e2e1l1f1t2c1s1f1j3e1b3f1a1e1d3e1i3f1f1e1e3e1v2g1l2c1u2e1i2e1q1g122e1t2e1k2e1u1g1d3e1w2g1t2c1u2e1u2e1r2g172e1t2e1l2e1s2g1b1e1w2g1q2c1t1g1l2e1s2f122e1t1c1k2e1s2g1a1e1x2e143c1z2e1f341r1t3g193f1o1e1b1e153e123e141g1g3f191g1g2e1k1e1x3g1g3g172e1v3e1v2e1u2e1t2e1w2g1b2c1u1f1y2e1r2g1s2e1u2d1y2e1t2g1j2e1v1e1w2c1t2e1s2e1q2e102e1u3c192e1u2g1y2e1u3e192c1t3g1z2e1q2e1y2e1w1c1l2e1t2e132e1u1e1q2c1s3g1f2e1s2e1g2e1u3e1g2e1u2f1v2e1v2g1l2c1u2g1t2e1s3g112e1u2c1c2e1u1e1v2e1w2e1j2c1s1f182e1s3f1c2e1u3d192e1s3f182e1u3f1b2c1u3f1l2e1q3f1b2e1v3c1d2e1s1f162e1w3g172c1s3f172e1r3f1f2e1u3d182e1u3g1y2e1u3f1a2c1s3f192e1q3f1a2e1u3c172e1s3f152e1u3e1f2c1s3f172e1q3f1q2e1u3d192e1u3f1d2e1u3f192c1s3f1j2e1q2f1a2e1w3d1e2e1s1f152e1u3f1d2c1s2e1z2e1q2e1m1e1j3c1f1f1e1e1f3d1e3f1e3c1b2e141e1y3d1f2g1a1d191g1f1g1e3f1i3e1e3d1f2g1k1e1j1e1k1f1j1d1c3e1h1e192f1m3f1a3d1f3e1a1f1e3f161g1j3c121g1w2f1h1f1a1e141b1d3g1e3f1k1e1d3e1e3d1j3g1e3f1c3g1g3f1g3c1f3f1f1f1i3f1m3f1y1d142e1e1e191e1f1g1j3d1m3e1y3g1d2f152e1c3d142f1f3e1e1e1k3e1e1c1s2g1m1e1a2g1d3f163e1d1g1i1f1i1f1j3e141d143e1a1f1p1g1d3e1g1c1s2e1u1e1t2e1v2e1u2c1s1e1y2e1s1e1l2e1w2e1f2e1t1g132e1v2e1t2c1s1e1z2e1q2g102e1w1e1k2e1u2e1u2e1w1g1q2c1s3f1h2e1r2g1v2e1u1c1k2e192f1u2e1v2f1j121l2f1g1g1g3g1u1g1l1d1b1e1j1f191f1f1f1f1c1j1e1u1g1o3e1s3f1g2c1s2e1i2e1s3e1z2e1w1c1v2e1u1f1r2e1t1e1i2c1s1f1x2e1t2e1m2e1w1e1v2e1t2e152e1u2e102c1s3e1e2e1u2e1r2e1u1d162e1s2e1u2e1s2g1m2c1t3e1z2e1u2g1y2e1v2c1y2e1s3f1k2e1s2e1a2c1s3e1r2e1u2e1q2e1v1c1g2e1u2e142e1u2e112c1s2e1b2e1u2g1e2e1v3e1j2e1s2f182e1s3e1e2c1s1f192e1s3g1e2e1u3d182e1t3e192e1s3f192c1s3e1h2e1s2f182e1w3c1d2e1s1f192e1s3e1j2c1s3f182e1u3f192e1u3d192e1s3e1z2e1s2f1b2c1s3f1e2e1s1f192e1u3d1c2e1s3f172e1t3g1d2c1s2f182e1s3f182e1u2d172e1t3e1j2e1s2f1a2c1s3f192e1s3f172e1u3d1t2e1s2e1u2e1f1e1h3b143g1f2f182g1f2g1e1c1i1f1m3f1y2g1f2e1e1e1c1f1h3e1b2f1k1f1a3d1d3e1a1f1g3g141f1j3d121f1w2f1j3f183e141b1f1f1e3f1p1e1b3e1f3d1j3f133f1o1e1i1f1j3d1g2e181e1c2f161g1u1d1j3e181e181e181e1a1c1s1g1j3e1a1e1a1g143b1f1f1c1e1i2f1f3f1h3c121f143g1d3e1f3f1g3d1j1g1f2e192f141f1e1c1f3e1f1f1i3f1a1g1i1d1f1g1k3f1h2e1s3f1l3d152f1e3f142f1e2f1e1c1f2e1y2e1u1g102e1v2e1f2e1u3e1f2e1u2e122c1k2e1h2e1s3f1u2e1u1d1x2e1t1e1s2e1u1e1x2c1f3e1u2e1t3g1t2e1v2c1l2e1u1e1i2e1t3e1f2c1f2e152f162e1t2e1j171e1f2v1k2e2i1e1i1f1e2q16|modestbranding|showinfo|settings4|iv_load_policy|playsinlineonmobileiphone|df6ed2923313y331w371e27202o193v2e1b3o001z1o252z2o2m272c2o2m2w25381e232z1i2c29361a2x3s1z2z1m280w1z2z39233v2z29361c2v3s1z2z1o2z162t2z2p1z2038231s25332c14212v232c1w2u271z1z38251q25332c162z261w1011141z133v3b2o172z241u3s2t2z2n113u242c133x392o172z26101z1m23113u261z3u281z3u261z3w2o2z29213x2c29213v2b213v252y3b3v2c1z1z2433143o00222c293w121o2c1b3o0z212k221z2z1o2z1z1z2s291z2z1d393x2c181w10222v3u2s332e101z1c1m11133v27211v302o12232720332c1628332z1d1e1a2c142z261y1z101z202u271z101m3u350z2z223514331c2p3f1j1e1i1d1f1c1q3d1h2g1o3d1d3e183e1k1e1g1e1f2d1c3c1s3d1k2c1r2e1x2c1s2e1y2c1t2c1w2e1q3d1i2c1s2c182c1q3e1p2c1s2c1q2c1t1c1e2e1s2c122c1u2c1z2c1q2e192c1s2e1e2c1t3e1h2e1q2c1s2c1s1e142c1s2g1p2c1q2c1z2c1u2c1e2e1s3c1r2c1u2e1w2c1r2e1r2c1s2e1g2c1t2c1v2e1s2d1w2c1u2c182c1q2g1v2c1s2e1b2c1s1d142e1s3e1t2c1s2d192c1q3f172c1q1d182c1s3e1x2e1q2d172c1s3c1i2c1q2f152c1s3d142c1s2d152e1r3d1j2c1s2d192c1s3f122c1q3d192c1u3c1a2e1q2d152c1u3d1d2c1q3f152c1r3d1f2c1s3d152e1q3e192c1s2d172c1r3f1x2c1q3d162c1u3e182e1q2d162c1u3e1v2c1q3f152c1q3d192c1s3d1s2e1q2c1s2c1f1c1h3d1e1g1e3e1s1d141e1s2e1b3e1g3d101d143d1g1c1e3e1q1e1o3e1f3c1j3c1d1f193d1h2d183d123c173f1d1e1e3d1g2c1c3d1q3g1i3c1j1c1i1d1h3d1a1e1f3c192d1k3d183d1d3e181d1e3e141d1h1c101e181c181c1a1c1a3e1k1g1q1d192d1b1d1p3d1d3f1e1e1b1d1m3c122c123g1y1c1d3d1f3d1k3e1r1g1q1c1b1d1a3e1s1c1q3e1e3d1c3e141d1i1e1q1f1e3c1s2d1h3d1c3c1d1g1i3c103e1f3d1g1e152f1q2c1s1e1s2c1t1c1d2e1q2e1y2c1t2c1f2c142g1t2c1s3d1q2c1u3e1t2e1q2c1t2c1t2c1y2c1d2e1o2c1q1c1h2c1t2c1r2e1s2c1h2c1t2e1u2c1d2e1p3c122c1u2d12121j123c161c1k3g1e2e1d3d142c1i3d1a1g1e1d1o2e1j1c123e1c1e1p3e122c1u2e1r2c1s2e1x2c1s2c1g2c1u3c1t2e1s2e1u2c1t2c1t2c1u2g1e2c1r2c1x2c1u2d1y2e1s2c162c1s2e1x2c1u2g192c1q1d162c1s2c1z2e1q1e1e2c1u1c1u2c1t2e1i2c1s2c162c1s2e1p2e1q1d172c1u2e1p2c1u1g1v2c1q2e1y2c1s3d102e1q2c1u2c1s1d1k2c1r2g1t2c1r3e1g2c1s1d192e1s3e162c1s3d192c1t3f142c1q1d172c1u3d1c2e1q2d152c1u3e1g2c1s3f172c1s3d1d2c1s3d182e1s3e1c2c1s3d172c1s3f152c1q2d172c1u3c1a2e1q3d162c1s3d1a2c1s3f162c1q3d1a2c1s1d172e1r3d192c1s3d192c1s3f132c1q2d172c1u3e1w2e1q1d152c1s3d1b2c1s3f152c1q3c1z2c1s2c1w2e1i1c103d1l1e1k1d143f101e122e1s2e1c3d143f1y3e1g1d1d3c1d1d161g1d1d191d1q3d1c3e1g3f1e3c1b1c1f1c1c1e1p3e1d1c163d131e1h2c1b1f1i3d1d1c1g2c1s1e1j3g1b3c1h3c1f2d1b3e1j1f161c102c192d1b1d1b1f191d191c181c1d3d183f133c1g1d1s3d1f1e1c3f1d1c1d3c1b1c191d1r1f1q3e101c1u1d143d1c3f151e1f1d1s2d1j2e1p1e183e161d1m3e1d1c1h3e1d1c1e2c1f1e1h2c1i1g1d3d1d2c1u3c1f2c1s1e1y2c1q2d1f2c1s1e1k2e1q2c1r2c1r2e1k2c1s3e1w2c1s1c1f2c1s2e1o2e1s2c1f2c1v2c1p2c1s2e1h2c1q2e172c1s2e1r2e1s1e1k2c1s2d1y2d1s2e1s3c171b2s2e1c3e1c1e1g3c1k1e1l1d1i1c1d3e1e1d1e1d1i2c1f1e1b2e132c1s1c1q2c1r2c152e1q1c1j2c1u3e1d2c1u1e1c2c1q3e1i2c1s1d1x2e1r2e1h2c1w2e1r2c1u2g1x2c1q2c1e2c1s1c1x2e1s2c1f2c1u1c1s2c1s2e1u2c1r2c122c1s2c1z2e1r2d1s2c1u1c132c1t2g1w2c1s2c172c1r3e1u2e1s2c1i2c1w1c1x2c1u1e1v2c1q2d1y2c1r2c1t2e1q2d152c1v3c1x2c1s3f162c1q3c1d2c1q3d192e1s3d1b2c1u3d162c1s3f1b2c1q2d192c1r3d1z2e1q1d152c1u3c1i2c1s3f152c1q3d182c1q1d192e1q3d132c1u3d162c1s3f1t2c1q2d1b2c1q3e1g2e1q2d172c1u3d1c2c1s3f152c1q3c1s2c1q3d192e1s3d1r2c1u3d162c1u3g1w2c1q3d192c1q3d192e1q3d152c1u2c1s2c1s2g1d1c103e1b3d1o1c1p3f1p3b1b3d1e3c192c1p3e1w2d1i3e1e1c1d1e1p3e1b1c163d151e1f2c1b1f1i1d1d3c1i2c1q1e1c3g1d1c1h3c1f2d193d1j3f161c102c1b1e1d1e1g3f1e2c1d3d1u1e1i3c1o1e1g1d1f3d1e2e1i3d1k1f1i3d1i3d1e3d1d3e1j3g1f3d123c1e2e1d3d1s3e1b1c1d1c1k2e101d143f1d2d191d1j3b1q2d1s1f1d3c1b2d161e1j1e1a1g1g3c1h1c1e2e1d3c1x3e102c173d1u2d193d1w1g1q2e1d3c1u2c1r2e1f2e1s2e1s2c1u2c162c1t2g1v2c1r1c1x2c1p1c172e1r2c1g2c1w2d1f2c1u1g1f2c1r1e102c1s2e182e1s1e1q2c1u3c1d2c1s2g172c1q2d1v2c1y3d1s2e1w3c121d1e1p1k2t2q2e1j1d1i1q161|vast_postroll_counter|action_back|962|275|borderBottom|036|041|029|992|914|883|957|sfTfIGx0KG9RsglfM2eeMjEfvZt0bHYisglfM3JksfTfMq9WKHBmL24fyft0L3XQMjikKrAfvZtQIHtkKG4fyfsUxCXUxCXTsnXfvZtfJVs6wCTfIjaSsglUvZtWI2pPJCs6wCTfIjaTIGBhKG5ksglfxfX2snIdxfsPsjtkICs6wZ4WvZtfJ2pSajFVsglTvgIPsjpRKG1eaqiSLfs6skYSM2i0KG9RsfTfJGpWJCs6sjFPIHx0KGwfcCTfLqpRJVs6sjFRsfTfM2F0aqiRJ3wfykPfM2F0aqiRJ3w0sglUvZtWJHB0KG5kMWBeI3BmL24fyftWMqFiJZsPsktSaG5hKG5ksgl1vZtfJ2xSLq9VsglfJjJjJjJjsfTfI29PL3sfyfsTwnXTwnXfvZtfJ2ofyfsUsfTfajpPaGFgL2USMfs6sgXTwnXTwZsPskYeJqBmLjMfyfs1snoTsnEdwDXfvZtQIHtkKG4fyfsTsnoTsnXdwZsPsjtkI29PL3tSajFVsglfJgYjwqITsfTfM2F0aqiRJ3w1sglTvZtWJHB0KG5kMWFeI3BmL24fyfthL3aRLq9eJZsPsjeiIGBjL250M2i6JCs6wDAPsjtSMjBiMjxSLq9VJGAfygoPsjtSMjBiMjxSLq9VsglfIjJfJjtjsk0PsjUSJVs6wZTfMj91LjBmLjMfygXPsjxSLkBVL2UcFHhTBE4fykPfL24fygoPsj9VJqFVsglUwfTfIGx0KG9RsglfI3FWaq9QsfTfKGxSLfs6sgUWajMda2ihaqd9tWo4tVYlJGikKrA9tWo4tW48Mqp0KZYhzCaxwDwRwghWsnwRwghWDnMRwnsVsnhRxDI0LnoRxno0snoRxno0snIRwgMUvDIRwgMUDno3snaGwGdQxklksqJmLqT9tVxjJjJjJjIkzgUMv3Yeaqd|introtxt|introtitle|introclosetime|296|372|introclickable|borderRight|partnerprerollor|vast_resound|vpaid_slotinframe|eventstrackervast|xxx|u10|sfTfariTJCs6skx2JVsPskYSM2i0KG9RsglfI29RartSLrwfvZtQIHtkKG4fyfsTsnXdwZX1sfTfLqiRKVs6wCTfLqiRK3FVLZs6sjpTKDmTKHY3JGtOKHAfvZtlKGBisglTvZtfJVs6wCTfIjagL2USMfs6sgpeIGFjJfsPsjtkLVs6sgXRwfsPsjtkICs6sgXfvZtfJ2pSajFVsglfwCsPsjtkMqphJqiRJVs6sgIdxfX2snIfvZt0KHXfygoPskBmMrBibrAfyftAKFXfvZt0KHYfJ3tSaG5hKG5ksglWvZt0KHYjL250M2i6JCs6wDoPskBmMqtkICs6sgofvZt0KHYesglfwZ43sfTfaqiTIjagL2USMfs6sjJjJjJjJfsPskBmMqxSLq9VsglfwnXTwnXTsfTfaqiTMqphJqiRJVs6sgMdxVX3snMfvZteLjiQIHBmL24fyftTL3xmaqiSLfsPsjigL25QIHtkKG4fyfsTsnXdwZXUsfTfaqiTMq9mLkBiMfs6wCTfaqiTMq9mLkBiMjpPKGaRsglfMjikKrAfcCTfMrtiLq9eJZs6wZTfJjiPJCs6siQ7MqmWt3p0aqi0LqFTKkwkMHA6MqmWt3p0wHYNMVaUaZUTKkwkMHBjKGUiMqmWt3p0ykYNMVaUaqe0arYWyiTSHZ9TLrtNMV5gL21Mv3xeLHYPJC5QMnBTKkwkMHB9vrQTKkwkMHB0KHBPJHYNMVaUanmTKkwkMHAVMqmWt3p0vrYNMVaUaqJmLqFTKkwkMHA6MqmWt3p0KrB0Mrw6HZ9Mv3YPMjmWvjxSLFTSM2pQMqUivj1TxrYNMVaUar1asfTfMqUebGUmM3AfykPfKqihJGxSLkBVL2TfygoPsjtkI29PL3sfyftjJjJjJjIfvZtgL2USMfs6sgXTwnXTwZsPskJeLrFiI29PL3sfyfsTwnXTwnXfvZtfJ2ofyfsUsfTfKqiWaq9VbGtkI29PL3sfyftjxGI1JgEfvZtfJ2xSLq9VL3JiMfs6sjI1JgFjxCsPsjtSMjBiMjxSLq9VJGAfygoPsjtSMjBiMjxSLq9VsglfJqFhJGBisfTfMj91LjBmLjMfygwPsj1eMjamLfs6sgXdwZXTsnoTsk0PsjUeLjBWI2pTJGJ1LqTfygXPskxgMjFiLjxPKGxOsglUvZtjaGUPL25TLqp5sglUvZt0KG1iM3BSMjEfygoPskJSLrFQJCs6sgofvZtlLrwfygoPsjUWJkFPLrYPIHhfygoPsjBeM2dfygXPsjaesglTvZtjaGUPL25TLqp5LG9fKGUisglUcA|partnerpauserollor|introskiptime|partnerpostrollor|partnermidrollor|midrollpoint|432|857|zrYeaqddJn0kDDoWsno1CnxGxGd1FgxswjoUsnodwZXTsnXQwCXUagoVIDodwCXTsnXdwZXUsnplwDtewCXUsnXdwZXTsnoQwHIQxjdQwkI1bfMdJjiPLn0ks2JjJjJjJfM|default_channel|minivis|vpaid_timeout2|416|918|897|874|848|zqMdarteLkxjL3tQzCa0MjpRM2UeaqElwCTdwVhkzgUTIHBlsqA9t00UwZ41wgs3xDXWvnoVvgw0ynAUwgddDnoTvgEVwgM1wnwPyC4WwnwWyDATwCYnxC41wWI1ynI0yZT5vgoUyDETynh4snsRxDw0ynX5ynhPwDoRwWd5xgh4wCXTvnoWvghUwgEWwnEdAWXPxV45wDE5wgEUyCX1vgsVxgh2ynM3vnwRwDhVxWo1wWIdwDXRxDsVxWETwVTWvgoWyDd2wnodDnoTvgEVwgM1wnwPwZ4UwDM2xnMTxDhdDno4vgXTwWE4wDdPxf4VwWwTwgh5wVYwwDXRxDsVxWETwVTUwf4Wxnd0wDs4splksqJmLqT9tVxjJjJjJjIkHZ8|818|785|747|705|659|606|547|subclr|483|344|fimg|001|019|996|984|981|988|clear|007|2002|f2img|sub_settings|003|096|185|267|isflash|onMouseOver|vast_playroll_counter|5em|PluginSubword|vast_titlecolor|vast_titlebgcolor|vast_skipcolor|vast_skipbgcolor|vast_linktxtcolor|files_scale|vast_linktxtbgcolor|files_sleep|current_sleep|clr_contrast|clr_brightness|clr_saturate|actn|marginRight|vast_xcolor|readAsText|vast_midroll_counter|vast_midrolltimebreak|vast_remove|vast_midrolltbimp|paddingbottom|brdla|brdlc|setioff|brdl|vast_impressions_all|vast_introtimebreak|bggrclr|clr_sepia|vast_introtbimp|vast_xbgcolor|vast_progressbgcolor|vpaid_timeout|vast_openclick|_timer|line_play|scroll_up|contrast|scrollWidth|vast_unmutebutcolor|moved|reloaderTimer|onMouseOut|pjsga|vast_preroll_vmap|vast_pauseroll_vmap|vast_postroll_vmap|vast_midroll_vmap|thumbs_img|logos|vast_progresscolor|vast_unmutehover|vast_volumebgcolor|vast_volumecolor|through|clone|google|vast_linktxtonmobile|vast_unmutebutonce|scroll_right|vast_default_volume|vast_unmutebutbgcolor|sub_fonted|2px|black|sub_drag|ytError|Destroyed|Boolean|hdbfdt|reset|customspeeds|ndash|grdt|hdn|showvolmobile|nativemobile|hdbfmb|noset|kind|to_right|lrpp|customwidth|wproc|02|isOn|tskp|cancelskip|cancel|dashInterval|childNodes|seekiconbut|pictureInPictureElement|availability|available|webkitcurrentplaybacktargetiswirelesschanged|webkitShowPlaybackTargetPicker|webkitSupportsPresentationMode|pictureInPictureEnabled|disablePictureInPicture|webkitPresentationMode|requestPictureInPicture|playbackRate|exitPictureInPicture|setAudio|setWsQuality|setWsAudioTrack|level|getDash|fillvideo|HlsSubTrack|subtrack|seektome|ssfly|WebKitPlaybackTargetAvailabilityEvent|hideab|hideonleave|hidenormscreen|hideonunmute|hideonlive|hideonmeta|hidemini|hidenomini|hidenoab|hideonyoutube|hideuntilended|pjs_cast_button_|cast_available|pauseonhover|showduration|showboth|separator|buffering|SettingsTimer|maxHeight|hideonvod|hideuntilstartedios|bezier|hidesmall|ssdown|combined|PluginSettings2|showovr|showuntilmeta|hideonleaveandplay|hideonbar|hidelap|dropopen|hideuntiltext|hideall|hideonend|hideondesktop|hideonmobile|hideunwait|hidewait|hideafterstart|hidelastpl|hide0timestore|webkitplaybacktargetavailabilitychanged|disabled|enter|LEVEL_SWITCH|drmSystems|xhrSetup|withCredentials|attachMedia|MEDIA_ATTACHED|attached|MANIFEST_LOADED|MANIFEST_PARSED|LEVEL_SWITCHED|serverCertificateUrl|LEVEL_LOADED|Live|FRAG_CHANGED|fragment|relurl|hlsfdt|FRAG_PARSING_METADATA|fragdata|AUDIO_TRACKS_UPDATED|emeEnabled|licenseUrl|subtitleDisplay|autoStartLoad|complete|nativehlstv|nativehlsinsafari|nativehlsinedge|support|flussonic|PlugMediaChannels|DASH|manifestLoadingTimeOut|clearkey|fragLoadingTimeOut|enableWorker|hlscltps|capLevelToPlayerSize|apple|fps|widevine|microsoft|playready|AUDIO_TRACK_SWITCHING|hlssubtracks|cast|playtry|WebKitMediaSource|WebKitSourceBuffer|appendBuffer|hlsaddbitrate|firstLevel|AudioTrack|plduration|2000px|playError|wake|interrupted|automute|playError2||autoplay_denied|hlsforce|webkitAudioContext|createMediaElementSource|createGain|destination|nativeaudio|onpause|FRAG_LOADED|Level|SUBTITLE_TRACKS_UPDATED|subtitleTracks|ERROR|networkError|mediaError|hlsermd|recoverMediaError|hls_error|regress|Video|PluginWS|wsconfig|sleep|watching|loadstart|loadeddata|webkitfullscreenchange||webkitDisplayingFullscreen|aborted|ShowSettingsBut|187|nodownload|outline|borderin|inset|querySelector|pjscolor|backface|manipulation||origin|indent|visited|observe|hover|class|oncontextmenu|ContextMenu|rc_custom|rc_nobrand|uppercase|99999|rmright|childList|oframe|15em|getDate|pljscom|viewinit|intvsbl|pstrcnfg|emptyremove|answer|hash|Cross|srvsga|transbg|88484718|allowLinker|require|autoLink|word|container_w_procent|select|35px|07|ref|playback|fast|change2playlist_bottom|passonstart|mobtch1|nfscldr|nfsclios|nombclck|seeksidesmob|layerX|offsetX|posterstime|PluginMediaTags|pstrvd|_vdpsrt|Logo|Orientation|webkitFullscreenElement|webkitIsFullScreen|mozFullScreen|msFullscreenElement|fullscreenElement|PluginRounding|PluginEffects|panel|quizes|autoplaynomobiletv|rafinit|sessid|sleeptimer0|offsettimerinit|startvisibility|PluginMini|PluginBlock|PluginQuiz|ChromeCast|mouseenter|mouseleave|orientationchange|move|keyup|keydown|MSFullscreenChange|fullscreenchange|Local|unatpl|DOMContentLoaded|189|tipmargintop|clickmarginright|iconmargintop|iconmarginbottom|iconmarginleft|iconmarginright|rotateonclick|tippointeralign|180|tipmarginbottom|bgbrdrw|tipmarginleft|tipmarginright|hidesec2|scale0|control_time|triangle|control_mute|volume_element|slider|clickmarginleft|bggrc|hdbffs|PlgnCntrlTmln|bufferInterval|bufferDeg|countdown|counter|PluginCountdown|iconspress|link2|ontop2|webp|bggrl|_text|SVG|_icon|ontouchend|PluginHdIcon|flipx|flipy|touch_|_bg|hdbfnr|running|bFjuF1EOL7VbrIrBuusmrt4ZZORfb6ehbWdnRHEIiITaEUKa5EJqUakRSaEYBJSCY2dEstQY7AuxahwXFrvZmWl2rh4JZ07z9dLtesfNj5q0FU3A5ObbwAAAABJRU5ErkJggg|shape|handlemarginright|134|235|hlsdvrtime|offsetwidth|roundingver_final|pjs_thumbnail_|200000|grdth|onmousedown|grdta|grdtc|mrgnp|brdclr|brdtop|iVBORw0KGgoAAAANSUhEUgAAAAEAAADGCAYAAAAT|OqFAAAAdklEQVQoz42QQQ7AIAgEF|kbq|RWAlnQyyazA4aoAB4FsBSA|handlemarginleft|onmouseup|Color|valuepaddingright|alphas|abg|lines1|aload|colorover|valuepaddingtop|valuepaddingbottom|valuepaddingleft|valuemargintop|225|valuemarginbottom|valuemarginleft|valuemarginright|l3v_left|handlemargintop|handlemarginbottom|handshdw|drop|135|taginframe|Infinity|controlsList|vastinfo|webkitendfullscreen|playlist_folders|playlist_length|showplaylist|webkitEnterFullScreen|webkitSupportsFullscreen|outros|showvlt|fileend|pjsiframed|reloadplus|reloadjustevent|tracking|vastnow|PasswordTime|OpenScroll|nooverlay|vastpause|reloadstart|_self|downself|dontseekforward|scrnstp|Progress|01|vastresume|vaststart|startAd|Resume|vastmute|webkitExitFullscreen||wheelDelta|PluginStat|skipimpessed|PluginVastTimeMsg|renew|tagLive|vastbgpreload|VastOverlay|vast_ready|VastReady|VastShow|VpaidStarted|VastImpression|bgload|bgload2|sscopyright|Courier|skipimprsd|cut2|crtm|vast_init|yandex|Arial|3600000|fillStyle|vlscrl|fillText|issue|crossdomain|jpeg|invert|chngwd|cut1|AdBlock|pjsstatid|vast_startdelay|191|scrollY|const|globalfont|pageXOffset|same|async|NaNpx|number|olor|setProperty|repeating|45deg|1000000|control_buffer|192|nativenodownload|cssText|FindPjsDiv|2048||nodeName|127|PJSDIV|arguments|0123456789|122|121|substring|reduce|encode|MarPad|redirectblank|blnk|pjsstat|nativenotandroid|PluginWater||wid|water|currentfile|vrsn|vastids|adsystem|vpaid|wrapper0|heartbeats|isOpen|filetype|getVolume|nativeontv|sess|redirectparent|css2|openlast|clk|circle|swap|head|showfrom1file|googleapis|midroll_time|stylesheet|nexttrack|previoustrack|artwork|MediaMetadata|midrollcrtm|startdelay|toDataURL|alarm|854|42E01E|mp4a|2160|tagcors|3840|1440|2560|1080|1920|crossorigin|720|1280|480|240|eng|426|1600p|||||||||||qualitypause|crossOrigin|Quality|Seeking|moveplaylist|tags|unfix|Break|reloadtimes|Alternative|ynxnopip|customqualities|avc1|loaderror|isfullscreen|0001|nomedia|vast_loadtxtd|vast_posterurl|Created|RemoveAll|MediaDaily|mainresize|MediaPjs|MediaRumble|MediaVimeo|Image|dailymotion|hqdefault|codecs|New|PluginFloatPoster|rldnornd|FloatPosterScale|Audiotrack|Speed|fix|scaledrag|dragging|scaledrag0|error_time|rus|urlmse|English|tryotherquality|drunchr|createposter|Active|Next|vast_dontplay|disablePreload|VastInsertAnd|||||||||||castinit|VastInsertOr|vast_stop|10000|VastRemoveUrl|vast_finish|vast_ima|vldcntrInterval|posterfull|RemovePassword|Pass|EmptyVastUrl|and2limit|preloading|norootplstart|EXTINF|VastError|finishnormal|switchpip|dvtp|timeplay|vast_error|winmob|redirectafter|finish|playlists'.split('|'), 0, {}))
!function t(e) {
    var r, i;
    r = this,
    i = function() {
        "use strict";
        function r(t, e) {
            var r = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(t);
                e && (i = i.filter((function(e) {
                    return Object.getOwnPropertyDescriptor(t, e).enumerable
                }
                ))),
                r.push.apply(r, i)
            }
            return r
        }
        function i(t) {
            for (var e = 1; e < arguments.length; e++) {
                var i = null != arguments[e] ? arguments[e] : {};
                e % 2 ? r(Object(i), !0).forEach((function(e) {
                    var r, a, s;
                    r = t,
                    a = e,
                    s = i[e],
                    (a = n(a))in r ? Object.defineProperty(r, a, {
                        value: s,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : r[a] = s
                }
                )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : r(Object(i)).forEach((function(e) {
                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e))
                }
                ))
            }
            return t
        }
        function n(t) {
            var e = function(t, e) {
                if ("object" != typeof t || !t)
                    return t;
                var r = t[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var i = r.call(t, e || "default");
                    if ("object" != typeof i)
                        return i;
                    throw new TypeError("@@toPrimitive must return a primitive value.")
                }
                return ("string" === e ? String : Number)(t)
            }(t, "string");
            return "symbol" == typeof e ? e : String(e)
        }
        function a(t, e) {
            for (var r = 0; r < e.length; r++) {
                var i = e[r];
                i.enumerable = i.enumerable || !1,
                i.configurable = !0,
                "value"in i && (i.writable = !0),
                Object.defineProperty(t, n(i.key), i)
            }
        }
        function s(t, e, r) {
            return e && a(t.prototype, e),
            r && a(t, r),
            Object.defineProperty(t, "prototype", {
                writable: !1
            }),
            t
        }
        function o() {
            return o = Object.assign ? Object.assign.bind() : function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var r = arguments[e];
                    for (var i in r)
                        Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
                }
                return t
            }
            ,
            o.apply(this, arguments)
        }
        function l(t, e) {
            t.prototype = Object.create(e.prototype),
            t.prototype.constructor = t,
            h(t, e)
        }
        function u(t) {
            return u = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
                return t.__proto__ || Object.getPrototypeOf(t)
            }
            ,
            u(t)
        }
        function h(t, e) {
            return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
                return t.__proto__ = e,
                t
            }
            ,
            h(t, e)
        }
        function d(t, e, r) {
            return d = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct)
                    return !1;
                if (Reflect.construct.sham)
                    return !1;
                if ("function" == typeof Proxy)
                    return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                    ))),
                    !0
                } catch (t) {
                    return !1
                }
            }() ? Reflect.construct.bind() : function(t, e, r) {
                var i = [null];
                i.push.apply(i, e);
                var n = new (Function.bind.apply(t, i));
                return r && h(n, r.prototype),
                n
            }
            ,
            d.apply(null, arguments)
        }
        function c(t) {
            var e = "function" == typeof Map ? new Map : void 0;
            return c = function(t) {
                if (null === t || !function(t) {
                    try {
                        return -1 !== Function.toString.call(t).indexOf("[native code]")
                    } catch (e) {
                        return "function" == typeof t
                    }
                }(t))
                    return t;
                if ("function" != typeof t)
                    throw new TypeError("Super expression must either be null or a function");
                if (void 0 !== e) {
                    if (e.has(t))
                        return e.get(t);
                    e.set(t, r)
                }
                function r() {
                    return d(t, arguments, u(this).constructor)
                }
                return r.prototype = Object.create(t.prototype, {
                    constructor: {
                        value: r,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                h(r, t)
            }
            ,
            c(t)
        }
        function f(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var r = 0, i = new Array(e); r < e; r++)
                i[r] = t[r];
            return i
        }
        function g(t, e) {
            var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
            if (r)
                return (r = r.call(t)).next.bind(r);
            if (Array.isArray(t) || (r = function(t, e) {
                if (t) {
                    if ("string" == typeof t)
                        return f(t, e);
                    var r = Object.prototype.toString.call(t).slice(8, -1);
                    return "Object" === r && t.constructor && (r = t.constructor.name),
                    "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? f(t, e) : void 0
                }
            }(t)) || e && t && "number" == typeof t.length) {
                r && (t = r);
                var i = 0;
                return function() {
                    return i >= t.length ? {
                        done: !0
                    } : {
                        done: !1,
                        value: t[i++]
                    }
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        function v(t) {
            return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
        }
        var m = {
            exports: {}
        };
        !function(t, e) {
            var r, i, n, a, s;
            r = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/,
            i = /^(?=([^\/?#]*))\1([^]*)$/,
            n = /(?:\/|^)\.(?=\/)/g,
            a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,
            s = {
                buildAbsoluteURL: function(t, e, r) {
                    if (r = r || {},
                    t = t.trim(),
                    !(e = e.trim())) {
                        if (!r.alwaysNormalize)
                            return t;
                        var n = s.parseURL(t);
                        if (!n)
                            throw new Error("Error trying to parse base URL.");
                        return n.path = s.normalizePath(n.path),
                        s.buildURLFromParts(n)
                    }
                    var a = s.parseURL(e);
                    if (!a)
                        throw new Error("Error trying to parse relative URL.");
                    if (a.scheme)
                        return r.alwaysNormalize ? (a.path = s.normalizePath(a.path),
                        s.buildURLFromParts(a)) : e;
                    var o = s.parseURL(t);
                    if (!o)
                        throw new Error("Error trying to parse base URL.");
                    if (!o.netLoc && o.path && "/" !== o.path[0]) {
                        var l = i.exec(o.path);
                        o.netLoc = l[1],
                        o.path = l[2]
                    }
                    o.netLoc && !o.path && (o.path = "/");
                    var u = {
                        scheme: o.scheme,
                        netLoc: a.netLoc,
                        path: null,
                        params: a.params,
                        query: a.query,
                        fragment: a.fragment
                    };
                    if (!a.netLoc && (u.netLoc = o.netLoc,
                    "/" !== a.path[0]))
                        if (a.path) {
                            var h = o.path
                              , d = h.substring(0, h.lastIndexOf("/") + 1) + a.path;
                            u.path = s.normalizePath(d)
                        } else
                            u.path = o.path,
                            a.params || (u.params = o.params,
                            a.query || (u.query = o.query));
                    return null === u.path && (u.path = r.alwaysNormalize ? s.normalizePath(a.path) : a.path),
                    s.buildURLFromParts(u)
                },
                parseURL: function(t) {
                    var e = r.exec(t);
                    return e ? {
                        scheme: e[1] || "",
                        netLoc: e[2] || "",
                        path: e[3] || "",
                        params: e[4] || "",
                        query: e[5] || "",
                        fragment: e[6] || ""
                    } : null
                },
                normalizePath: function(t) {
                    for (t = t.split("").reverse().join("").replace(n, ""); t.length !== (t = t.replace(a, "")).length; )
                        ;
                    return t.split("").reverse().join("")
                },
                buildURLFromParts: function(t) {
                    return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
                }
            },
            t.exports = s
        }(m);
        var p = m.exports
          , y = Number.isFinite || function(t) {
            return "number" == typeof t && isFinite(t)
        }
          , E = Number.isSafeInteger || function(t) {
            return "number" == typeof t && Math.abs(t) <= T
        }
          , T = Number.MAX_SAFE_INTEGER || 9007199254740991
          , S = function(t) {
            return t.MEDIA_ATTACHING = "hlsMediaAttaching",
            t.MEDIA_ATTACHED = "hlsMediaAttached",
            t.MEDIA_DETACHING = "hlsMediaDetaching",
            t.MEDIA_DETACHED = "hlsMediaDetached",
            t.BUFFER_RESET = "hlsBufferReset",
            t.BUFFER_CODECS = "hlsBufferCodecs",
            t.BUFFER_CREATED = "hlsBufferCreated",
            t.BUFFER_APPENDING = "hlsBufferAppending",
            t.BUFFER_APPENDED = "hlsBufferAppended",
            t.BUFFER_EOS = "hlsBufferEos",
            t.BUFFER_FLUSHING = "hlsBufferFlushing",
            t.BUFFER_FLUSHED = "hlsBufferFlushed",
            t.MANIFEST_LOADING = "hlsManifestLoading",
            t.MANIFEST_LOADED = "hlsManifestLoaded",
            t.MANIFEST_PARSED = "hlsManifestParsed",
            t.LEVEL_SWITCHING = "hlsLevelSwitching",
            t.LEVEL_SWITCHED = "hlsLevelSwitched",
            t.LEVEL_LOADING = "hlsLevelLoading",
            t.LEVEL_LOADED = "hlsLevelLoaded",
            t.LEVEL_UPDATED = "hlsLevelUpdated",
            t.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated",
            t.LEVELS_UPDATED = "hlsLevelsUpdated",
            t.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated",
            t.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching",
            t.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched",
            t.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading",
            t.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded",
            t.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated",
            t.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared",
            t.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch",
            t.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading",
            t.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded",
            t.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed",
            t.CUES_PARSED = "hlsCuesParsed",
            t.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound",
            t.INIT_PTS_FOUND = "hlsInitPtsFound",
            t.FRAG_LOADING = "hlsFragLoading",
            t.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted",
            t.FRAG_LOADED = "hlsFragLoaded",
            t.FRAG_DECRYPTED = "hlsFragDecrypted",
            t.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment",
            t.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata",
            t.FRAG_PARSING_METADATA = "hlsFragParsingMetadata",
            t.FRAG_PARSED = "hlsFragParsed",
            t.FRAG_BUFFERED = "hlsFragBuffered",
            t.FRAG_CHANGED = "hlsFragChanged",
            t.FPS_DROP = "hlsFpsDrop",
            t.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping",
            t.MAX_AUTO_LEVEL_UPDATED = "hlsMaxAutoLevelUpdated",
            t.ERROR = "hlsError",
            t.DESTROYING = "hlsDestroying",
            t.KEY_LOADING = "hlsKeyLoading",
            t.KEY_LOADED = "hlsKeyLoaded",
            t.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached",
            t.BACK_BUFFER_REACHED = "hlsBackBufferReached",
            t.STEERING_MANIFEST_LOADED = "hlsSteeringManifestLoaded",
            t
        }({})
          , L = function(t) {
            return t.NETWORK_ERROR = "networkError",
            t.MEDIA_ERROR = "mediaError",
            t.KEY_SYSTEM_ERROR = "keySystemError",
            t.MUX_ERROR = "muxError",
            t.OTHER_ERROR = "otherError",
            t
        }({})
          , A = function(t) {
            return t.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys",
            t.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess",
            t.KEY_SYSTEM_NO_SESSION = "keySystemNoSession",
            t.KEY_SYSTEM_NO_CONFIGURED_LICENSE = "keySystemNoConfiguredLicense",
            t.KEY_SYSTEM_LICENSE_REQUEST_FAILED = "keySystemLicenseRequestFailed",
            t.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED = "keySystemServerCertificateRequestFailed",
            t.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED = "keySystemServerCertificateUpdateFailed",
            t.KEY_SYSTEM_SESSION_UPDATE_FAILED = "keySystemSessionUpdateFailed",
            t.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED = "keySystemStatusOutputRestricted",
            t.KEY_SYSTEM_STATUS_INTERNAL_ERROR = "keySystemStatusInternalError",
            t.MANIFEST_LOAD_ERROR = "manifestLoadError",
            t.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut",
            t.MANIFEST_PARSING_ERROR = "manifestParsingError",
            t.MANIFEST_INCOMPATIBLE_CODECS_ERROR = "manifestIncompatibleCodecsError",
            t.LEVEL_EMPTY_ERROR = "levelEmptyError",
            t.LEVEL_LOAD_ERROR = "levelLoadError",
            t.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut",
            t.LEVEL_PARSING_ERROR = "levelParsingError",
            t.LEVEL_SWITCH_ERROR = "levelSwitchError",
            t.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError",
            t.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut",
            t.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError",
            t.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut",
            t.FRAG_LOAD_ERROR = "fragLoadError",
            t.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut",
            t.FRAG_DECRYPT_ERROR = "fragDecryptError",
            t.FRAG_PARSING_ERROR = "fragParsingError",
            t.FRAG_GAP = "fragGap",
            t.REMUX_ALLOC_ERROR = "remuxAllocError",
            t.KEY_LOAD_ERROR = "keyLoadError",
            t.KEY_LOAD_TIMEOUT = "keyLoadTimeOut",
            t.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError",
            t.BUFFER_INCOMPATIBLE_CODECS_ERROR = "bufferIncompatibleCodecsError",
            t.BUFFER_APPEND_ERROR = "bufferAppendError",
            t.BUFFER_APPENDING_ERROR = "bufferAppendingError",
            t.BUFFER_STALLED_ERROR = "bufferStalledError",
            t.BUFFER_FULL_ERROR = "bufferFullError",
            t.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole",
            t.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall",
            t.INTERNAL_EXCEPTION = "internalException",
            t.INTERNAL_ABORTED = "aborted",
            t.UNKNOWN = "unknown",
            t
        }({})
          , R = function() {}
          , k = {
            trace: R,
            debug: R,
            log: R,
            warn: R,
            info: R,
            error: R
        }
          , b = k;
        function D(t) {
            for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                r[i - 1] = arguments[i];
            r.forEach((function(e) {
                b[e] = t[e] ? t[e].bind(t) : function(t) {
                    var e = self.console[t];
                    return e ? e.bind(self.console, "[" + t + "] >") : R
                }(e)
            }
            ))
        }
        function I(t, e) {
            if ("object" == typeof console && !0 === t || "object" == typeof t) {
                D(t, "debug", "log", "info", "warn", "error");
                try {
                    b.log('Debug logs enabled for "' + e + '" in hls.js version 1.5.3')
                } catch (t) {
                    b = k
                }
            } else
                b = k
        }
        var w = b
          , C = /^(\d+)x(\d+)$/
          , _ = /(.+?)=(".*?"|.*?)(?:,|$)/g
          , x = function() {
            function t(e) {
                "string" == typeof e && (e = t.parseAttrList(e)),
                o(this, e)
            }
            var e = t.prototype;
            return e.decimalInteger = function(t) {
                var e = parseInt(this[t], 10);
                return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e
            }
            ,
            e.hexadecimalInteger = function(t) {
                if (this[t]) {
                    var e = (this[t] || "0x").slice(2);
                    e = (1 & e.length ? "0" : "") + e;
                    for (var r = new Uint8Array(e.length / 2), i = 0; i < e.length / 2; i++)
                        r[i] = parseInt(e.slice(2 * i, 2 * i + 2), 16);
                    return r
                }
                return null
            }
            ,
            e.hexadecimalIntegerAsNumber = function(t) {
                var e = parseInt(this[t], 16);
                return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e
            }
            ,
            e.decimalFloatingPoint = function(t) {
                return parseFloat(this[t])
            }
            ,
            e.optionalFloat = function(t, e) {
                var r = this[t];
                return r ? parseFloat(r) : e
            }
            ,
            e.enumeratedString = function(t) {
                return this[t]
            }
            ,
            e.bool = function(t) {
                return "YES" === this[t]
            }
            ,
            e.decimalResolution = function(t) {
                var e = C.exec(this[t]);
                if (null !== e)
                    return {
                        width: parseInt(e[1], 10),
                        height: parseInt(e[2], 10)
                    }
            }
            ,
            t.parseAttrList = function(t) {
                var e, r = {};
                for (_.lastIndex = 0; null !== (e = _.exec(t)); ) {
                    var i = e[2];
                    0 === i.indexOf('"') && i.lastIndexOf('"') === i.length - 1 && (i = i.slice(1, -1)),
                    r[e[1].trim()] = i
                }
                return r
            }
            ,
            s(t, [{
                key: "clientAttrs",
                get: function() {
                    return Object.keys(this).filter((function(t) {
                        return "X-" === t.substring(0, 2)
                    }
                    ))
                }
            }]),
            t
        }();
        function P(t) {
            return "SCTE35-OUT" === t || "SCTE35-IN" === t
        }
        var F = function() {
            function t(t, e) {
                if (this.attr = void 0,
                this._startDate = void 0,
                this._endDate = void 0,
                this._badValueForSameId = void 0,
                e) {
                    var r = e.attr;
                    for (var i in r)
                        if (Object.prototype.hasOwnProperty.call(t, i) && t[i] !== r[i]) {
                            w.warn('DATERANGE tag attribute: "' + i + '" does not match for tags with ID: "' + t.ID + '"'),
                            this._badValueForSameId = i;
                            break
                        }
                    t = o(new x({}), r, t)
                }
                if (this.attr = t,
                this._startDate = new Date(t["START-DATE"]),
                "END-DATE"in this.attr) {
                    var n = new Date(this.attr["END-DATE"]);
                    y(n.getTime()) && (this._endDate = n)
                }
            }
            return s(t, [{
                key: "id",
                get: function() {
                    return this.attr.ID
                }
            }, {
                key: "class",
                get: function() {
                    return this.attr.CLASS
                }
            }, {
                key: "startDate",
                get: function() {
                    return this._startDate
                }
            }, {
                key: "endDate",
                get: function() {
                    if (this._endDate)
                        return this._endDate;
                    var t = this.duration;
                    return null !== t ? new Date(this._startDate.getTime() + 1e3 * t) : null
                }
            }, {
                key: "duration",
                get: function() {
                    if ("DURATION"in this.attr) {
                        var t = this.attr.decimalFloatingPoint("DURATION");
                        if (y(t))
                            return t
                    } else if (this._endDate)
                        return (this._endDate.getTime() - this._startDate.getTime()) / 1e3;
                    return null
                }
            }, {
                key: "plannedDuration",
                get: function() {
                    return "PLANNED-DURATION"in this.attr ? this.attr.decimalFloatingPoint("PLANNED-DURATION") : null
                }
            }, {
                key: "endOnNext",
                get: function() {
                    return this.attr.bool("END-ON-NEXT")
                }
            }, {
                key: "isValid",
                get: function() {
                    return !!this.id && !this._badValueForSameId && y(this.startDate.getTime()) && (null === this.duration || this.duration >= 0) && (!this.endOnNext || !!this.class)
                }
            }]),
            t
        }()
          , M = function() {
            this.aborted = !1,
            this.loaded = 0,
            this.retry = 0,
            this.total = 0,
            this.chunkCount = 0,
            this.bwEstimate = 0,
            this.loading = {
                start: 0,
                first: 0,
                end: 0
            },
            this.parsing = {
                start: 0,
                end: 0
            },
            this.buffering = {
                start: 0,
                first: 0,
                end: 0
            }
        }
          , O = "audio"
          , N = "video"
          , U = "audiovideo"
          , B = function() {
            function t(t) {
                var e;
                this._byteRange = null,
                this._url = null,
                this.baseurl = void 0,
                this.relurl = void 0,
                this.elementaryStreams = ((e = {})[O] = null,
                e[N] = null,
                e[U] = null,
                e),
                this.baseurl = t
            }
            return t.prototype.setByteRange = function(t, e) {
                var r, i = t.split("@", 2);
                r = 1 === i.length ? (null == e ? void 0 : e.byteRangeEndOffset) || 0 : parseInt(i[1]),
                this._byteRange = [r, parseInt(i[0]) + r]
            }
            ,
            s(t, [{
                key: "byteRange",
                get: function() {
                    return this._byteRange ? this._byteRange : []
                }
            }, {
                key: "byteRangeStartOffset",
                get: function() {
                    return this.byteRange[0]
                }
            }, {
                key: "byteRangeEndOffset",
                get: function() {
                    return this.byteRange[1]
                }
            }, {
                key: "url",
                get: function() {
                    return !this._url && this.baseurl && this.relurl && (this._url = p.buildAbsoluteURL(this.baseurl, this.relurl, {
                        alwaysNormalize: !0
                    })),
                    this._url || ""
                },
                set: function(t) {
                    this._url = t
                }
            }]),
            t
        }()
          , G = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this, r) || this)._decryptdata = null,
                i.rawProgramDateTime = null,
                i.programDateTime = null,
                i.tagList = [],
                i.duration = 0,
                i.sn = 0,
                i.levelkeys = void 0,
                i.type = void 0,
                i.loader = null,
                i.keyLoader = null,
                i.level = -1,
                i.cc = 0,
                i.startPTS = void 0,
                i.endPTS = void 0,
                i.startDTS = void 0,
                i.endDTS = void 0,
                i.start = 0,
                i.deltaPTS = void 0,
                i.maxStartPTS = void 0,
                i.minEndPTS = void 0,
                i.stats = new M,
                i.data = void 0,
                i.bitrateTest = !1,
                i.title = null,
                i.initSegment = null,
                i.endList = void 0,
                i.gap = void 0,
                i.urlId = 0,
                i.type = e,
                i
            }
            l(e, t);
            var r = e.prototype;
            return r.setKeyFormat = function(t) {
                if (this.levelkeys) {
                    var e = this.levelkeys[t];
                    e && !this._decryptdata && (this._decryptdata = e.getDecryptData(this.sn))
                }
            }
            ,
            r.abortRequests = function() {
                var t, e;
                null == (t = this.loader) || t.abort(),
                null == (e = this.keyLoader) || e.abort()
            }
            ,
            r.setElementaryStreamInfo = function(t, e, r, i, n, a) {
                void 0 === a && (a = !1);
                var s = this.elementaryStreams
                  , o = s[t];
                o ? (o.startPTS = Math.min(o.startPTS, e),
                o.endPTS = Math.max(o.endPTS, r),
                o.startDTS = Math.min(o.startDTS, i),
                o.endDTS = Math.max(o.endDTS, n)) : s[t] = {
                    startPTS: e,
                    endPTS: r,
                    startDTS: i,
                    endDTS: n,
                    partial: a
                }
            }
            ,
            r.clearElementaryStreamInfo = function() {
                var t = this.elementaryStreams;
                t[O] = null,
                t[N] = null,
                t[U] = null
            }
            ,
            s(e, [{
                key: "decryptdata",
                get: function() {
                    if (!this.levelkeys && !this._decryptdata)
                        return null;
                    if (!this._decryptdata && this.levelkeys && !this.levelkeys.NONE) {
                        var t = this.levelkeys.identity;
                        if (t)
                            this._decryptdata = t.getDecryptData(this.sn);
                        else {
                            var e = Object.keys(this.levelkeys);
                            if (1 === e.length)
                                return this._decryptdata = this.levelkeys[e[0]].getDecryptData(this.sn)
                        }
                    }
                    return this._decryptdata
                }
            }, {
                key: "end",
                get: function() {
                    return this.start + this.duration
                }
            }, {
                key: "endProgramDateTime",
                get: function() {
                    if (null === this.programDateTime)
                        return null;
                    if (!y(this.programDateTime))
                        return null;
                    var t = y(this.duration) ? this.duration : 0;
                    return this.programDateTime + 1e3 * t
                }
            }, {
                key: "encrypted",
                get: function() {
                    var t;
                    if (null != (t = this._decryptdata) && t.encrypted)
                        return !0;
                    if (this.levelkeys) {
                        var e = Object.keys(this.levelkeys)
                          , r = e.length;
                        if (r > 1 || 1 === r && this.levelkeys[e[0]].encrypted)
                            return !0
                    }
                    return !1
                }
            }]),
            e
        }(B)
          , K = function(t) {
            function e(e, r, i, n, a) {
                var s;
                (s = t.call(this, i) || this).fragOffset = 0,
                s.duration = 0,
                s.gap = !1,
                s.independent = !1,
                s.relurl = void 0,
                s.fragment = void 0,
                s.index = void 0,
                s.stats = new M,
                s.duration = e.decimalFloatingPoint("DURATION"),
                s.gap = e.bool("GAP"),
                s.independent = e.bool("INDEPENDENT"),
                s.relurl = e.enumeratedString("URI"),
                s.fragment = r,
                s.index = n;
                var o = e.enumeratedString("BYTERANGE");
                return o && s.setByteRange(o, a),
                a && (s.fragOffset = a.fragOffset + a.duration),
                s
            }
            return l(e, t),
            s(e, [{
                key: "start",
                get: function() {
                    return this.fragment.start + this.fragOffset
                }
            }, {
                key: "end",
                get: function() {
                    return this.start + this.duration
                }
            }, {
                key: "loaded",
                get: function() {
                    var t = this.elementaryStreams;
                    return !!(t.audio || t.video || t.audiovideo)
                }
            }]),
            e
        }(B)
          , H = function() {
            function t(t) {
                this.PTSKnown = !1,
                this.alignedSliding = !1,
                this.averagetargetduration = void 0,
                this.endCC = 0,
                this.endSN = 0,
                this.fragments = void 0,
                this.fragmentHint = void 0,
                this.partList = null,
                this.dateRanges = void 0,
                this.live = !0,
                this.ageHeader = 0,
                this.advancedDateTime = void 0,
                this.updated = !0,
                this.advanced = !0,
                this.availabilityDelay = void 0,
                this.misses = 0,
                this.startCC = 0,
                this.startSN = 0,
                this.startTimeOffset = null,
                this.targetduration = 0,
                this.totalduration = 0,
                this.type = null,
                this.url = void 0,
                this.m3u8 = "",
                this.version = null,
                this.canBlockReload = !1,
                this.canSkipUntil = 0,
                this.canSkipDateRanges = !1,
                this.skippedSegments = 0,
                this.recentlyRemovedDateranges = void 0,
                this.partHoldBack = 0,
                this.holdBack = 0,
                this.partTarget = 0,
                this.preloadHint = void 0,
                this.renditionReports = void 0,
                this.tuneInGoal = 0,
                this.deltaUpdateFailed = void 0,
                this.driftStartTime = 0,
                this.driftEndTime = 0,
                this.driftStart = 0,
                this.driftEnd = 0,
                this.encryptedFragments = void 0,
                this.playlistParsingError = null,
                this.variableList = null,
                this.hasVariableRefs = !1,
                this.fragments = [],
                this.encryptedFragments = [],
                this.dateRanges = {},
                this.url = t
            }
            return t.prototype.reloaded = function(t) {
                if (!t)
                    return this.advanced = !0,
                    void (this.updated = !0);
                var e = this.lastPartSn - t.lastPartSn
                  , r = this.lastPartIndex - t.lastPartIndex;
                this.updated = this.endSN !== t.endSN || !!r || !!e || !this.live,
                this.advanced = this.endSN > t.endSN || e > 0 || 0 === e && r > 0,
                this.updated || this.advanced ? this.misses = Math.floor(.6 * t.misses) : this.misses = t.misses + 1,
                this.availabilityDelay = t.availabilityDelay
            }
            ,
            s(t, [{
                key: "hasProgramDateTime",
                get: function() {
                    return !!this.fragments.length && y(this.fragments[this.fragments.length - 1].programDateTime)
                }
            }, {
                key: "levelTargetDuration",
                get: function() {
                    return this.averagetargetduration || this.targetduration || 10
                }
            }, {
                key: "drift",
                get: function() {
                    var t = this.driftEndTime - this.driftStartTime;
                    return t > 0 ? 1e3 * (this.driftEnd - this.driftStart) / t : 1
                }
            }, {
                key: "edge",
                get: function() {
                    return this.partEnd || this.fragmentEnd
                }
            }, {
                key: "partEnd",
                get: function() {
                    var t;
                    return null != (t = this.partList) && t.length ? this.partList[this.partList.length - 1].end : this.fragmentEnd
                }
            }, {
                key: "fragmentEnd",
                get: function() {
                    var t;
                    return null != (t = this.fragments) && t.length ? this.fragments[this.fragments.length - 1].end : 0
                }
            }, {
                key: "age",
                get: function() {
                    return this.advancedDateTime ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3 : 0
                }
            }, {
                key: "lastPartIndex",
                get: function() {
                    var t;
                    return null != (t = this.partList) && t.length ? this.partList[this.partList.length - 1].index : -1
                }
            }, {
                key: "lastPartSn",
                get: function() {
                    var t;
                    return null != (t = this.partList) && t.length ? this.partList[this.partList.length - 1].fragment.sn : this.endSN
                }
            }]),
            t
        }();
        function V(t) {
            return Uint8Array.from(atob(t), (function(t) {
                return t.charCodeAt(0)
            }
            ))
        }
        function Y(t) {
            var e, r, i = t.split(":"), n = null;
            if ("data" === i[0] && 2 === i.length) {
                var a = i[1].split(";")
                  , s = a[a.length - 1].split(",");
                if (2 === s.length) {
                    var o = "base64" === s[0]
                      , l = s[1];
                    o ? (a.splice(-1, 1),
                    n = V(l)) : (e = W(l).subarray(0, 16),
                    (r = new Uint8Array(16)).set(e, 16 - e.length),
                    n = r)
                }
            }
            return n
        }
        function W(t) {
            return Uint8Array.from(unescape(encodeURIComponent(t)), (function(t) {
                return t.charCodeAt(0)
            }
            ))
        }
        var j = "undefined" != typeof self ? self : void 0
          , q = {
            CLEARKEY: "org.w3.clearkey",
            FAIRPLAY: "com.apple.fps",
            PLAYREADY: "com.microsoft.playready",
            WIDEVINE: "com.widevine.alpha"
        }
          , X = "org.w3.clearkey"
          , z = "com.apple.streamingkeydelivery"
          , Q = "com.microsoft.playready"
          , J = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
        function $(t) {
            switch (t) {
            case z:
                return q.FAIRPLAY;
            case Q:
                return q.PLAYREADY;
            case J:
                return q.WIDEVINE;
            case X:
                return q.CLEARKEY
            }
        }
        var Z = "edef8ba979d64acea3c827dcd51d21ed";
        function tt(t) {
            switch (t) {
            case q.FAIRPLAY:
                return z;
            case q.PLAYREADY:
                return Q;
            case q.WIDEVINE:
                return J;
            case q.CLEARKEY:
                return X
            }
        }
        function et(t) {
            var e = t.drmSystems
              , r = t.widevineLicenseUrl
              , i = e ? [q.FAIRPLAY, q.WIDEVINE, q.PLAYREADY, q.CLEARKEY].filter((function(t) {
                return !!e[t]
            }
            )) : [];
            return !i[q.WIDEVINE] && r && i.push(q.WIDEVINE),
            i
        }
        var rt, it = null != j && null != (rt = j.navigator) && rt.requestMediaKeySystemAccess ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator) : null;
        function nt(t, e, r) {
            return Uint8Array.prototype.slice ? t.slice(e, r) : new Uint8Array(Array.prototype.slice.call(t, e, r))
        }
        var at, st = function(t, e) {
            return e + 10 <= t.length && 73 === t[e] && 68 === t[e + 1] && 51 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128
        }, ot = function(t, e) {
            return e + 10 <= t.length && 51 === t[e] && 68 === t[e + 1] && 73 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128
        }, lt = function(t, e) {
            for (var r = e, i = 0; st(t, e); )
                i += 10,
                i += ut(t, e + 6),
                ot(t, e + 10) && (i += 10),
                e += i;
            if (i > 0)
                return t.subarray(r, r + i)
        }, ut = function(t, e) {
            var r = 0;
            return r = (127 & t[e]) << 21,
            r |= (127 & t[e + 1]) << 14,
            r |= (127 & t[e + 2]) << 7,
            r |= 127 & t[e + 3]
        }, ht = function(t, e) {
            return st(t, e) && ut(t, e + 6) + 10 <= t.length - e
        }, dt = function(t) {
            for (var e = gt(t), r = 0; r < e.length; r++) {
                var i = e[r];
                if (ct(i))
                    return Et(i)
            }
        }, ct = function(t) {
            return t && "PRIV" === t.key && "com.apple.streaming.transportStreamTimestamp" === t.info
        }, ft = function(t) {
            var e = String.fromCharCode(t[0], t[1], t[2], t[3])
              , r = ut(t, 4);
            return {
                type: e,
                size: r,
                data: t.subarray(10, 10 + r)
            }
        }, gt = function(t) {
            for (var e = 0, r = []; st(t, e); ) {
                for (var i = ut(t, e + 6), n = (e += 10) + i; e + 8 < n; ) {
                    var a = ft(t.subarray(e))
                      , s = vt(a);
                    s && r.push(s),
                    e += a.size + 10
                }
                ot(t, e) && (e += 10)
            }
            return r
        }, vt = function(t) {
            return "PRIV" === t.type ? mt(t) : "W" === t.type[0] ? yt(t) : pt(t)
        }, mt = function(t) {
            if (!(t.size < 2)) {
                var e = Tt(t.data, !0)
                  , r = new Uint8Array(t.data.subarray(e.length + 1));
                return {
                    key: t.type,
                    info: e,
                    data: r.buffer
                }
            }
        }, pt = function(t) {
            if (!(t.size < 2)) {
                if ("TXXX" === t.type) {
                    var e = 1
                      , r = Tt(t.data.subarray(e), !0);
                    e += r.length + 1;
                    var i = Tt(t.data.subarray(e));
                    return {
                        key: t.type,
                        info: r,
                        data: i
                    }
                }
                var n = Tt(t.data.subarray(1));
                return {
                    key: t.type,
                    data: n
                }
            }
        }, yt = function(t) {
            if ("WXXX" === t.type) {
                if (t.size < 2)
                    return;
                var e = 1
                  , r = Tt(t.data.subarray(e), !0);
                e += r.length + 1;
                var i = Tt(t.data.subarray(e));
                return {
                    key: t.type,
                    info: r,
                    data: i
                }
            }
            var n = Tt(t.data);
            return {
                key: t.type,
                data: n
            }
        }, Et = function(t) {
            if (8 === t.data.byteLength) {
                var e = new Uint8Array(t.data)
                  , r = 1 & e[3]
                  , i = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7];
                return i /= 45,
                r && (i += 47721858.84),
                Math.round(i)
            }
        }, Tt = function(t, e) {
            void 0 === e && (e = !1);
            var r = St();
            if (r) {
                var i = r.decode(t);
                if (e) {
                    var n = i.indexOf("\0");
                    return -1 !== n ? i.substring(0, n) : i
                }
                return i.replace(/\0/g, "")
            }
            for (var a, s, o, l = t.length, u = "", h = 0; h < l; ) {
                if (0 === (a = t[h++]) && e)
                    return u;
                if (0 !== a && 3 !== a)
                    switch (a >> 4) {
                    case 0:
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        u += String.fromCharCode(a);
                        break;
                    case 12:
                    case 13:
                        s = t[h++],
                        u += String.fromCharCode((31 & a) << 6 | 63 & s);
                        break;
                    case 14:
                        s = t[h++],
                        o = t[h++],
                        u += String.fromCharCode((15 & a) << 12 | (63 & s) << 6 | (63 & o) << 0)
                    }
            }
            return u
        };
        function St() {
            if (!navigator.userAgent.includes("PlayStation 4"))
                return at || void 0 === self.TextDecoder || (at = new self.TextDecoder("utf-8")),
                at
        }
        var Lt = function(t) {
            for (var e = "", r = 0; r < t.length; r++) {
                var i = t[r].toString(16);
                i.length < 2 && (i = "0" + i),
                e += i
            }
            return e
        }
          , At = Math.pow(2, 32) - 1
          , Rt = [].push
          , kt = {
            video: 1,
            audio: 2,
            id3: 3,
            text: 4
        };
        function bt(t) {
            return String.fromCharCode.apply(null, t)
        }
        function Dt(t, e) {
            var r = t[e] << 8 | t[e + 1];
            return r < 0 ? 65536 + r : r
        }
        function It(t, e) {
            var r = wt(t, e);
            return r < 0 ? 4294967296 + r : r
        }
        function wt(t, e) {
            return t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]
        }
        function Ct(t, e, r) {
            t[e] = r >> 24,
            t[e + 1] = r >> 16 & 255,
            t[e + 2] = r >> 8 & 255,
            t[e + 3] = 255 & r
        }
        function _t(t, e) {
            var r = [];
            if (!e.length)
                return r;
            for (var i = t.byteLength, n = 0; n < i; ) {
                var a = It(t, n)
                  , s = a > 1 ? n + a : i;
                if (bt(t.subarray(n + 4, n + 8)) === e[0])
                    if (1 === e.length)
                        r.push(t.subarray(n + 8, s));
                    else {
                        var o = _t(t.subarray(n + 8, s), e.slice(1));
                        o.length && Rt.apply(r, o)
                    }
                n = s
            }
            return r
        }
        function xt(t) {
            var e = []
              , r = t[0]
              , i = 8
              , n = It(t, i);
            i += 4,
            i += 0 === r ? 8 : 16,
            i += 2;
            var a = t.length + 0
              , s = Dt(t, i);
            i += 2;
            for (var o = 0; o < s; o++) {
                var l = i
                  , u = It(t, l);
                l += 4;
                var h = 2147483647 & u;
                if (1 == (2147483648 & u) >>> 31)
                    return w.warn("SIDX has hierarchical references (not supported)"),
                    null;
                var d = It(t, l);
                l += 4,
                e.push({
                    referenceSize: h,
                    subsegmentDuration: d,
                    info: {
                        duration: d / n,
                        start: a,
                        end: a + h - 1
                    }
                }),
                a += h,
                i = l += 4
            }
            return {
                earliestPresentationTime: 0,
                timescale: n,
                version: r,
                referencesCount: s,
                references: e
            }
        }
        function Pt(t) {
            for (var e = [], r = _t(t, ["moov", "trak"]), n = 0; n < r.length; n++) {
                var a = r[n]
                  , s = _t(a, ["tkhd"])[0];
                if (s) {
                    var o = s[0]
                      , l = It(s, 0 === o ? 12 : 20)
                      , u = _t(a, ["mdia", "mdhd"])[0];
                    if (u) {
                        var h = It(u, 0 === (o = u[0]) ? 12 : 20)
                          , d = _t(a, ["mdia", "hdlr"])[0];
                        if (d) {
                            var c = bt(d.subarray(8, 12))
                              , f = {
                                soun: O,
                                vide: N
                            }[c];
                            if (f) {
                                var g = Ft(_t(a, ["mdia", "minf", "stbl", "stsd"])[0]);
                                e[l] = {
                                    timescale: h,
                                    type: f
                                },
                                e[f] = i({
                                    timescale: h,
                                    id: l
                                }, g)
                            }
                        }
                    }
                }
            }
            return _t(t, ["moov", "mvex", "trex"]).forEach((function(t) {
                var r = It(t, 4)
                  , i = e[r];
                i && (i.default = {
                    duration: It(t, 12),
                    flags: It(t, 20)
                })
            }
            )),
            e
        }
        function Ft(t) {
            var e = t.subarray(8)
              , r = e.subarray(86)
              , i = bt(e.subarray(4, 8))
              , n = i
              , a = "enca" === i || "encv" === i;
            if (a) {
                var s = _t(e, [i])[0];
                _t(s.subarray("enca" === i ? 28 : 78), ["sinf"]).forEach((function(t) {
                    var e = _t(t, ["schm"])[0];
                    if (e) {
                        var r = bt(e.subarray(4, 8));
                        if ("cbcs" === r || "cenc" === r) {
                            var i = _t(t, ["frma"])[0];
                            i && (n = bt(i))
                        }
                    }
                }
                ))
            }
            switch (n) {
            case "avc1":
            case "avc2":
            case "avc3":
            case "avc4":
                var o = _t(r, ["avcC"])[0];
                n += "." + Ot(o[1]) + Ot(o[2]) + Ot(o[3]);
                break;
            case "mp4a":
                var l = _t(e, [i])[0]
                  , u = _t(l.subarray(28), ["esds"])[0];
                if (u && u.length > 12) {
                    var h = 4;
                    if (3 !== u[h++])
                        break;
                    h = Mt(u, h),
                    h += 2;
                    var d = u[h++];
                    if (128 & d && (h += 2),
                    64 & d && (h += u[h++]),
                    4 !== u[h++])
                        break;
                    h = Mt(u, h);
                    var c = u[h++];
                    if (64 !== c)
                        break;
                    if (n += "." + Ot(c),
                    h += 12,
                    5 !== u[h++])
                        break;
                    h = Mt(u, h);
                    var f = u[h++]
                      , g = (248 & f) >> 3;
                    31 === g && (g += 1 + ((7 & f) << 3) + ((224 & u[h]) >> 5)),
                    n += "." + g
                }
                break;
            case "hvc1":
            case "hev1":
                var v = _t(r, ["hvcC"])[0]
                  , m = v[1]
                  , p = ["", "A", "B", "C"][m >> 6]
                  , y = 31 & m
                  , E = It(v, 2)
                  , T = (32 & m) >> 5 ? "H" : "L"
                  , S = v[12]
                  , L = v.subarray(6, 12);
                n += "." + p + y,
                n += "." + E.toString(16).toUpperCase(),
                n += "." + T + S;
                for (var A = "", R = L.length; R--; ) {
                    var k = L[R];
                    (k || A) && (A = "." + k.toString(16).toUpperCase() + A)
                }
                n += A;
                break;
            case "dvh1":
            case "dvhe":
                var b = _t(r, ["dvcC"])[0]
                  , D = b[2] >> 1 & 127
                  , I = b[2] << 5 & 32 | b[3] >> 3 & 31;
                n += "." + Nt(D) + "." + Nt(I);
                break;
            case "vp09":
                var w = _t(r, ["vpcC"])[0]
                  , C = w[4]
                  , _ = w[5]
                  , x = w[6] >> 4 & 15;
                n += "." + Nt(C) + "." + Nt(_) + "." + Nt(x);
                break;
            case "av01":
                var P = _t(r, ["av1C"])[0]
                  , F = P[1] >>> 5
                  , M = 31 & P[1]
                  , O = P[2] >>> 7 ? "H" : "M"
                  , N = (64 & P[2]) >> 6
                  , U = (32 & P[2]) >> 5
                  , B = 2 === F && N ? U ? 12 : 10 : N ? 10 : 8
                  , G = (16 & P[2]) >> 4
                  , K = (8 & P[2]) >> 3
                  , H = (4 & P[2]) >> 2
                  , V = 3 & P[2];
                n += "." + F + "." + Nt(M) + O + "." + Nt(B) + "." + G + "." + K + H + V + "." + Nt(1) + "." + Nt(1) + "." + Nt(1) + ".0"
            }
            return {
                codec: n,
                encrypted: a
            }
        }
        function Mt(t, e) {
            for (var r = e + 5; 128 & t[e++] && e < r; )
                ;
            return e
        }
        function Ot(t) {
            return ("0" + t.toString(16).toUpperCase()).slice(-2)
        }
        function Nt(t) {
            return (t < 10 ? "0" : "") + t
        }
        function Ut(t) {
            var e = _t(t, ["schm"])[0];
            if (e) {
                var r = bt(e.subarray(4, 8));
                if ("cbcs" === r || "cenc" === r)
                    return _t(t, ["schi", "tenc"])[0]
            }
            return w.error("[eme] missing 'schm' box"),
            null
        }
        function Bt(t) {
            var e = It(t, 0)
              , r = 8;
            1 & e && (r += 4),
            4 & e && (r += 4);
            for (var i = 0, n = It(t, 4), a = 0; a < n; a++)
                256 & e && (i += It(t, r),
                r += 4),
                512 & e && (r += 4),
                1024 & e && (r += 4),
                2048 & e && (r += 4);
            return i
        }
        function Gt(t, e) {
            var r = new Uint8Array(t.length + e.length);
            return r.set(t),
            r.set(e, t.length),
            r
        }
        function Kt(t, e) {
            var r = []
              , i = e.samples
              , n = e.timescale
              , a = e.id
              , s = !1;
            return _t(i, ["moof"]).map((function(o) {
                var l = o.byteOffset - 8;
                _t(o, ["traf"]).map((function(o) {
                    var u = _t(o, ["tfdt"]).map((function(t) {
                        var e = t[0]
                          , r = It(t, 4);
                        return 1 === e && (r *= Math.pow(2, 32),
                        r += It(t, 8)),
                        r / n
                    }
                    ))[0];
                    return void 0 !== u && (t = u),
                    _t(o, ["tfhd"]).map((function(u) {
                        var h = It(u, 4)
                          , d = 16777215 & It(u, 0)
                          , c = 0
                          , f = 0 != (16 & d)
                          , g = 0
                          , v = 0 != (32 & d)
                          , m = 8;
                        h === a && (0 != (1 & d) && (m += 8),
                        0 != (2 & d) && (m += 4),
                        0 != (8 & d) && (c = It(u, m),
                        m += 4),
                        f && (g = It(u, m),
                        m += 4),
                        v && (m += 4),
                        "video" === e.type && (s = function(t) {
                            if (!t)
                                return !1;
                            var e = t.indexOf(".")
                              , r = e < 0 ? t : t.substring(0, e);
                            return "hvc1" === r || "hev1" === r || "dvh1" === r || "dvhe" === r
                        }(e.codec)),
                        _t(o, ["trun"]).map((function(a) {
                            var o = a[0]
                              , u = 16777215 & It(a, 0)
                              , h = 0 != (1 & u)
                              , d = 0
                              , f = 0 != (4 & u)
                              , v = 0 != (256 & u)
                              , m = 0
                              , p = 0 != (512 & u)
                              , y = 0
                              , E = 0 != (1024 & u)
                              , T = 0 != (2048 & u)
                              , S = 0
                              , L = It(a, 4)
                              , A = 8;
                            h && (d = It(a, A),
                            A += 4),
                            f && (A += 4);
                            for (var R = d + l, k = 0; k < L; k++) {
                                if (v ? (m = It(a, A),
                                A += 4) : m = c,
                                p ? (y = It(a, A),
                                A += 4) : y = g,
                                E && (A += 4),
                                T && (S = 0 === o ? It(a, A) : wt(a, A),
                                A += 4),
                                e.type === N)
                                    for (var b = 0; b < y; ) {
                                        var D = It(i, R);
                                        Ht(s, i[R += 4]) && Vt(i.subarray(R, R + D), s ? 2 : 1, t + S / n, r),
                                        R += D,
                                        b += D + 4
                                    }
                                t += m / n
                            }
                        }
                        )))
                    }
                    ))
                }
                ))
            }
            )),
            r
        }
        function Ht(t, e) {
            if (t) {
                var r = e >> 1 & 63;
                return 39 === r || 40 === r
            }
            return 6 == (31 & e)
        }
        function Vt(t, e, r, i) {
            var n = Yt(t)
              , a = 0;
            a += e;
            for (var s = 0, o = 0, l = 0; a < n.length; ) {
                s = 0;
                do {
                    if (a >= n.length)
                        break;
                    s += l = n[a++]
                } while (255 === l);
                o = 0;
                do {
                    if (a >= n.length)
                        break;
                    o += l = n[a++]
                } while (255 === l);
                var u = n.length - a
                  , h = a;
                if (o < u)
                    a += o;
                else if (o > u) {
                    w.error("Malformed SEI payload. " + o + " is too small, only " + u + " bytes left to parse.");
                    break
                }
                if (4 === s) {
                    if (181 === n[h++]) {
                        var d = Dt(n, h);
                        if (h += 2,
                        49 === d) {
                            var c = It(n, h);
                            if (h += 4,
                            1195456820 === c) {
                                var f = n[h++];
                                if (3 === f) {
                                    var g = n[h++]
                                      , v = 64 & g
                                      , m = v ? 2 + 3 * (31 & g) : 0
                                      , p = new Uint8Array(m);
                                    if (v) {
                                        p[0] = g;
                                        for (var y = 1; y < m; y++)
                                            p[y] = n[h++]
                                    }
                                    i.push({
                                        type: f,
                                        payloadType: s,
                                        pts: r,
                                        bytes: p
                                    })
                                }
                            }
                        }
                    }
                } else if (5 === s && o > 16) {
                    for (var E = [], T = 0; T < 16; T++) {
                        var S = n[h++].toString(16);
                        E.push(1 == S.length ? "0" + S : S),
                        3 !== T && 5 !== T && 7 !== T && 9 !== T || E.push("-")
                    }
                    for (var L = o - 16, A = new Uint8Array(L), R = 0; R < L; R++)
                        A[R] = n[h++];
                    i.push({
                        payloadType: s,
                        pts: r,
                        uuid: E.join(""),
                        userData: Tt(A),
                        userDataBytes: A
                    })
                }
            }
        }
        function Yt(t) {
            for (var e = t.byteLength, r = [], i = 1; i < e - 2; )
                0 === t[i] && 0 === t[i + 1] && 3 === t[i + 2] ? (r.push(i + 2),
                i += 2) : i++;
            if (0 === r.length)
                return t;
            var n = e - r.length
              , a = new Uint8Array(n)
              , s = 0;
            for (i = 0; i < n; s++,
            i++)
                s === r[0] && (s++,
                r.shift()),
                a[i] = t[s];
            return a
        }
        function Wt(t, e, r) {
            if (16 !== t.byteLength)
                throw new RangeError("Invalid system id");
            var i, n, a;
            if (e) {
                i = 1,
                n = new Uint8Array(16 * e.length);
                for (var s = 0; s < e.length; s++) {
                    var o = e[s];
                    if (16 !== o.byteLength)
                        throw new RangeError("Invalid key");
                    n.set(o, 16 * s)
                }
            } else
                i = 0,
                n = new Uint8Array;
            i > 0 ? (a = new Uint8Array(4),
            e.length > 0 && new DataView(a.buffer).setUint32(0, e.length, !1)) : a = new Uint8Array;
            var l = new Uint8Array(4);
            return r && r.byteLength > 0 && new DataView(l.buffer).setUint32(0, r.byteLength, !1),
            function(t) {
                for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                    r[i - 1] = arguments[i];
                for (var n = r.length, a = 8, s = n; s--; )
                    a += r[s].byteLength;
                var o = new Uint8Array(a);
                for (o[0] = a >> 24 & 255,
                o[1] = a >> 16 & 255,
                o[2] = a >> 8 & 255,
                o[3] = 255 & a,
                o.set(t, 4),
                s = 0,
                a = 8; s < n; s++)
                    o.set(r[s], a),
                    a += r[s].byteLength;
                return o
            }([112, 115, 115, 104], new Uint8Array([i, 0, 0, 0]), t, a, n, l, r || new Uint8Array)
        }
        var jt = {}
          , qt = function() {
            function t(t, e, r, i, n) {
                void 0 === i && (i = [1]),
                void 0 === n && (n = null),
                this.uri = void 0,
                this.method = void 0,
                this.keyFormat = void 0,
                this.keyFormatVersions = void 0,
                this.encrypted = void 0,
                this.isCommonEncryption = void 0,
                this.iv = null,
                this.key = null,
                this.keyId = null,
                this.pssh = null,
                this.method = t,
                this.uri = e,
                this.keyFormat = r,
                this.keyFormatVersions = i,
                this.iv = n,
                this.encrypted = !!t && "NONE" !== t,
                this.isCommonEncryption = this.encrypted && "AES-128" !== t
            }
            t.clearKeyUriToKeyIdMap = function() {
                jt = {}
            }
            ;
            var e = t.prototype;
            return e.isSupported = function() {
                if (this.method) {
                    if ("AES-128" === this.method || "NONE" === this.method)
                        return !0;
                    if ("identity" === this.keyFormat)
                        return "SAMPLE-AES" === this.method;
                    switch (this.keyFormat) {
                    case z:
                    case J:
                    case Q:
                    case X:
                        return -1 !== ["ISO-23001-7", "SAMPLE-AES", "SAMPLE-AES-CENC", "SAMPLE-AES-CTR"].indexOf(this.method)
                    }
                }
                return !1
            }
            ,
            e.getDecryptData = function(e) {
                if (!this.encrypted || !this.uri)
                    return null;
                if ("AES-128" === this.method && this.uri && !this.iv) {
                    "number" != typeof e && ("AES-128" !== this.method || this.iv || w.warn('missing IV for initialization segment with method="' + this.method + '" - compliance issue'),
                    e = 0);
                    var r = function(t) {
                        for (var e = new Uint8Array(16), r = 12; r < 16; r++)
                            e[r] = t >> 8 * (15 - r) & 255;
                        return e
                    }(e);
                    return new t(this.method,this.uri,"identity",this.keyFormatVersions,r)
                }
                var i = Y(this.uri);
                if (i)
                    switch (this.keyFormat) {
                    case J:
                        this.pssh = i,
                        i.length >= 22 && (this.keyId = i.subarray(i.length - 22, i.length - 6));
                        break;
                    case Q:
                        var n = new Uint8Array([154, 4, 240, 121, 152, 64, 66, 134, 171, 146, 230, 91, 224, 136, 95, 149]);
                        this.pssh = Wt(n, null, i);
                        var a = new Uint16Array(i.buffer,i.byteOffset,i.byteLength / 2)
                          , s = String.fromCharCode.apply(null, Array.from(a))
                          , o = s.substring(s.indexOf("<"), s.length)
                          , l = (new DOMParser).parseFromString(o, "text/xml").getElementsByTagName("KID")[0];
                        if (l) {
                            var u = l.childNodes[0] ? l.childNodes[0].nodeValue : l.getAttribute("VALUE");
                            if (u) {
                                var h = V(u).subarray(0, 16);
                                !function(t) {
                                    var e = function(t, e, r) {
                                        var i = t[e];
                                        t[e] = t[r],
                                        t[r] = i
                                    };
                                    e(t, 0, 3),
                                    e(t, 1, 2),
                                    e(t, 4, 5),
                                    e(t, 6, 7)
                                }(h),
                                this.keyId = h
                            }
                        }
                        break;
                    default:
                        var d = i.subarray(0, 16);
                        if (16 !== d.length) {
                            var c = new Uint8Array(16);
                            c.set(d, 16 - d.length),
                            d = c
                        }
                        this.keyId = d
                    }
                if (!this.keyId || 16 !== this.keyId.byteLength) {
                    var f = jt[this.uri];
                    if (!f) {
                        var g = Object.keys(jt).length % Number.MAX_SAFE_INTEGER;
                        f = new Uint8Array(16),
                        new DataView(f.buffer,12,4).setUint32(0, g),
                        jt[this.uri] = f
                    }
                    this.keyId = f
                }
                return this
            }
            ,
            t
        }()
          , Xt = /\{\$([a-zA-Z0-9-_]+)\}/g;
        function zt(t) {
            return Xt.test(t)
        }
        function Qt(t, e, r) {
            if (null !== t.variableList || t.hasVariableRefs)
                for (var i = r.length; i--; ) {
                    var n = r[i]
                      , a = e[n];
                    a && (e[n] = Jt(t, a))
                }
        }
        function Jt(t, e) {
            if (null !== t.variableList || t.hasVariableRefs) {
                var r = t.variableList;
                return e.replace(Xt, (function(e) {
                    var i = e.substring(2, e.length - 1)
                      , n = null == r ? void 0 : r[i];
                    return void 0 === n ? (t.playlistParsingError || (t.playlistParsingError = new Error('Missing preceding EXT-X-DEFINE tag for Variable Reference: "' + i + '"')),
                    e) : n
                }
                ))
            }
            return e
        }
        function $t(t, e, r) {
            var i, n, a = t.variableList;
            if (a || (t.variableList = a = {}),
            "QUERYPARAM"in e) {
                i = e.QUERYPARAM;
                try {
                    var s = new self.URL(r).searchParams;
                    if (!s.has(i))
                        throw new Error('"' + i + '" does not match any query parameter in URI: "' + r + '"');
                    n = s.get(i)
                } catch (e) {
                    t.playlistParsingError || (t.playlistParsingError = new Error("EXT-X-DEFINE QUERYPARAM: " + e.message))
                }
            } else
                i = e.NAME,
                n = e.VALUE;
            i in a ? t.playlistParsingError || (t.playlistParsingError = new Error('EXT-X-DEFINE duplicate Variable Name declarations: "' + i + '"')) : a[i] = n || ""
        }
        function Zt(t, e, r) {
            var i = e.IMPORT;
            if (r && i in r) {
                var n = t.variableList;
                n || (t.variableList = n = {}),
                n[i] = r[i]
            } else
                t.playlistParsingError || (t.playlistParsingError = new Error('EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "' + i + '"'))
        }
        function te(t) {
            if (void 0 === t && (t = !0),
            "undefined" != typeof self)
                return (t || !self.MediaSource) && self.ManagedMediaSource || self.MediaSource || self.WebKitMediaSource
        }
        var ee = {
            audio: {
                a3ds: 1,
                "ac-3": .95,
                "ac-4": 1,
                alac: .9,
                alaw: 1,
                dra1: 1,
                "dts+": 1,
                "dts-": 1,
                dtsc: 1,
                dtse: 1,
                dtsh: 1,
                "ec-3": .9,
                enca: 1,
                fLaC: .9,
                flac: .9,
                FLAC: .9,
                g719: 1,
                g726: 1,
                m4ae: 1,
                mha1: 1,
                mha2: 1,
                mhm1: 1,
                mhm2: 1,
                mlpa: 1,
                mp4a: 1,
                "raw ": 1,
                Opus: 1,
                opus: 1,
                samr: 1,
                sawb: 1,
                sawp: 1,
                sevc: 1,
                sqcp: 1,
                ssmv: 1,
                twos: 1,
                ulaw: 1
            },
            video: {
                avc1: 1,
                avc2: 1,
                avc3: 1,
                avc4: 1,
                avcp: 1,
                av01: .8,
                drac: 1,
                dva1: 1,
                dvav: 1,
                dvh1: .7,
                dvhe: .7,
                encv: 1,
                hev1: .75,
                hvc1: .75,
                mjp2: 1,
                mp4v: 1,
                mvc1: 1,
                mvc2: 1,
                mvc3: 1,
                mvc4: 1,
                resv: 1,
                rv60: 1,
                s263: 1,
                svc1: 1,
                svc2: 1,
                "vc-1": 1,
                vp08: 1,
                vp09: .9
            },
            text: {
                stpp: 1,
                wvtt: 1
            }
        };
        function re(t, e, r) {
            return void 0 === r && (r = !0),
            !t.split(",").some((function(t) {
                return !ie(t, e, r)
            }
            ))
        }
        function ie(t, e, r) {
            var i;
            void 0 === r && (r = !0);
            var n = te(r);
            return null != (i = null == n ? void 0 : n.isTypeSupported(ne(t, e))) && i
        }
        function ne(t, e) {
            return e + '/mp4;codecs="' + t + '"'
        }
        function ae(t) {
            if (t) {
                var e = t.substring(0, 4);
                return ee.video[e]
            }
            return 2
        }
        function se(t) {
            return t.split(",").reduce((function(t, e) {
                var r = ee.video[e];
                return r ? (2 * r + t) / (t ? 3 : 2) : (ee.audio[e] + t) / (t ? 2 : 1)
            }
            ), 0)
        }
        var oe = {}
          , le = /flac|opus/i;
        function ue(t, e) {
            return void 0 === e && (e = !0),
            t.replace(le, (function(t) {
                return function(t, e) {
                    if (void 0 === e && (e = !0),
                    oe[t])
                        return oe[t];
                    for (var r = {
                        flac: ["flac", "fLaC", "FLAC"],
                        opus: ["opus", "Opus"]
                    }[t], i = 0; i < r.length; i++)
                        if (ie(r[i], "audio", e))
                            return oe[t] = r[i],
                            r[i];
                    return t
                }(t.toLowerCase(), e)
            }
            ))
        }
        function he(t, e) {
            return t && "mp4a" !== t ? t : e
        }
        var de = /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g
          , ce = /#EXT-X-MEDIA:(.*)/g
          , fe = /^#EXT(?:INF|-X-TARGETDURATION):/m
          , ge = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /(?!#) *(\S[\S ]*)/.source, /#EXT-X-BYTERANGE:*(.+)/.source, /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /#.*/.source].join("|"),"g")
          , ve = new RegExp([/#(EXTM3U)/.source, /#EXT-X-(DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/.source, /#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/.source, /#EXT-X-(DISCONTINUITY|ENDLIST|GAP|INDEPENDENT-SEGMENTS)/.source, /(#)([^:]*):(.*)/.source, /(#)(.*)(?:.*)\r?\n?/.source].join("|"))
          , me = function() {
            function t() {}
            return t.findGroup = function(t, e) {
                for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    if (i.id === e)
                        return i
                }
            }
            ,
            t.resolve = function(t, e) {
                return p.buildAbsoluteURL(e, t, {
                    alwaysNormalize: !0
                })
            }
            ,
            t.isMediaPlaylist = function(t) {
                return fe.test(t)
            }
            ,
            t.parseMasterPlaylist = function(e, r) {
                var i, n = {
                    contentSteering: null,
                    levels: [],
                    playlistParsingError: null,
                    sessionData: null,
                    sessionKeys: null,
                    startTimeOffset: null,
                    variableList: null,
                    hasVariableRefs: zt(e)
                }, a = [];
                for (de.lastIndex = 0; null != (i = de.exec(e)); )
                    if (i[1]) {
                        var s, o = new x(i[1]);
                        Qt(n, o, ["CODECS", "SUPPLEMENTAL-CODECS", "ALLOWED-CPC", "PATHWAY-ID", "STABLE-VARIANT-ID", "AUDIO", "VIDEO", "SUBTITLES", "CLOSED-CAPTIONS", "NAME"]);
                        var l = Jt(n, i[2])
                          , u = {
                            attrs: o,
                            bitrate: o.decimalInteger("BANDWIDTH") || o.decimalInteger("AVERAGE-BANDWIDTH"),
                            name: o.NAME,
                            url: t.resolve(l, r)
                        }
                          , h = o.decimalResolution("RESOLUTION");
                        h && (u.width = h.width,
                        u.height = h.height),
                        Ee(o.CODECS, u),
                        null != (s = u.unknownCodecs) && s.length || a.push(u),
                        n.levels.push(u)
                    } else if (i[3]) {
                        var d = i[3]
                          , c = i[4];
                        switch (d) {
                        case "SESSION-DATA":
                            var f = new x(c);
                            Qt(n, f, ["DATA-ID", "LANGUAGE", "VALUE", "URI"]);
                            var g = f["DATA-ID"];
                            g && (null === n.sessionData && (n.sessionData = {}),
                            n.sessionData[g] = f);
                            break;
                        case "SESSION-KEY":
                            var v = pe(c, r, n);
                            v.encrypted && v.isSupported() ? (null === n.sessionKeys && (n.sessionKeys = []),
                            n.sessionKeys.push(v)) : w.warn('[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "' + c + '"');
                            break;
                        case "DEFINE":
                            var m = new x(c);
                            Qt(n, m, ["NAME", "VALUE", "QUERYPARAM"]),
                            $t(n, m, r);
                            break;
                        case "CONTENT-STEERING":
                            var p = new x(c);
                            Qt(n, p, ["SERVER-URI", "PATHWAY-ID"]),
                            n.contentSteering = {
                                uri: t.resolve(p["SERVER-URI"], r),
                                pathwayId: p["PATHWAY-ID"] || "."
                            };
                            break;
                        case "START":
                            n.startTimeOffset = ye(c)
                        }
                    }
                var y = a.length > 0 && a.length < n.levels.length;
                return n.levels = y ? a : n.levels,
                0 === n.levels.length && (n.playlistParsingError = new Error("no levels found in manifest")),
                n
            }
            ,
            t.parseMasterPlaylistMedia = function(e, r, i) {
                var n, a = {}, s = i.levels, o = {
                    AUDIO: s.map((function(t) {
                        return {
                            id: t.attrs.AUDIO,
                            audioCodec: t.audioCodec
                        }
                    }
                    )),
                    SUBTITLES: s.map((function(t) {
                        return {
                            id: t.attrs.SUBTITLES,
                            textCodec: t.textCodec
                        }
                    }
                    )),
                    "CLOSED-CAPTIONS": []
                }, l = 0;
                for (ce.lastIndex = 0; null !== (n = ce.exec(e)); ) {
                    var u = new x(n[1])
                      , h = u.TYPE;
                    if (h) {
                        var d = o[h]
                          , c = a[h] || [];
                        a[h] = c,
                        Qt(i, u, ["URI", "GROUP-ID", "LANGUAGE", "ASSOC-LANGUAGE", "STABLE-RENDITION-ID", "NAME", "INSTREAM-ID", "CHARACTERISTICS", "CHANNELS"]);
                        var f = u.LANGUAGE
                          , g = u["ASSOC-LANGUAGE"]
                          , v = u.CHANNELS
                          , m = u.CHARACTERISTICS
                          , p = u["INSTREAM-ID"]
                          , y = {
                            attrs: u,
                            bitrate: 0,
                            id: l++,
                            groupId: u["GROUP-ID"] || "",
                            name: u.NAME || f || "",
                            type: h,
                            default: u.bool("DEFAULT"),
                            autoselect: u.bool("AUTOSELECT"),
                            forced: u.bool("FORCED"),
                            lang: f,
                            url: u.URI ? t.resolve(u.URI, r) : ""
                        };
                        if (g && (y.assocLang = g),
                        v && (y.channels = v),
                        m && (y.characteristics = m),
                        p && (y.instreamId = p),
                        null != d && d.length) {
                            var E = t.findGroup(d, y.groupId) || d[0];
                            Te(y, E, "audioCodec"),
                            Te(y, E, "textCodec")
                        }
                        c.push(y)
                    }
                }
                return a
            }
            ,
            t.parseLevelPlaylist = function(t, e, r, i, n, a) {
                var s, l, u, h = new H(e), d = h.fragments, c = null, f = 0, g = 0, v = 0, m = 0, p = null, E = new G(i,e), T = -1, S = !1, L = null;
                for (ge.lastIndex = 0,
                h.m3u8 = t,
                h.hasVariableRefs = zt(t); null !== (s = ge.exec(t)); ) {
                    S && (S = !1,
                    (E = new G(i,e)).start = v,
                    E.sn = f,
                    E.cc = m,
                    E.level = r,
                    c && (E.initSegment = c,
                    E.rawProgramDateTime = c.rawProgramDateTime,
                    c.rawProgramDateTime = null,
                    L && (E.setByteRange(L),
                    L = null)));
                    var A = s[1];
                    if (A) {
                        E.duration = parseFloat(A);
                        var R = (" " + s[2]).slice(1);
                        E.title = R || null,
                        E.tagList.push(R ? ["INF", A, R] : ["INF", A])
                    } else if (s[3]) {
                        if (y(E.duration)) {
                            E.start = v,
                            u && Ae(E, u, h),
                            E.sn = f,
                            E.level = r,
                            E.cc = m,
                            d.push(E);
                            var k = (" " + s[3]).slice(1);
                            E.relurl = Jt(h, k),
                            Se(E, p),
                            p = E,
                            v += E.duration,
                            f++,
                            g = 0,
                            S = !0
                        }
                    } else if (s[4]) {
                        var b = (" " + s[4]).slice(1);
                        p ? E.setByteRange(b, p) : E.setByteRange(b)
                    } else if (s[5])
                        E.rawProgramDateTime = (" " + s[5]).slice(1),
                        E.tagList.push(["PROGRAM-DATE-TIME", E.rawProgramDateTime]),
                        -1 === T && (T = d.length);
                    else {
                        if (!(s = s[0].match(ve))) {
                            w.warn("No matches on slow regex match for level playlist!");
                            continue
                        }
                        for (l = 1; l < s.length && void 0 === s[l]; l++)
                            ;
                        var D = (" " + s[l]).slice(1)
                          , I = (" " + s[l + 1]).slice(1)
                          , C = s[l + 2] ? (" " + s[l + 2]).slice(1) : "";
                        switch (D) {
                        case "PLAYLIST-TYPE":
                            h.type = I.toUpperCase();
                            break;
                        case "MEDIA-SEQUENCE":
                            f = h.startSN = parseInt(I);
                            break;
                        case "SKIP":
                            var _ = new x(I);
                            Qt(h, _, ["RECENTLY-REMOVED-DATERANGES"]);
                            var P = _.decimalInteger("SKIPPED-SEGMENTS");
                            if (y(P)) {
                                h.skippedSegments = P;
                                for (var M = P; M--; )
                                    d.unshift(null);
                                f += P
                            }
                            var O = _.enumeratedString("RECENTLY-REMOVED-DATERANGES");
                            O && (h.recentlyRemovedDateranges = O.split("\t"));
                            break;
                        case "TARGETDURATION":
                            h.targetduration = Math.max(parseInt(I), 1);
                            break;
                        case "VERSION":
                            h.version = parseInt(I);
                            break;
                        case "INDEPENDENT-SEGMENTS":
                        case "EXTM3U":
                            break;
                        case "ENDLIST":
                            h.live = !1;
                            break;
                        case "#":
                            (I || C) && E.tagList.push(C ? [I, C] : [I]);
                            break;
                        case "DISCONTINUITY":
                            m++,
                            E.tagList.push(["DIS"]);
                            break;
                        case "GAP":
                            E.gap = !0,
                            E.tagList.push([D]);
                            break;
                        case "BITRATE":
                            E.tagList.push([D, I]);
                            break;
                        case "DATERANGE":
                            var N = new x(I);
                            Qt(h, N, ["ID", "CLASS", "START-DATE", "END-DATE", "SCTE35-CMD", "SCTE35-OUT", "SCTE35-IN"]),
                            Qt(h, N, N.clientAttrs);
                            var U = new F(N,h.dateRanges[N.ID]);
                            U.isValid || h.skippedSegments ? h.dateRanges[U.id] = U : w.warn('Ignoring invalid DATERANGE tag: "' + I + '"'),
                            E.tagList.push(["EXT-X-DATERANGE", I]);
                            break;
                        case "DEFINE":
                            var B = new x(I);
                            Qt(h, B, ["NAME", "VALUE", "IMPORT", "QUERYPARAM"]),
                            "IMPORT"in B ? Zt(h, B, a) : $t(h, B, e);
                            break;
                        case "DISCONTINUITY-SEQUENCE":
                            m = parseInt(I);
                            break;
                        case "KEY":
                            var V = pe(I, e, h);
                            if (V.isSupported()) {
                                if ("NONE" === V.method) {
                                    u = void 0;
                                    break
                                }
                                u || (u = {}),
                                u[V.keyFormat] && (u = o({}, u)),
                                u[V.keyFormat] = V
                            } else
                                w.warn('[Keys] Ignoring invalid EXT-X-KEY tag: "' + I + '"');
                            break;
                        case "START":
                            h.startTimeOffset = ye(I);
                            break;
                        case "MAP":
                            var Y = new x(I);
                            if (Qt(h, Y, ["BYTERANGE", "URI"]),
                            E.duration) {
                                var W = new G(i,e);
                                Le(W, Y, r, u),
                                c = W,
                                E.initSegment = c,
                                c.rawProgramDateTime && !E.rawProgramDateTime && (E.rawProgramDateTime = c.rawProgramDateTime)
                            } else {
                                var j = E.byteRangeEndOffset;
                                if (j) {
                                    var q = E.byteRangeStartOffset;
                                    L = j - q + "@" + q
                                } else
                                    L = null;
                                Le(E, Y, r, u),
                                c = E,
                                S = !0
                            }
                            break;
                        case "SERVER-CONTROL":
                            var X = new x(I);
                            h.canBlockReload = X.bool("CAN-BLOCK-RELOAD"),
                            h.canSkipUntil = X.optionalFloat("CAN-SKIP-UNTIL", 0),
                            h.canSkipDateRanges = h.canSkipUntil > 0 && X.bool("CAN-SKIP-DATERANGES"),
                            h.partHoldBack = X.optionalFloat("PART-HOLD-BACK", 0),
                            h.holdBack = X.optionalFloat("HOLD-BACK", 0);
                            break;
                        case "PART-INF":
                            var z = new x(I);
                            h.partTarget = z.decimalFloatingPoint("PART-TARGET");
                            break;
                        case "PART":
                            var Q = h.partList;
                            Q || (Q = h.partList = []);
                            var J = g > 0 ? Q[Q.length - 1] : void 0
                              , $ = g++
                              , Z = new x(I);
                            Qt(h, Z, ["BYTERANGE", "URI"]);
                            var tt = new K(Z,E,e,$,J);
                            Q.push(tt),
                            E.duration += tt.duration;
                            break;
                        case "PRELOAD-HINT":
                            var et = new x(I);
                            Qt(h, et, ["URI"]),
                            h.preloadHint = et;
                            break;
                        case "RENDITION-REPORT":
                            var rt = new x(I);
                            Qt(h, rt, ["URI"]),
                            h.renditionReports = h.renditionReports || [],
                            h.renditionReports.push(rt);
                            break;
                        default:
                            w.warn("line parsed but not handled: " + s)
                        }
                    }
                }
                p && !p.relurl ? (d.pop(),
                v -= p.duration,
                h.partList && (h.fragmentHint = p)) : h.partList && (Se(E, p),
                E.cc = m,
                h.fragmentHint = E,
                u && Ae(E, u, h));
                var it = d.length
                  , nt = d[0]
                  , at = d[it - 1];
                if ((v += h.skippedSegments * h.targetduration) > 0 && it && at) {
                    h.averagetargetduration = v / it;
                    var st = at.sn;
                    h.endSN = "initSegment" !== st ? st : 0,
                    h.live || (at.endList = !0),
                    nt && (h.startCC = nt.cc)
                } else
                    h.endSN = 0,
                    h.startCC = 0;
                return h.fragmentHint && (v += h.fragmentHint.duration),
                h.totalduration = v,
                h.endCC = m,
                T > 0 && function(t, e) {
                    for (var r = t[e], i = e; i--; ) {
                        var n = t[i];
                        if (!n)
                            return;
                        n.programDateTime = r.programDateTime - 1e3 * n.duration,
                        r = n
                    }
                }(d, T),
                h
            }
            ,
            t
        }();
        function pe(t, e, r) {
            var i, n, a = new x(t);
            Qt(r, a, ["KEYFORMAT", "KEYFORMATVERSIONS", "URI", "IV", "URI"]);
            var s = null != (i = a.METHOD) ? i : ""
              , o = a.URI
              , l = a.hexadecimalInteger("IV")
              , u = a.KEYFORMATVERSIONS
              , h = null != (n = a.KEYFORMAT) ? n : "identity";
            o && a.IV && !l && w.error("Invalid IV: " + a.IV);
            var d = o ? me.resolve(o, e) : ""
              , c = (u || "1").split("/").map(Number).filter(Number.isFinite);
            return new qt(s,d,h,c,l)
        }
        function ye(t) {
            var e = new x(t).decimalFloatingPoint("TIME-OFFSET");
            return y(e) ? e : null
        }
        function Ee(t, e) {
            var r = (t || "").split(/[ ,]+/).filter((function(t) {
                return t
            }
            ));
            ["video", "audio", "text"].forEach((function(t) {
                var i = r.filter((function(e) {
                    return function(t, e) {
                        var r = ee[e];
                        return !!r && !!r[t.slice(0, 4)]
                    }(e, t)
                }
                ));
                i.length && (e[t + "Codec"] = i.join(","),
                r = r.filter((function(t) {
                    return -1 === i.indexOf(t)
                }
                )))
            }
            )),
            e.unknownCodecs = r
        }
        function Te(t, e, r) {
            var i = e[r];
            i && (t[r] = i)
        }
        function Se(t, e) {
            t.rawProgramDateTime ? t.programDateTime = Date.parse(t.rawProgramDateTime) : null != e && e.programDateTime && (t.programDateTime = e.endProgramDateTime),
            y(t.programDateTime) || (t.programDateTime = null,
            t.rawProgramDateTime = null)
        }
        function Le(t, e, r, i) {
            t.relurl = e.URI,
            e.BYTERANGE && t.setByteRange(e.BYTERANGE),
            t.level = r,
            t.sn = "initSegment",
            i && (t.levelkeys = i),
            t.initSegment = null
        }
        function Ae(t, e, r) {
            t.levelkeys = e;
            var i = r.encryptedFragments;
            i.length && i[i.length - 1].levelkeys === e || !Object.keys(e).some((function(t) {
                return e[t].isCommonEncryption
            }
            )) || i.push(t)
        }
        var Re = "manifest"
          , ke = "level"
          , be = "audioTrack"
          , De = "subtitleTrack"
          , Ie = "main"
          , we = "audio"
          , Ce = "subtitle";
        function _e(t) {
            switch (t.type) {
            case be:
                return we;
            case De:
                return Ce;
            default:
                return Ie
            }
        }
        function xe(t, e) {
            var r = t.url;
            return void 0 !== r && 0 !== r.indexOf("data:") || (r = e.url),
            r
        }
        var Pe = function() {
            function t(t) {
                this.hls = void 0,
                this.loaders = Object.create(null),
                this.variableList = null,
                this.hls = t,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.startLoad = function(t) {}
            ,
            e.stopLoad = function() {
                this.destroyInternalLoaders()
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
                t.on(S.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this),
                t.off(S.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this)
            }
            ,
            e.createInternalLoader = function(t) {
                var e = this.hls.config
                  , r = e.pLoader
                  , i = e.loader
                  , n = new (r || i)(e);
                return this.loaders[t.type] = n,
                n
            }
            ,
            e.getInternalLoader = function(t) {
                return this.loaders[t.type]
            }
            ,
            e.resetInternalLoader = function(t) {
                this.loaders[t] && delete this.loaders[t]
            }
            ,
            e.destroyInternalLoaders = function() {
                for (var t in this.loaders) {
                    var e = this.loaders[t];
                    e && e.destroy(),
                    this.resetInternalLoader(t)
                }
            }
            ,
            e.destroy = function() {
                this.variableList = null,
                this.unregisterListeners(),
                this.destroyInternalLoaders()
            }
            ,
            e.onManifestLoading = function(t, e) {
                var r = e.url;
                this.variableList = null,
                this.load({
                    id: null,
                    level: 0,
                    responseType: "text",
                    type: Re,
                    url: r,
                    deliveryDirectives: null
                })
            }
            ,
            e.onLevelLoading = function(t, e) {
                var r = e.id
                  , i = e.level
                  , n = e.pathwayId
                  , a = e.url
                  , s = e.deliveryDirectives;
                this.load({
                    id: r,
                    level: i,
                    pathwayId: n,
                    responseType: "text",
                    type: ke,
                    url: a,
                    deliveryDirectives: s
                })
            }
            ,
            e.onAudioTrackLoading = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.url
                  , a = e.deliveryDirectives;
                this.load({
                    id: r,
                    groupId: i,
                    level: null,
                    responseType: "text",
                    type: be,
                    url: n,
                    deliveryDirectives: a
                })
            }
            ,
            e.onSubtitleTrackLoading = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.url
                  , a = e.deliveryDirectives;
                this.load({
                    id: r,
                    groupId: i,
                    level: null,
                    responseType: "text",
                    type: De,
                    url: n,
                    deliveryDirectives: a
                })
            }
            ,
            e.load = function(t) {
                var e, r, i, n = this, a = this.hls.config, s = this.getInternalLoader(t);
                if (s) {
                    var l = s.context;
                    if (l && l.url === t.url && l.level === t.level)
                        return void w.trace("[playlist-loader]: playlist request ongoing");
                    w.log("[playlist-loader]: aborting previous loader for type: " + t.type),
                    s.abort()
                }
                if (r = t.type === Re ? a.manifestLoadPolicy.default : o({}, a.playlistLoadPolicy.default, {
                    timeoutRetry: null,
                    errorRetry: null
                }),
                s = this.createInternalLoader(t),
                y(null == (e = t.deliveryDirectives) ? void 0 : e.part) && (t.type === ke && null !== t.level ? i = this.hls.levels[t.level].details : t.type === be && null !== t.id ? i = this.hls.audioTracks[t.id].details : t.type === De && null !== t.id && (i = this.hls.subtitleTracks[t.id].details),
                i)) {
                    var u = i.partTarget
                      , h = i.targetduration;
                    if (u && h) {
                        var d = 1e3 * Math.max(3 * u, .8 * h);
                        r = o({}, r, {
                            maxTimeToFirstByteMs: Math.min(d, r.maxTimeToFirstByteMs),
                            maxLoadTimeMs: Math.min(d, r.maxTimeToFirstByteMs)
                        })
                    }
                }
                var c = r.errorRetry || r.timeoutRetry || {}
                  , f = {
                    loadPolicy: r,
                    timeout: r.maxLoadTimeMs,
                    maxRetry: c.maxNumRetry || 0,
                    retryDelay: c.retryDelayMs || 0,
                    maxRetryDelay: c.maxRetryDelayMs || 0
                }
                  , g = {
                    onSuccess: function(t, e, r, i) {
                        var a = n.getInternalLoader(r);
                        n.resetInternalLoader(r.type);
                        var s = t.data;
                        0 === s.indexOf("#EXTM3U") ? (e.parsing.start = performance.now(),
                        me.isMediaPlaylist(s) ? n.handleTrackOrLevelPlaylist(t, e, r, i || null, a) : n.handleMasterPlaylist(t, e, r, i)) : n.handleManifestParsingError(t, r, new Error("no EXTM3U delimiter"), i || null, e)
                    },
                    onError: function(t, e, r, i) {
                        n.handleNetworkError(e, r, !1, t, i)
                    },
                    onTimeout: function(t, e, r) {
                        n.handleNetworkError(e, r, !0, void 0, t)
                    }
                };
                s.load(t, f, g)
            }
            ,
            e.handleMasterPlaylist = function(t, e, r, i) {
                var n = this.hls
                  , a = t.data
                  , s = xe(t, r)
                  , o = me.parseMasterPlaylist(a, s);
                if (o.playlistParsingError)
                    this.handleManifestParsingError(t, r, o.playlistParsingError, i, e);
                else {
                    var l = o.contentSteering
                      , u = o.levels
                      , h = o.sessionData
                      , d = o.sessionKeys
                      , c = o.startTimeOffset
                      , f = o.variableList;
                    this.variableList = f;
                    var g = me.parseMasterPlaylistMedia(a, s, o)
                      , v = g.AUDIO
                      , m = void 0 === v ? [] : v
                      , p = g.SUBTITLES
                      , y = g["CLOSED-CAPTIONS"];
                    m.length && (m.some((function(t) {
                        return !t.url
                    }
                    )) || !u[0].audioCodec || u[0].attrs.AUDIO || (w.log("[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"),
                    m.unshift({
                        type: "main",
                        name: "main",
                        groupId: "main",
                        default: !1,
                        autoselect: !1,
                        forced: !1,
                        id: -1,
                        attrs: new x({}),
                        bitrate: 0,
                        url: ""
                    }))),
                    n.trigger(S.MANIFEST_LOADED, {
                        levels: u,
                        audioTracks: m,
                        subtitles: p,
                        captions: y,
                        contentSteering: l,
                        url: s,
                        stats: e,
                        networkDetails: i,
                        sessionData: h,
                        sessionKeys: d,
                        startTimeOffset: c,
                        variableList: f
                    })
                }
            }
            ,
            e.handleTrackOrLevelPlaylist = function(t, e, r, i, n) {
                var a = this.hls
                  , s = r.id
                  , o = r.level
                  , l = r.type
                  , u = xe(t, r)
                  , h = y(o) ? o : y(s) ? s : 0
                  , d = _e(r)
                  , c = me.parseLevelPlaylist(t.data, u, h, d, 0, this.variableList);
                if (l === Re) {
                    var f = {
                        attrs: new x({}),
                        bitrate: 0,
                        details: c,
                        name: "",
                        url: u
                    };
                    a.trigger(S.MANIFEST_LOADED, {
                        levels: [f],
                        audioTracks: [],
                        url: u,
                        stats: e,
                        networkDetails: i,
                        sessionData: null,
                        sessionKeys: null,
                        contentSteering: null,
                        startTimeOffset: null,
                        variableList: null
                    })
                }
                e.parsing.end = performance.now(),
                r.levelDetails = c,
                this.handlePlaylistLoaded(c, t, e, r, i, n)
            }
            ,
            e.handleManifestParsingError = function(t, e, r, i, n) {
                this.hls.trigger(S.ERROR, {
                    type: L.NETWORK_ERROR,
                    details: A.MANIFEST_PARSING_ERROR,
                    fatal: e.type === Re,
                    url: t.url,
                    err: r,
                    error: r,
                    reason: r.message,
                    response: t,
                    context: e,
                    networkDetails: i,
                    stats: n
                })
            }
            ,
            e.handleNetworkError = function(t, e, r, n, a) {
                void 0 === r && (r = !1);
                var s = "A network " + (r ? "timeout" : "error" + (n ? " (status " + n.code + ")" : "")) + " occurred while loading " + t.type;
                t.type === ke ? s += ": " + t.level + " id: " + t.id : t.type !== be && t.type !== De || (s += " id: " + t.id + ' group-id: "' + t.groupId + '"');
                var o = new Error(s);
                w.warn("[playlist-loader]: " + s);
                var l = A.UNKNOWN
                  , u = !1
                  , h = this.getInternalLoader(t);
                switch (t.type) {
                case Re:
                    l = r ? A.MANIFEST_LOAD_TIMEOUT : A.MANIFEST_LOAD_ERROR,
                    u = !0;
                    break;
                case ke:
                    l = r ? A.LEVEL_LOAD_TIMEOUT : A.LEVEL_LOAD_ERROR,
                    u = !1;
                    break;
                case be:
                    l = r ? A.AUDIO_TRACK_LOAD_TIMEOUT : A.AUDIO_TRACK_LOAD_ERROR,
                    u = !1;
                    break;
                case De:
                    l = r ? A.SUBTITLE_TRACK_LOAD_TIMEOUT : A.SUBTITLE_LOAD_ERROR,
                    u = !1
                }
                h && this.resetInternalLoader(t.type);
                var d = {
                    type: L.NETWORK_ERROR,
                    details: l,
                    fatal: u,
                    url: t.url,
                    loader: h,
                    context: t,
                    error: o,
                    networkDetails: e,
                    stats: a
                };
                if (n) {
                    var c = (null == e ? void 0 : e.url) || t.url;
                    d.response = i({
                        url: c,
                        data: void 0
                    }, n)
                }
                this.hls.trigger(S.ERROR, d)
            }
            ,
            e.handlePlaylistLoaded = function(t, e, r, i, n, a) {
                var s = this.hls
                  , o = i.type
                  , l = i.level
                  , u = i.id
                  , h = i.groupId
                  , d = i.deliveryDirectives
                  , c = xe(e, i)
                  , f = _e(i)
                  , g = "number" == typeof i.level && f === Ie ? l : void 0;
                if (t.fragments.length) {
                    t.targetduration || (t.playlistParsingError = new Error("Missing Target Duration"));
                    var v = t.playlistParsingError;
                    if (v)
                        s.trigger(S.ERROR, {
                            type: L.NETWORK_ERROR,
                            details: A.LEVEL_PARSING_ERROR,
                            fatal: !1,
                            url: c,
                            error: v,
                            reason: v.message,
                            response: e,
                            context: i,
                            level: g,
                            parent: f,
                            networkDetails: n,
                            stats: r
                        });
                    else
                        switch (t.live && a && (a.getCacheAge && (t.ageHeader = a.getCacheAge() || 0),
                        a.getCacheAge && !isNaN(t.ageHeader) || (t.ageHeader = 0)),
                        o) {
                        case Re:
                        case ke:
                            s.trigger(S.LEVEL_LOADED, {
                                details: t,
                                level: g || 0,
                                id: u || 0,
                                stats: r,
                                networkDetails: n,
                                deliveryDirectives: d
                            });
                            break;
                        case be:
                            s.trigger(S.AUDIO_TRACK_LOADED, {
                                details: t,
                                id: u || 0,
                                groupId: h || "",
                                stats: r,
                                networkDetails: n,
                                deliveryDirectives: d
                            });
                            break;
                        case De:
                            s.trigger(S.SUBTITLE_TRACK_LOADED, {
                                details: t,
                                id: u || 0,
                                groupId: h || "",
                                stats: r,
                                networkDetails: n,
                                deliveryDirectives: d
                            })
                        }
                } else {
                    var m = new Error("No Segments found in Playlist");
                    s.trigger(S.ERROR, {
                        type: L.NETWORK_ERROR,
                        details: A.LEVEL_EMPTY_ERROR,
                        fatal: !1,
                        url: c,
                        error: m,
                        reason: m.message,
                        response: e,
                        context: i,
                        level: g,
                        parent: f,
                        networkDetails: n,
                        stats: r
                    })
                }
            }
            ,
            t
        }();
        function Fe(t, e) {
            var r;
            try {
                r = new Event("addtrack")
            } catch (t) {
                (r = document.createEvent("Event")).initEvent("addtrack", !1, !1)
            }
            r.track = t,
            e.dispatchEvent(r)
        }
        function Me(t, e) {
            var r = t.mode;
            if ("disabled" === r && (t.mode = "hidden"),
            t.cues && !t.cues.getCueById(e.id))
                try {
                    if (t.addCue(e),
                    !t.cues.getCueById(e.id))
                        throw new Error("addCue is failed for: " + e)
                } catch (r) {
                    w.debug("[texttrack-utils]: " + r);
                    try {
                        var i = new self.TextTrackCue(e.startTime,e.endTime,e.text);
                        i.id = e.id,
                        t.addCue(i)
                    } catch (t) {
                        w.debug("[texttrack-utils]: Legacy TextTrackCue fallback failed: " + t)
                    }
                }
            "disabled" === r && (t.mode = r)
        }
        function Oe(t) {
            var e = t.mode;
            if ("disabled" === e && (t.mode = "hidden"),
            t.cues)
                for (var r = t.cues.length; r--; )
                    t.removeCue(t.cues[r]);
            "disabled" === e && (t.mode = e)
        }
        function Ne(t, e, r, i) {
            var n = t.mode;
            if ("disabled" === n && (t.mode = "hidden"),
            t.cues && t.cues.length > 0)
                for (var a = function(t, e, r) {
                    var i = []
                      , n = function(t, e) {
                        if (e < t[0].startTime)
                            return 0;
                        var r = t.length - 1;
                        if (e > t[r].endTime)
                            return -1;
                        for (var i = 0, n = r; i <= n; ) {
                            var a = Math.floor((n + i) / 2);
                            if (e < t[a].startTime)
                                n = a - 1;
                            else {
                                if (!(e > t[a].startTime && i < r))
                                    return a;
                                i = a + 1
                            }
                        }
                        return t[i].startTime - e < e - t[n].startTime ? i : n
                    }(t, e);
                    if (n > -1)
                        for (var a = n, s = t.length; a < s; a++) {
                            var o = t[a];
                            if (o.startTime >= e && o.endTime <= r)
                                i.push(o);
                            else if (o.startTime > r)
                                return i
                        }
                    return i
                }(t.cues, e, r), s = 0; s < a.length; s++)
                    i && !i(a[s]) || t.removeCue(a[s]);
            "disabled" === n && (t.mode = n)
        }
        function Ue(t) {
            for (var e = [], r = 0; r < t.length; r++) {
                var i = t[r];
                "subtitles" !== i.kind && "captions" !== i.kind || !i.label || e.push(t[r])
            }
            return e
        }
        var Be = "org.id3"
          , Ge = "com.apple.quicktime.HLS"
          , Ke = "https://aomedia.org/emsg/ID3";
        function He() {
            if ("undefined" != typeof self)
                return self.VTTCue || self.TextTrackCue
        }
        function Ve(t, e, r, n, a) {
            var s = new t(e,r,"");
            try {
                s.value = n,
                a && (s.type = a)
            } catch (o) {
                s = new t(e,r,JSON.stringify(a ? i({
                    type: a
                }, n) : n))
            }
            return s
        }
        var Ye = function() {
            var t = He();
            try {
                t && new t(0,Number.POSITIVE_INFINITY,"")
            } catch (t) {
                return Number.MAX_VALUE
            }
            return Number.POSITIVE_INFINITY
        }();
        function We(t, e) {
            return t.getTime() / 1e3 - e
        }
        var je = function() {
            function t(t) {
                this.hls = void 0,
                this.id3Track = null,
                this.media = null,
                this.dateRangeCuesAppended = {},
                this.hls = t,
                this._registerListeners()
            }
            var e = t.prototype;
            return e.destroy = function() {
                this._unregisterListeners(),
                this.id3Track = null,
                this.media = null,
                this.dateRangeCuesAppended = {},
                this.hls = null
            }
            ,
            e._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this)
            }
            ,
            e._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this)
            }
            ,
            e.onMediaAttached = function(t, e) {
                this.media = e.media
            }
            ,
            e.onMediaDetaching = function() {
                this.id3Track && (Oe(this.id3Track),
                this.id3Track = null,
                this.media = null,
                this.dateRangeCuesAppended = {})
            }
            ,
            e.onManifestLoading = function() {
                this.dateRangeCuesAppended = {}
            }
            ,
            e.createTrack = function(t) {
                var e = this.getID3Track(t.textTracks);
                return e.mode = "hidden",
                e
            }
            ,
            e.getID3Track = function(t) {
                if (this.media) {
                    for (var e = 0; e < t.length; e++) {
                        var r = t[e];
                        if ("metadata" === r.kind && "id3" === r.label)
                            return Fe(r, this.media),
                            r
                    }
                    return this.media.addTextTrack("metadata", "id3")
                }
            }
            ,
            e.onFragParsingMetadata = function(t, e) {
                if (this.media) {
                    var r = this.hls.config
                      , i = r.enableEmsgMetadataCues
                      , n = r.enableID3MetadataCues;
                    if (i || n) {
                        var a = e.samples;
                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                        var s = He();
                        if (s)
                            for (var o = 0; o < a.length; o++) {
                                var l = a[o].type;
                                if ((l !== Ke || i) && n) {
                                    var u = gt(a[o].data);
                                    if (u) {
                                        var h = a[o].pts
                                          , d = h + a[o].duration;
                                        d > Ye && (d = Ye),
                                        d - h <= 0 && (d = h + .25);
                                        for (var c = 0; c < u.length; c++) {
                                            var f = u[c];
                                            if (!ct(f)) {
                                                this.updateId3CueEnds(h, l);
                                                var g = Ve(s, h, d, f, l);
                                                g && this.id3Track.addCue(g)
                                            }
                                        }
                                    }
                                }
                            }
                    }
                }
            }
            ,
            e.updateId3CueEnds = function(t, e) {
                var r, i = null == (r = this.id3Track) ? void 0 : r.cues;
                if (i)
                    for (var n = i.length; n--; ) {
                        var a = i[n];
                        a.type === e && a.startTime < t && a.endTime === Ye && (a.endTime = t)
                    }
            }
            ,
            e.onBufferFlushing = function(t, e) {
                var r = e.startOffset
                  , i = e.endOffset
                  , n = e.type
                  , a = this.id3Track
                  , s = this.hls;
                if (s) {
                    var o = s.config
                      , l = o.enableEmsgMetadataCues
                      , u = o.enableID3MetadataCues;
                    a && (l || u) && Ne(a, r, i, "audio" === n ? function(t) {
                        return t.type === Be && u
                    }
                    : "video" === n ? function(t) {
                        return t.type === Ke && l
                    }
                    : function(t) {
                        return t.type === Be && u || t.type === Ke && l
                    }
                    )
                }
            }
            ,
            e.onLevelUpdated = function(t, e) {
                var r = this
                  , i = e.details;
                if (this.media && i.hasProgramDateTime && this.hls.config.enableDateRangeMetadataCues) {
                    var n = this.dateRangeCuesAppended
                      , a = this.id3Track
                      , s = i.dateRanges
                      , o = Object.keys(s);
                    if (a)
                        for (var l = Object.keys(n).filter((function(t) {
                            return !o.includes(t)
                        }
                        )), u = function() {
                            var t = l[h];
                            Object.keys(n[t].cues).forEach((function(e) {
                                a.removeCue(n[t].cues[e])
                            }
                            )),
                            delete n[t]
                        }, h = l.length; h--; )
                            u();
                    var d = i.fragments[i.fragments.length - 1];
                    if (0 !== o.length && y(null == d ? void 0 : d.programDateTime)) {
                        this.id3Track || (this.id3Track = this.createTrack(this.media));
                        for (var c = d.programDateTime / 1e3 - d.start, f = He(), g = function() {
                            var t = o[v]
                              , e = s[t]
                              , i = We(e.startDate, c)
                              , a = n[t]
                              , l = (null == a ? void 0 : a.cues) || {}
                              , u = (null == a ? void 0 : a.durationKnown) || !1
                              , h = Ye
                              , d = e.endDate;
                            if (d)
                                h = We(d, c),
                                u = !0;
                            else if (e.endOnNext && !u) {
                                var g = o.reduce((function(t, r) {
                                    if (r !== e.id) {
                                        var i = s[r];
                                        if (i.class === e.class && i.startDate > e.startDate && (!t || e.startDate < t.startDate))
                                            return i
                                    }
                                    return t
                                }
                                ), null);
                                g && (h = We(g.startDate, c),
                                u = !0)
                            }
                            for (var m, p, y = Object.keys(e.attr), E = 0; E < y.length; E++) {
                                var T = y[E];
                                if ("ID" !== (p = T) && "CLASS" !== p && "START-DATE" !== p && "DURATION" !== p && "END-DATE" !== p && "END-ON-NEXT" !== p) {
                                    var S = l[T];
                                    if (S)
                                        u && !a.durationKnown && (S.endTime = h);
                                    else if (f) {
                                        var L = e.attr[T];
                                        P(T) && (m = L,
                                        L = Uint8Array.from(m.replace(/^0x/, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" ")).buffer);
                                        var A = Ve(f, i, h, {
                                            key: T,
                                            data: L
                                        }, Ge);
                                        A && (A.id = t,
                                        r.id3Track.addCue(A),
                                        l[T] = A)
                                    }
                                }
                            }
                            n[t] = {
                                cues: l,
                                dateRange: e,
                                durationKnown: u
                            }
                        }, v = 0; v < o.length; v++)
                            g()
                    }
                }
            }
            ,
            t
        }()
          , qe = function() {
            function t(t) {
                var e = this;
                this.hls = void 0,
                this.config = void 0,
                this.media = null,
                this.levelDetails = null,
                this.currentTime = 0,
                this.stallCount = 0,
                this._latency = null,
                this.timeupdateHandler = function() {
                    return e.timeupdate()
                }
                ,
                this.hls = t,
                this.config = t.config,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.unregisterListeners(),
                this.onMediaDetaching(),
                this.levelDetails = null,
                this.hls = this.timeupdateHandler = null
            }
            ,
            e.registerListeners = function() {
                this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.on(S.ERROR, this.onError, this)
            }
            ,
            e.unregisterListeners = function() {
                this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                this.hls.off(S.ERROR, this.onError, this)
            }
            ,
            e.onMediaAttached = function(t, e) {
                this.media = e.media,
                this.media.addEventListener("timeupdate", this.timeupdateHandler)
            }
            ,
            e.onMediaDetaching = function() {
                this.media && (this.media.removeEventListener("timeupdate", this.timeupdateHandler),
                this.media = null)
            }
            ,
            e.onManifestLoading = function() {
                this.levelDetails = null,
                this._latency = null,
                this.stallCount = 0
            }
            ,
            e.onLevelUpdated = function(t, e) {
                var r = e.details;
                this.levelDetails = r,
                r.advanced && this.timeupdate(),
                !r.live && this.media && this.media.removeEventListener("timeupdate", this.timeupdateHandler)
            }
            ,
            e.onError = function(t, e) {
                var r;
                e.details === A.BUFFER_STALLED_ERROR && (this.stallCount++,
                null != (r = this.levelDetails) && r.live && w.warn("[playback-rate-controller]: Stall detected, adjusting target latency"))
            }
            ,
            e.timeupdate = function() {
                var t = this.media
                  , e = this.levelDetails;
                if (t && e) {
                    this.currentTime = t.currentTime;
                    var r = this.computeLatency();
                    if (null !== r) {
                        this._latency = r;
                        var i = this.config
                          , n = i.lowLatencyMode
                          , a = i.maxLiveSyncPlaybackRate;
                        if (n && 1 !== a && e.live) {
                            var s = this.targetLatency;
                            if (null !== s) {
                                var o = r - s;
                                if (o < Math.min(this.maxLatency, s + e.targetduration) && o > .05 && this.forwardBufferLength > 1) {
                                    var l = Math.min(2, Math.max(1, a))
                                      , u = Math.round(2 / (1 + Math.exp(-.75 * o - this.edgeStalled)) * 20) / 20;
                                    t.playbackRate = Math.min(l, Math.max(1, u))
                                } else
                                    1 !== t.playbackRate && 0 !== t.playbackRate && (t.playbackRate = 1)
                            }
                        }
                    }
                }
            }
            ,
            e.estimateLiveEdge = function() {
                var t = this.levelDetails;
                return null === t ? null : t.edge + t.age
            }
            ,
            e.computeLatency = function() {
                var t = this.estimateLiveEdge();
                return null === t ? null : t - this.currentTime
            }
            ,
            s(t, [{
                key: "latency",
                get: function() {
                    return this._latency || 0
                }
            }, {
                key: "maxLatency",
                get: function() {
                    var t = this.config
                      , e = this.levelDetails;
                    return void 0 !== t.liveMaxLatencyDuration ? t.liveMaxLatencyDuration : e ? t.liveMaxLatencyDurationCount * e.targetduration : 0
                }
            }, {
                key: "targetLatency",
                get: function() {
                    var t = this.levelDetails;
                    if (null === t)
                        return null;
                    var e = t.holdBack
                      , r = t.partHoldBack
                      , i = t.targetduration
                      , n = this.config
                      , a = n.liveSyncDuration
                      , s = n.liveSyncDurationCount
                      , o = n.lowLatencyMode
                      , l = this.hls.userConfig
                      , u = o && r || e;
                    (l.liveSyncDuration || l.liveSyncDurationCount || 0 === u) && (u = void 0 !== a ? a : s * i);
                    var h = i;
                    return u + Math.min(1 * this.stallCount, h)
                }
            }, {
                key: "liveSyncPosition",
                get: function() {
                    var t = this.estimateLiveEdge()
                      , e = this.targetLatency
                      , r = this.levelDetails;
                    if (null === t || null === e || null === r)
                        return null;
                    var i = r.edge
                      , n = t - e - this.edgeStalled
                      , a = i - r.totalduration
                      , s = i - (this.config.lowLatencyMode && r.partTarget || r.targetduration);
                    return Math.min(Math.max(a, n), s)
                }
            }, {
                key: "drift",
                get: function() {
                    var t = this.levelDetails;
                    return null === t ? 1 : t.drift
                }
            }, {
                key: "edgeStalled",
                get: function() {
                    var t = this.levelDetails;
                    if (null === t)
                        return 0;
                    var e = 3 * (this.config.lowLatencyMode && t.partTarget || t.targetduration);
                    return Math.max(t.age - e, 0)
                }
            }, {
                key: "forwardBufferLength",
                get: function() {
                    var t = this.media
                      , e = this.levelDetails;
                    if (!t || !e)
                        return 0;
                    var r = t.buffered.length;
                    return (r ? t.buffered.end(r - 1) : e.edge) - this.currentTime
                }
            }]),
            t
        }()
          , Xe = ["NONE", "TYPE-0", "TYPE-1", null]
          , ze = ["SDR", "PQ", "HLG"]
          , Qe = ""
          , Je = "YES"
          , $e = "v2"
          , Ze = function() {
            function t(t, e, r) {
                this.msn = void 0,
                this.part = void 0,
                this.skip = void 0,
                this.msn = t,
                this.part = e,
                this.skip = r
            }
            return t.prototype.addDirectives = function(t) {
                var e = new self.URL(t);
                return void 0 !== this.msn && e.searchParams.set("_HLS_msn", this.msn.toString()),
                void 0 !== this.part && e.searchParams.set("_HLS_part", this.part.toString()),
                this.skip && e.searchParams.set("_HLS_skip", this.skip),
                e.href
            }
            ,
            t
        }()
          , tr = function() {
            function t(t) {
                this._attrs = void 0,
                this.audioCodec = void 0,
                this.bitrate = void 0,
                this.codecSet = void 0,
                this.url = void 0,
                this.frameRate = void 0,
                this.height = void 0,
                this.id = void 0,
                this.name = void 0,
                this.videoCodec = void 0,
                this.width = void 0,
                this.details = void 0,
                this.fragmentError = 0,
                this.loadError = 0,
                this.loaded = void 0,
                this.realBitrate = 0,
                this.supportedPromise = void 0,
                this.supportedResult = void 0,
                this._avgBitrate = 0,
                this._audioGroups = void 0,
                this._subtitleGroups = void 0,
                this._urlId = 0,
                this.url = [t.url],
                this._attrs = [t.attrs],
                this.bitrate = t.bitrate,
                t.details && (this.details = t.details),
                this.id = t.id || 0,
                this.name = t.name,
                this.width = t.width || 0,
                this.height = t.height || 0,
                this.frameRate = t.attrs.optionalFloat("FRAME-RATE", 0),
                this._avgBitrate = t.attrs.decimalInteger("AVERAGE-BANDWIDTH"),
                this.audioCodec = t.audioCodec,
                this.videoCodec = t.videoCodec,
                this.codecSet = [t.videoCodec, t.audioCodec].filter((function(t) {
                    return !!t
                }
                )).map((function(t) {
                    return t.substring(0, 4)
                }
                )).join(","),
                this.addGroupId("audio", t.attrs.AUDIO),
                this.addGroupId("text", t.attrs.SUBTITLES)
            }
            var e = t.prototype;
            return e.hasAudioGroup = function(t) {
                return er(this._audioGroups, t)
            }
            ,
            e.hasSubtitleGroup = function(t) {
                return er(this._subtitleGroups, t)
            }
            ,
            e.addGroupId = function(t, e) {
                if (e)
                    if ("audio" === t) {
                        var r = this._audioGroups;
                        r || (r = this._audioGroups = []),
                        -1 === r.indexOf(e) && r.push(e)
                    } else if ("text" === t) {
                        var i = this._subtitleGroups;
                        i || (i = this._subtitleGroups = []),
                        -1 === i.indexOf(e) && i.push(e)
                    }
            }
            ,
            e.addFallback = function() {}
            ,
            s(t, [{
                key: "maxBitrate",
                get: function() {
                    return Math.max(this.realBitrate, this.bitrate)
                }
            }, {
                key: "averageBitrate",
                get: function() {
                    return this._avgBitrate || this.realBitrate || this.bitrate
                }
            }, {
                key: "attrs",
                get: function() {
                    return this._attrs[0]
                }
            }, {
                key: "codecs",
                get: function() {
                    return this.attrs.CODECS || ""
                }
            }, {
                key: "pathwayId",
                get: function() {
                    return this.attrs["PATHWAY-ID"] || "."
                }
            }, {
                key: "videoRange",
                get: function() {
                    return this.attrs["VIDEO-RANGE"] || "SDR"
                }
            }, {
                key: "score",
                get: function() {
                    return this.attrs.optionalFloat("SCORE", 0)
                }
            }, {
                key: "uri",
                get: function() {
                    return this.url[0] || ""
                }
            }, {
                key: "audioGroups",
                get: function() {
                    return this._audioGroups
                }
            }, {
                key: "subtitleGroups",
                get: function() {
                    return this._subtitleGroups
                }
            }, {
                key: "urlId",
                get: function() {
                    return 0
                },
                set: function(t) {}
            }, {
                key: "audioGroupIds",
                get: function() {
                    return this.audioGroups ? [this.audioGroupId] : void 0
                }
            }, {
                key: "textGroupIds",
                get: function() {
                    return this.subtitleGroups ? [this.textGroupId] : void 0
                }
            }, {
                key: "audioGroupId",
                get: function() {
                    var t;
                    return null == (t = this.audioGroups) ? void 0 : t[0]
                }
            }, {
                key: "textGroupId",
                get: function() {
                    var t;
                    return null == (t = this.subtitleGroups) ? void 0 : t[0]
                }
            }]),
            t
        }();
        function er(t, e) {
            return !(!e || !t) && -1 !== t.indexOf(e)
        }
        function rr(t, e) {
            var r = e.startPTS;
            if (y(r)) {
                var i, n = 0;
                e.sn > t.sn ? (n = r - t.start,
                i = t) : (n = t.start - r,
                i = e),
                i.duration !== n && (i.duration = n)
            } else
                e.sn > t.sn ? t.cc === e.cc && t.minEndPTS ? e.start = t.start + (t.minEndPTS - t.start) : e.start = t.start + t.duration : e.start = Math.max(t.start - e.duration, 0)
        }
        function ir(t, e, r, i, n, a) {
            i - r <= 0 && (w.warn("Fragment should have a positive duration", e),
            i = r + e.duration,
            a = n + e.duration);
            var s = r
              , o = i
              , l = e.startPTS
              , u = e.endPTS;
            if (y(l)) {
                var h = Math.abs(l - r);
                y(e.deltaPTS) ? e.deltaPTS = Math.max(h, e.deltaPTS) : e.deltaPTS = h,
                s = Math.max(r, l),
                r = Math.min(r, l),
                n = Math.min(n, e.startDTS),
                o = Math.min(i, u),
                i = Math.max(i, u),
                a = Math.max(a, e.endDTS)
            }
            var d = r - e.start;
            0 !== e.start && (e.start = r),
            e.duration = i - e.start,
            e.startPTS = r,
            e.maxStartPTS = s,
            e.startDTS = n,
            e.endPTS = i,
            e.minEndPTS = o,
            e.endDTS = a;
            var c, f = e.sn;
            if (!t || f < t.startSN || f > t.endSN)
                return 0;
            var g = f - t.startSN
              , v = t.fragments;
            for (v[g] = e,
            c = g; c > 0; c--)
                rr(v[c], v[c - 1]);
            for (c = g; c < v.length - 1; c++)
                rr(v[c], v[c + 1]);
            return t.fragmentHint && rr(v[v.length - 1], t.fragmentHint),
            t.PTSKnown = t.alignedSliding = !0,
            d
        }
        function nr(t, e) {
            for (var r = null, i = t.fragments, n = i.length - 1; n >= 0; n--) {
                var a = i[n].initSegment;
                if (a) {
                    r = a;
                    break
                }
            }
            t.fragmentHint && delete t.fragmentHint.endPTS;
            var s, l, u, h, d, c = 0;
            if (function(t, e, r) {
                for (var i = e.skippedSegments, n = Math.max(t.startSN, e.startSN) - e.startSN, a = (t.fragmentHint ? 1 : 0) + (i ? e.endSN : Math.min(t.endSN, e.endSN)) - e.startSN, s = e.startSN - t.startSN, o = e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments, l = t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments, u = n; u <= a; u++) {
                    var h = l[s + u]
                      , d = o[u];
                    i && !d && u < i && (d = e.fragments[u] = h),
                    h && d && r(h, d)
                }
            }(t, e, (function(t, i) {
                t.relurl && (c = t.cc - i.cc),
                y(t.startPTS) && y(t.endPTS) && (i.start = i.startPTS = t.startPTS,
                i.startDTS = t.startDTS,
                i.maxStartPTS = t.maxStartPTS,
                i.endPTS = t.endPTS,
                i.endDTS = t.endDTS,
                i.minEndPTS = t.minEndPTS,
                i.duration = t.endPTS - t.startPTS,
                i.duration && (s = i),
                e.PTSKnown = e.alignedSliding = !0),
                i.elementaryStreams = t.elementaryStreams,
                i.loader = t.loader,
                i.stats = t.stats,
                t.initSegment && (i.initSegment = t.initSegment,
                r = t.initSegment)
            }
            )),
            r && (e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments).forEach((function(t) {
                var e;
                !t || t.initSegment && t.initSegment.relurl !== (null == (e = r) ? void 0 : e.relurl) || (t.initSegment = r)
            }
            )),
            e.skippedSegments)
                if (e.deltaUpdateFailed = e.fragments.some((function(t) {
                    return !t
                }
                )),
                e.deltaUpdateFailed) {
                    w.warn("[level-helper] Previous playlist missing segments skipped in delta playlist");
                    for (var f = e.skippedSegments; f--; )
                        e.fragments.shift();
                    e.startSN = e.fragments[0].sn,
                    e.startCC = e.fragments[0].cc
                } else
                    e.canSkipDateRanges && (e.dateRanges = (l = t.dateRanges,
                    u = e.dateRanges,
                    h = e.recentlyRemovedDateranges,
                    d = o({}, l),
                    h && h.forEach((function(t) {
                        delete d[t]
                    }
                    )),
                    Object.keys(u).forEach((function(t) {
                        var e = new F(u[t].attr,d[t]);
                        e.isValid ? d[t] = e : w.warn('Ignoring invalid Playlist Delta Update DATERANGE tag: "' + JSON.stringify(u[t].attr) + '"')
                    }
                    )),
                    d));
            var g = e.fragments;
            if (c) {
                w.warn("discontinuity sliding from playlist, take drift into account");
                for (var v = 0; v < g.length; v++)
                    g[v].cc += c
            }
            e.skippedSegments && (e.startCC = e.fragments[0].cc),
            function(t, e, r) {
                if (t && e)
                    for (var i = 0, n = 0, a = t.length; n <= a; n++) {
                        var s = t[n]
                          , o = e[n + i];
                        s && o && s.index === o.index && s.fragment.sn === o.fragment.sn ? r(s, o) : i--
                    }
            }(t.partList, e.partList, (function(t, e) {
                e.elementaryStreams = t.elementaryStreams,
                e.stats = t.stats
            }
            )),
            s ? ir(e, s, s.startPTS, s.endPTS, s.startDTS, s.endDTS) : ar(t, e),
            g.length && (e.totalduration = e.edge - g[0].start),
            e.driftStartTime = t.driftStartTime,
            e.driftStart = t.driftStart;
            var m = e.advancedDateTime;
            if (e.advanced && m) {
                var p = e.edge;
                e.driftStart || (e.driftStartTime = m,
                e.driftStart = p),
                e.driftEndTime = m,
                e.driftEnd = p
            } else
                e.driftEndTime = t.driftEndTime,
                e.driftEnd = t.driftEnd,
                e.advancedDateTime = t.advancedDateTime
        }
        function ar(t, e) {
            var r = e.startSN + e.skippedSegments - t.startSN
              , i = t.fragments;
            r < 0 || r >= i.length || sr(e, i[r].start)
        }
        function sr(t, e) {
            if (e) {
                for (var r = t.fragments, i = t.skippedSegments; i < r.length; i++)
                    r[i].start += e;
                t.fragmentHint && (t.fragmentHint.start += e)
            }
        }
        function or(t, e, r) {
            var i;
            return null != t && t.details ? lr(null == (i = t.details) ? void 0 : i.partList, e, r) : null
        }
        function lr(t, e, r) {
            if (t)
                for (var i = t.length; i--; ) {
                    var n = t[i];
                    if (n.index === r && n.fragment.sn === e)
                        return n
                }
            return null
        }
        function ur(t) {
            t.forEach((function(t, e) {
                var r = t.details;
                null != r && r.fragments && r.fragments.forEach((function(t) {
                    t.level = e
                }
                ))
            }
            ))
        }
        function hr(t) {
            switch (t.details) {
            case A.FRAG_LOAD_TIMEOUT:
            case A.KEY_LOAD_TIMEOUT:
            case A.LEVEL_LOAD_TIMEOUT:
            case A.MANIFEST_LOAD_TIMEOUT:
                return !0
            }
            return !1
        }
        function dr(t, e) {
            var r = hr(e);
            return t.default[(r ? "timeout" : "error") + "Retry"]
        }
        function cr(t, e) {
            var r = "linear" === t.backoff ? 1 : Math.pow(2, e);
            return Math.min(r * t.retryDelayMs, t.maxRetryDelayMs)
        }
        function fr(t) {
            return i(i({}, t), {
                errorRetry: null,
                timeoutRetry: null
            })
        }
        function gr(t, e, r, i) {
            if (!t)
                return !1;
            var n = null == i ? void 0 : i.code
              , a = e < t.maxNumRetry && (function(t) {
                return 0 === t && !1 === navigator.onLine || !!t && (t < 400 || t > 499)
            }(n) || !!r);
            return t.shouldRetry ? t.shouldRetry(t, e, r, i, a) : a
        }
        var vr = function(t, e) {
            for (var r = 0, i = t.length - 1, n = null, a = null; r <= i; ) {
                var s = e(a = t[n = (r + i) / 2 | 0]);
                if (s > 0)
                    r = n + 1;
                else {
                    if (!(s < 0))
                        return a;
                    i = n - 1
                }
            }
            return null
        };
        function mr(t, e, r, i) {
            void 0 === r && (r = 0),
            void 0 === i && (i = 0);
            var n = null;
            if (t) {
                n = e[t.sn - e[0].sn + 1] || null;
                var a = t.endDTS - r;
                a > 0 && a < 15e-7 && (r += 15e-7)
            } else
                0 === r && 0 === e[0].start && (n = e[0]);
            if (n && (!t || t.level === n.level) && 0 === pr(r, i, n))
                return n;
            var s = vr(e, pr.bind(null, r, i));
            return !s || s === t && n ? n : s
        }
        function pr(t, e, r) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            r.start <= t && r.start + r.duration > t)
                return 0;
            var i = Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
            return r.start + r.duration - i <= t ? 1 : r.start - i > t && r.start ? -1 : 0
        }
        function yr(t, e, r) {
            var i = 1e3 * Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
            return (r.endProgramDateTime || 0) - i > t
        }
        var Er = 0
          , Tr = 2
          , Sr = 3
          , Lr = 5
          , Ar = 0
          , Rr = 1
          , kr = 2
          , br = function() {
            function t(t) {
                this.hls = void 0,
                this.playlistError = 0,
                this.penalizedRenditions = {},
                this.log = void 0,
                this.warn = void 0,
                this.error = void 0,
                this.hls = t,
                this.log = w.log.bind(w, "[info]:"),
                this.warn = w.warn.bind(w, "[warning]:"),
                this.error = w.error.bind(w, "[error]:"),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.registerListeners = function() {
                var t = this.hls;
                t.on(S.ERROR, this.onError, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t && (t.off(S.ERROR, this.onError, this),
                t.off(S.ERROR, this.onErrorOut, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this))
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.hls = null,
                this.penalizedRenditions = {}
            }
            ,
            e.startLoad = function(t) {}
            ,
            e.stopLoad = function() {
                this.playlistError = 0
            }
            ,
            e.getVariantLevelIndex = function(t) {
                return (null == t ? void 0 : t.type) === Ie ? t.level : this.hls.loadLevel
            }
            ,
            e.onManifestLoading = function() {
                this.playlistError = 0,
                this.penalizedRenditions = {}
            }
            ,
            e.onLevelUpdated = function() {
                this.playlistError = 0
            }
            ,
            e.onError = function(t, e) {
                var r, i;
                if (!e.fatal) {
                    var n = this.hls
                      , a = e.context;
                    switch (e.details) {
                    case A.FRAG_LOAD_ERROR:
                    case A.FRAG_LOAD_TIMEOUT:
                    case A.KEY_LOAD_ERROR:
                    case A.KEY_LOAD_TIMEOUT:
                        return void (e.errorAction = this.getFragRetryOrSwitchAction(e));
                    case A.FRAG_PARSING_ERROR:
                        if (null != (r = e.frag) && r.gap)
                            return void (e.errorAction = {
                                action: Er,
                                flags: Ar
                            });
                    case A.FRAG_GAP:
                    case A.FRAG_DECRYPT_ERROR:
                        return e.errorAction = this.getFragRetryOrSwitchAction(e),
                        void (e.errorAction.action = Tr);
                    case A.LEVEL_EMPTY_ERROR:
                    case A.LEVEL_PARSING_ERROR:
                        var s, o, l = e.parent === Ie ? e.level : n.loadLevel;
                        return void (e.details === A.LEVEL_EMPTY_ERROR && null != (s = e.context) && null != (o = s.levelDetails) && o.live ? e.errorAction = this.getPlaylistRetryOrSwitchAction(e, l) : (e.levelRetry = !1,
                        e.errorAction = this.getLevelSwitchAction(e, l)));
                    case A.LEVEL_LOAD_ERROR:
                    case A.LEVEL_LOAD_TIMEOUT:
                        return void ("number" == typeof (null == a ? void 0 : a.level) && (e.errorAction = this.getPlaylistRetryOrSwitchAction(e, a.level)));
                    case A.AUDIO_TRACK_LOAD_ERROR:
                    case A.AUDIO_TRACK_LOAD_TIMEOUT:
                    case A.SUBTITLE_LOAD_ERROR:
                    case A.SUBTITLE_TRACK_LOAD_TIMEOUT:
                        if (a) {
                            var u = n.levels[n.loadLevel];
                            if (u && (a.type === be && u.hasAudioGroup(a.groupId) || a.type === De && u.hasSubtitleGroup(a.groupId)))
                                return e.errorAction = this.getPlaylistRetryOrSwitchAction(e, n.loadLevel),
                                e.errorAction.action = Tr,
                                void (e.errorAction.flags = Rr)
                        }
                        return;
                    case A.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:
                        var h = n.levels[n.loadLevel]
                          , d = null == h ? void 0 : h.attrs["HDCP-LEVEL"];
                        return void (d ? e.errorAction = {
                            action: Tr,
                            flags: kr,
                            hdcpLevel: d
                        } : this.keySystemError(e));
                    case A.BUFFER_ADD_CODEC_ERROR:
                    case A.REMUX_ALLOC_ERROR:
                    case A.BUFFER_APPEND_ERROR:
                        return void (e.errorAction = this.getLevelSwitchAction(e, null != (i = e.level) ? i : n.loadLevel));
                    case A.INTERNAL_EXCEPTION:
                    case A.BUFFER_APPENDING_ERROR:
                    case A.BUFFER_FULL_ERROR:
                    case A.LEVEL_SWITCH_ERROR:
                    case A.BUFFER_STALLED_ERROR:
                    case A.BUFFER_SEEK_OVER_HOLE:
                    case A.BUFFER_NUDGE_ON_STALL:
                        return void (e.errorAction = {
                            action: Er,
                            flags: Ar
                        })
                    }
                    e.type === L.KEY_SYSTEM_ERROR && this.keySystemError(e)
                }
            }
            ,
            e.keySystemError = function(t) {
                var e = this.getVariantLevelIndex(t.frag);
                t.levelRetry = !1,
                t.errorAction = this.getLevelSwitchAction(t, e)
            }
            ,
            e.getPlaylistRetryOrSwitchAction = function(t, e) {
                var r = dr(this.hls.config.playlistLoadPolicy, t)
                  , i = this.playlistError++;
                if (gr(r, i, hr(t), t.response))
                    return {
                        action: Lr,
                        flags: Ar,
                        retryConfig: r,
                        retryCount: i
                    };
                var n = this.getLevelSwitchAction(t, e);
                return r && (n.retryConfig = r,
                n.retryCount = i),
                n
            }
            ,
            e.getFragRetryOrSwitchAction = function(t) {
                var e = this.hls
                  , r = this.getVariantLevelIndex(t.frag)
                  , i = e.levels[r]
                  , n = e.config
                  , a = n.fragLoadPolicy
                  , s = n.keyLoadPolicy
                  , o = dr(t.details.startsWith("key") ? s : a, t)
                  , l = e.levels.reduce((function(t, e) {
                    return t + e.fragmentError
                }
                ), 0);
                if (i && (t.details !== A.FRAG_GAP && i.fragmentError++,
                gr(o, l, hr(t), t.response)))
                    return {
                        action: Lr,
                        flags: Ar,
                        retryConfig: o,
                        retryCount: l
                    };
                var u = this.getLevelSwitchAction(t, r);
                return o && (u.retryConfig = o,
                u.retryCount = l),
                u
            }
            ,
            e.getLevelSwitchAction = function(t, e) {
                var r = this.hls;
                null == e && (e = r.loadLevel);
                var i = this.hls.levels[e];
                if (i) {
                    var n, a, s = t.details;
                    i.loadError++,
                    s === A.BUFFER_APPEND_ERROR && i.fragmentError++;
                    var o = -1
                      , l = r.levels
                      , u = r.loadLevel
                      , h = r.minAutoLevel
                      , d = r.maxAutoLevel;
                    r.autoLevelEnabled || (r.loadLevel = -1);
                    for (var c, f = null == (n = t.frag) ? void 0 : n.type, g = (f === we && s === A.FRAG_PARSING_ERROR || "audio" === t.sourceBufferName && (s === A.BUFFER_ADD_CODEC_ERROR || s === A.BUFFER_APPEND_ERROR)) && l.some((function(t) {
                        var e = t.audioCodec;
                        return i.audioCodec !== e
                    }
                    )), v = "video" === t.sourceBufferName && (s === A.BUFFER_ADD_CODEC_ERROR || s === A.BUFFER_APPEND_ERROR) && l.some((function(t) {
                        var e = t.codecSet
                          , r = t.audioCodec;
                        return i.codecSet !== e && i.audioCodec === r
                    }
                    )), m = null != (a = t.context) ? a : {}, p = m.type, y = m.groupId, E = function() {
                        var e = (T + u) % l.length;
                        if (e !== u && e >= h && e <= d && 0 === l[e].loadError) {
                            var r, n, a = l[e];
                            if (s === A.FRAG_GAP && t.frag) {
                                var c = l[e].details;
                                if (c) {
                                    var m = mr(t.frag, c.fragments, t.frag.start);
                                    if (null != m && m.gap)
                                        return 0
                                }
                            } else {
                                if (p === be && a.hasAudioGroup(y) || p === De && a.hasSubtitleGroup(y))
                                    return 0;
                                if (f === we && null != (r = i.audioGroups) && r.some((function(t) {
                                    return a.hasAudioGroup(t)
                                }
                                )) || f === Ce && null != (n = i.subtitleGroups) && n.some((function(t) {
                                    return a.hasSubtitleGroup(t)
                                }
                                )) || g && i.audioCodec === a.audioCodec || !g && i.audioCodec !== a.audioCodec || v && i.codecSet === a.codecSet)
                                    return 0
                            }
                            return o = e,
                            1
                        }
                    }, T = l.length; T-- && (0 === (c = E()) || 1 !== c); )
                        ;
                    if (o > -1 && r.loadLevel !== o)
                        return t.levelRetry = !0,
                        this.playlistError = 0,
                        {
                            action: Tr,
                            flags: Ar,
                            nextAutoLevel: o
                        }
                }
                return {
                    action: Tr,
                    flags: Rr
                }
            }
            ,
            e.onErrorOut = function(t, e) {
                var r;
                switch (null == (r = e.errorAction) ? void 0 : r.action) {
                case Er:
                    break;
                case Tr:
                    this.sendAlternateToPenaltyBox(e),
                    e.errorAction.resolved || e.details === A.FRAG_GAP ? /MediaSource readyState: ended/.test(e.error.message) && (this.warn('MediaSource ended after "' + e.sourceBufferName + '" sourceBuffer append error. Attempting to recover from media error.'),
                    this.hls.recoverMediaError()) : e.fatal = !0
                }
                e.fatal && this.hls.stopLoad()
            }
            ,
            e.sendAlternateToPenaltyBox = function(t) {
                var e = this.hls
                  , r = t.errorAction;
                if (r) {
                    var i = r.flags
                      , n = r.hdcpLevel
                      , a = r.nextAutoLevel;
                    switch (i) {
                    case Ar:
                        this.switchLevel(t, a);
                        break;
                    case kr:
                        n && (e.maxHdcpLevel = Xe[Xe.indexOf(n) - 1],
                        r.resolved = !0),
                        this.warn('Restricting playback to HDCP-LEVEL of "' + e.maxHdcpLevel + '" or lower')
                    }
                    r.resolved || this.switchLevel(t, a)
                }
            }
            ,
            e.switchLevel = function(t, e) {
                void 0 !== e && t.errorAction && (this.warn("switching to level " + e + " after " + t.details),
                this.hls.nextAutoLevel = e,
                t.errorAction.resolved = !0,
                this.hls.nextLoadLevel = this.hls.nextAutoLevel)
            }
            ,
            t
        }()
          , Dr = function() {
            function t(t, e) {
                this.hls = void 0,
                this.timer = -1,
                this.requestScheduled = -1,
                this.canLoad = !1,
                this.log = void 0,
                this.warn = void 0,
                this.log = w.log.bind(w, e + ":"),
                this.warn = w.warn.bind(w, e + ":"),
                this.hls = t
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.clearTimer(),
                this.hls = this.log = this.warn = null
            }
            ,
            e.clearTimer = function() {
                -1 !== this.timer && (self.clearTimeout(this.timer),
                this.timer = -1)
            }
            ,
            e.startLoad = function() {
                this.canLoad = !0,
                this.requestScheduled = -1,
                this.loadPlaylist()
            }
            ,
            e.stopLoad = function() {
                this.canLoad = !1,
                this.clearTimer()
            }
            ,
            e.switchParams = function(t, e) {
                var r = null == e ? void 0 : e.renditionReports;
                if (r) {
                    for (var i = -1, n = 0; n < r.length; n++) {
                        var a = r[n]
                          , s = void 0;
                        try {
                            s = new self.URL(a.URI,e.url).href
                        } catch (t) {
                            w.warn("Could not construct new URL for Rendition Report: " + t),
                            s = a.URI || ""
                        }
                        if (s === t) {
                            i = n;
                            break
                        }
                        s === t.substring(0, s.length) && (i = n)
                    }
                    if (-1 !== i) {
                        var o = r[i]
                          , l = parseInt(o["LAST-MSN"]) || (null == e ? void 0 : e.lastPartSn)
                          , u = parseInt(o["LAST-PART"]) || (null == e ? void 0 : e.lastPartIndex);
                        if (this.hls.config.lowLatencyMode) {
                            var h = Math.min(e.age - e.partTarget, e.targetduration);
                            u >= 0 && h > e.partTarget && (u += 1)
                        }
                        return new Ze(l,u >= 0 ? u : void 0,Qe)
                    }
                }
            }
            ,
            e.loadPlaylist = function(t) {
                -1 === this.requestScheduled && (this.requestScheduled = self.performance.now())
            }
            ,
            e.shouldLoadPlaylist = function(t) {
                return this.canLoad && !!t && !!t.url && (!t.details || t.details.live)
            }
            ,
            e.shouldReloadPlaylist = function(t) {
                return -1 === this.timer && -1 === this.requestScheduled && this.shouldLoadPlaylist(t)
            }
            ,
            e.playlistLoaded = function(t, e, r) {
                var i = this
                  , n = e.details
                  , a = e.stats
                  , s = self.performance.now()
                  , o = a.loading.first ? Math.max(0, s - a.loading.first) : 0;
                if (n.advancedDateTime = Date.now() - o,
                n.live || null != r && r.live) {
                    if (n.reloaded(r),
                    r && this.log("live playlist " + t + " " + (n.advanced ? "REFRESHED " + n.lastPartSn + "-" + n.lastPartIndex : n.updated ? "UPDATED" : "MISSED")),
                    r && n.fragments.length > 0 && nr(r, n),
                    !this.canLoad || !n.live)
                        return;
                    var l, u = void 0, h = void 0;
                    if (n.canBlockReload && n.endSN && n.advanced) {
                        var d = this.hls.config.lowLatencyMode
                          , c = n.lastPartSn
                          , f = n.endSN
                          , g = n.lastPartIndex
                          , v = c === f;
                        -1 !== g ? (u = v ? f + 1 : c,
                        h = v ? d ? 0 : g : g + 1) : u = f + 1;
                        var m = n.age
                          , p = m + n.ageHeader
                          , y = Math.min(p - n.partTarget, 1.5 * n.targetduration);
                        if (y > 0) {
                            if (r && y > r.tuneInGoal)
                                this.warn("CDN Tune-in goal increased from: " + r.tuneInGoal + " to: " + y + " with playlist age: " + n.age),
                                y = 0;
                            else {
                                var E = Math.floor(y / n.targetduration);
                                u += E,
                                void 0 !== h && (h += Math.round(y % n.targetduration / n.partTarget)),
                                this.log("CDN Tune-in age: " + n.ageHeader + "s last advanced " + m.toFixed(2) + "s goal: " + y + " skip sn " + E + " to part " + h)
                            }
                            n.tuneInGoal = y
                        }
                        if (l = this.getDeliveryDirectives(n, e.deliveryDirectives, u, h),
                        d || !v)
                            return void this.loadPlaylist(l)
                    } else
                        (n.canBlockReload || n.canSkipUntil) && (l = this.getDeliveryDirectives(n, e.deliveryDirectives, u, h));
                    var T = this.hls.mainForwardBufferInfo
                      , S = T ? T.end - T.len : 0
                      , L = function(t, e) {
                        void 0 === e && (e = 1 / 0);
                        var r = 1e3 * t.targetduration;
                        if (t.updated) {
                            var i = t.fragments;
                            if (i.length && 4 * r > e) {
                                var n = 1e3 * i[i.length - 1].duration;
                                n < r && (r = n)
                            }
                        } else
                            r /= 2;
                        return Math.round(r)
                    }(n, 1e3 * (n.edge - S));
                    n.updated && s > this.requestScheduled + L && (this.requestScheduled = a.loading.start),
                    void 0 !== u && n.canBlockReload ? this.requestScheduled = a.loading.first + L - (1e3 * n.partTarget || 1e3) : -1 === this.requestScheduled || this.requestScheduled + L < s ? this.requestScheduled = s : this.requestScheduled - s <= 0 && (this.requestScheduled += L);
                    var A = this.requestScheduled - s;
                    A = Math.max(0, A),
                    this.log("reload live playlist " + t + " in " + Math.round(A) + " ms"),
                    this.timer = self.setTimeout((function() {
                        return i.loadPlaylist(l)
                    }
                    ), A)
                } else
                    this.clearTimer()
            }
            ,
            e.getDeliveryDirectives = function(t, e, r, i) {
                var n = function(t, e) {
                    var r = t.canSkipUntil
                      , i = t.canSkipDateRanges
                      , n = t.endSN;
                    return r && (void 0 !== e ? e - n : 0) < r ? i ? $e : Je : Qe
                }(t, r);
                return null != e && e.skip && t.deltaUpdateFailed && (r = e.msn,
                i = e.part,
                n = Qe),
                new Ze(r,i,n)
            }
            ,
            e.checkRetry = function(t) {
                var e = this
                  , r = t.details
                  , i = hr(t)
                  , n = t.errorAction
                  , a = n || {}
                  , s = a.action
                  , o = a.retryCount
                  , l = void 0 === o ? 0 : o
                  , u = a.retryConfig
                  , h = !!n && !!u && (s === Lr || !n.resolved && s === Tr);
                if (h) {
                    var d;
                    if (this.requestScheduled = -1,
                    l >= u.maxNumRetry)
                        return !1;
                    if (i && null != (d = t.context) && d.deliveryDirectives)
                        this.warn("Retrying playlist loading " + (l + 1) + "/" + u.maxNumRetry + ' after "' + r + '" without delivery-directives'),
                        this.loadPlaylist();
                    else {
                        var c = cr(u, l);
                        this.timer = self.setTimeout((function() {
                            return e.loadPlaylist()
                        }
                        ), c),
                        this.warn("Retrying playlist loading " + (l + 1) + "/" + u.maxNumRetry + ' after "' + r + '" in ' + c + "ms")
                    }
                    t.levelRetry = !0,
                    n.resolved = !0
                }
                return h
            }
            ,
            t
        }()
          , Ir = function() {
            function t(t, e, r) {
                void 0 === e && (e = 0),
                void 0 === r && (r = 0),
                this.halfLife = void 0,
                this.alpha_ = void 0,
                this.estimate_ = void 0,
                this.totalWeight_ = void 0,
                this.halfLife = t,
                this.alpha_ = t ? Math.exp(Math.log(.5) / t) : 0,
                this.estimate_ = e,
                this.totalWeight_ = r
            }
            var e = t.prototype;
            return e.sample = function(t, e) {
                var r = Math.pow(this.alpha_, t);
                this.estimate_ = e * (1 - r) + r * this.estimate_,
                this.totalWeight_ += t
            }
            ,
            e.getTotalWeight = function() {
                return this.totalWeight_
            }
            ,
            e.getEstimate = function() {
                if (this.alpha_) {
                    var t = 1 - Math.pow(this.alpha_, this.totalWeight_);
                    if (t)
                        return this.estimate_ / t
                }
                return this.estimate_
            }
            ,
            t
        }()
          , wr = function() {
            function t(t, e, r, i) {
                void 0 === i && (i = 100),
                this.defaultEstimate_ = void 0,
                this.minWeight_ = void 0,
                this.minDelayMs_ = void 0,
                this.slow_ = void 0,
                this.fast_ = void 0,
                this.defaultTTFB_ = void 0,
                this.ttfb_ = void 0,
                this.defaultEstimate_ = r,
                this.minWeight_ = .001,
                this.minDelayMs_ = 50,
                this.slow_ = new Ir(t),
                this.fast_ = new Ir(e),
                this.defaultTTFB_ = i,
                this.ttfb_ = new Ir(t)
            }
            var e = t.prototype;
            return e.update = function(t, e) {
                var r = this.slow_
                  , i = this.fast_
                  , n = this.ttfb_;
                r.halfLife !== t && (this.slow_ = new Ir(t,r.getEstimate(),r.getTotalWeight())),
                i.halfLife !== e && (this.fast_ = new Ir(e,i.getEstimate(),i.getTotalWeight())),
                n.halfLife !== t && (this.ttfb_ = new Ir(t,n.getEstimate(),n.getTotalWeight()))
            }
            ,
            e.sample = function(t, e) {
                var r = (t = Math.max(t, this.minDelayMs_)) / 1e3
                  , i = 8 * e / r;
                this.fast_.sample(r, i),
                this.slow_.sample(r, i)
            }
            ,
            e.sampleTTFB = function(t) {
                var e = t / 1e3
                  , r = Math.sqrt(2) * Math.exp(-Math.pow(e, 2) / 2);
                this.ttfb_.sample(r, Math.max(t, 5))
            }
            ,
            e.canEstimate = function() {
                return this.fast_.getTotalWeight() >= this.minWeight_
            }
            ,
            e.getEstimate = function() {
                return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
            }
            ,
            e.getEstimateTTFB = function() {
                return this.ttfb_.getTotalWeight() >= this.minWeight_ ? this.ttfb_.getEstimate() : this.defaultTTFB_
            }
            ,
            e.destroy = function() {}
            ,
            t
        }()
          , Cr = {
            supported: !0,
            configurations: [],
            decodingInfoResults: [{
                supported: !0,
                powerEfficient: !0,
                smooth: !0
            }]
        }
          , _r = {};
        function xr(t, e, r) {
            var n = t.videoCodec
              , a = t.audioCodec;
            if (!n || !a || !r)
                return Promise.resolve(Cr);
            var s = {
                width: t.width,
                height: t.height,
                bitrate: Math.ceil(Math.max(.9 * t.bitrate, t.averageBitrate)),
                framerate: t.frameRate || 30
            }
              , o = t.videoRange;
            "SDR" !== o && (s.transferFunction = o.toLowerCase());
            var l = n.split(",").map((function(t) {
                return {
                    type: "media-source",
                    video: i(i({}, s), {}, {
                        contentType: ne(t, "video")
                    })
                }
            }
            ));
            return a && t.audioGroups && t.audioGroups.forEach((function(t) {
                var r;
                t && (null == (r = e.groups[t]) || r.tracks.forEach((function(e) {
                    if (e.groupId === t) {
                        var r = e.channels || ""
                          , i = parseFloat(r);
                        y(i) && i > 2 && l.push.apply(l, a.split(",").map((function(t) {
                            return {
                                type: "media-source",
                                audio: {
                                    contentType: ne(t, "audio"),
                                    channels: "" + i
                                }
                            }
                        }
                        )))
                    }
                }
                )))
            }
            )),
            Promise.all(l.map((function(t) {
                var e = function(t) {
                    var e = t.audio
                      , r = t.video
                      , i = r || e;
                    if (i) {
                        var n = i.contentType.split('"')[1];
                        if (r)
                            return "r" + r.height + "x" + r.width + "f" + Math.ceil(r.framerate) + (r.transferFunction || "sd") + "_" + n + "_" + Math.ceil(r.bitrate / 1e5);
                        if (e)
                            return "c" + e.channels + (e.spatialRendering ? "s" : "n") + "_" + n
                    }
                    return ""
                }(t);
                return _r[e] || (_r[e] = r.decodingInfo(t))
            }
            ))).then((function(t) {
                return {
                    supported: !t.some((function(t) {
                        return !t.supported
                    }
                    )),
                    configurations: l,
                    decodingInfoResults: t
                }
            }
            )).catch((function(t) {
                return {
                    supported: !1,
                    configurations: l,
                    decodingInfoResults: [],
                    error: t
                }
            }
            ))
        }
        function Pr(t, e) {
            var r = !1
              , i = [];
            return t && (r = "SDR" !== t,
            i = [t]),
            e && (i = e.allowedVideoRanges || ze.slice(0),
            i = (r = void 0 !== e.preferHDR ? e.preferHDR : function() {
                if ("function" == typeof matchMedia) {
                    var t = matchMedia("(dynamic-range: high)")
                      , e = matchMedia("bad query");
                    if (t.media !== e.media)
                        return !0 === t.matches
                }
                return !1
            }()) ? i.filter((function(t) {
                return "SDR" !== t
            }
            )) : ["SDR"]),
            {
                preferHDR: r,
                allowedVideoRanges: i
            }
        }
        function Fr(t, e) {
            w.log('[abr] start candidates with "' + t + '" ignored because ' + e)
        }
        function Mr(t, e, r) {
            if ("attrs"in t) {
                var i = e.indexOf(t);
                if (-1 !== i)
                    return i
            }
            for (var n = 0; n < e.length; n++)
                if (Or(t, e[n], r))
                    return n;
            return -1
        }
        function Or(t, e, r) {
            var i = t.groupId
              , n = t.name
              , a = t.lang
              , s = t.assocLang
              , o = t.characteristics
              , l = t.default
              , u = t.forced;
            return (void 0 === i || e.groupId === i) && (void 0 === n || e.name === n) && (void 0 === a || e.lang === a) && (void 0 === a || e.assocLang === s) && (void 0 === l || e.default === l) && (void 0 === u || e.forced === u) && (void 0 === o || function(t, e) {
                void 0 === e && (e = "");
                var r = t.split(",")
                  , i = e.split(",");
                return r.length === i.length && !r.some((function(t) {
                    return -1 === i.indexOf(t)
                }
                ))
            }(o, e.characteristics)) && (void 0 === r || r(t, e))
        }
        function Nr(t, e) {
            var r = t.audioCodec
              , i = t.channels;
            return !(void 0 !== r && (e.audioCodec || "").substring(0, 4) !== r.substring(0, 4) || void 0 !== i && i !== (e.channels || "2"))
        }
        function Ur(t, e, r) {
            for (var i = e; i; i--)
                if (r(t[i]))
                    return i;
            for (var n = e + 1; n < t.length; n++)
                if (r(t[n]))
                    return n;
            return -1
        }
        var Br = function() {
            function t(t) {
                var e = this;
                this.hls = void 0,
                this.lastLevelLoadSec = 0,
                this.lastLoadedFragLevel = -1,
                this.firstSelection = -1,
                this._nextAutoLevel = -1,
                this.nextAutoLevelKey = "",
                this.audioTracksByGroup = null,
                this.codecTiers = null,
                this.timer = -1,
                this.fragCurrent = null,
                this.partCurrent = null,
                this.bitrateTestDelay = 0,
                this.bwEstimator = void 0,
                this._abandonRulesCheck = function() {
                    var t = e.fragCurrent
                      , r = e.partCurrent
                      , i = e.hls
                      , n = i.autoLevelEnabled
                      , a = i.media;
                    if (t && a) {
                        var s = performance.now()
                          , o = r ? r.stats : t.stats
                          , l = r ? r.duration : t.duration
                          , u = s - o.loading.start
                          , h = i.minAutoLevel;
                        if (o.aborted || o.loaded && o.loaded === o.total || t.level <= h)
                            return e.clearTimer(),
                            void (e._nextAutoLevel = -1);
                        if (n && !a.paused && a.playbackRate && a.readyState) {
                            var d = i.mainForwardBufferInfo;
                            if (null !== d) {
                                var c = e.bwEstimator.getEstimateTTFB()
                                  , f = Math.abs(a.playbackRate);
                                if (!(u <= Math.max(c, l / (2 * f) * 1e3))) {
                                    var g = d.len / f
                                      , v = o.loading.first ? o.loading.first - o.loading.start : -1
                                      , m = o.loaded && v > -1
                                      , p = e.getBwEstimate()
                                      , E = i.levels
                                      , T = E[t.level]
                                      , L = o.total || Math.max(o.loaded, Math.round(l * T.averageBitrate / 8))
                                      , A = m ? u - v : u;
                                    A < 1 && m && (A = Math.min(u, 8 * o.loaded / p));
                                    var R = m ? 1e3 * o.loaded / A : 0
                                      , k = R ? (L - o.loaded) / R : 8 * L / p + c / 1e3;
                                    if (!(k <= g)) {
                                        var b, D = R ? 8 * R : p, I = Number.POSITIVE_INFINITY;
                                        for (b = t.level - 1; b > h; b--) {
                                            var C = E[b].maxBitrate;
                                            if ((I = e.getTimeToLoadFrag(c / 1e3, D, l * C, !E[b].details)) < g)
                                                break
                                        }
                                        if (!(I >= k || I > 10 * l)) {
                                            i.nextLoadLevel = i.nextAutoLevel = b,
                                            m ? e.bwEstimator.sample(u - Math.min(c, v), o.loaded) : e.bwEstimator.sampleTTFB(u);
                                            var _ = E[b].maxBitrate;
                                            e.getBwEstimate() * e.hls.config.abrBandWidthUpFactor > _ && e.resetEstimator(_),
                                            e.clearTimer(),
                                            w.warn("[abr] Fragment " + t.sn + (r ? " part " + r.index : "") + " of level " + t.level + " is loading too slowly;\n      Time to underbuffer: " + g.toFixed(3) + " s\n      Estimated load time for current fragment: " + k.toFixed(3) + " s\n      Estimated load time for down switch fragment: " + I.toFixed(3) + " s\n      TTFB estimate: " + (0 | v) + " ms\n      Current BW estimate: " + (y(p) ? 0 | p : "Unknown") + " bps\n      New BW estimate: " + (0 | e.getBwEstimate()) + " bps\n      Switching to level " + b + " @ " + (0 | _) + " bps"),
                                            i.trigger(S.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                frag: t,
                                                part: r,
                                                stats: o
                                            })
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                ,
                this.hls = t,
                this.bwEstimator = this.initEstimator(),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.resetEstimator = function(t) {
                t && (w.log("setting initial bwe to " + t),
                this.hls.config.abrEwmaDefaultEstimate = t),
                this.firstSelection = -1,
                this.bwEstimator = this.initEstimator()
            }
            ,
            e.initEstimator = function() {
                var t = this.hls.config;
                return new wr(t.abrEwmaSlowVoD,t.abrEwmaFastVoD,t.abrEwmaDefaultEstimate)
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.FRAG_LOADING, this.onFragLoading, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.MAX_AUTO_LEVEL_UPDATED, this.onMaxAutoLevelUpdated, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t && (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.FRAG_LOADING, this.onFragLoading, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.MAX_AUTO_LEVEL_UPDATED, this.onMaxAutoLevelUpdated, this),
                t.off(S.ERROR, this.onError, this))
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.clearTimer(),
                this.hls = this._abandonRulesCheck = null,
                this.fragCurrent = this.partCurrent = null
            }
            ,
            e.onManifestLoading = function(t, e) {
                this.lastLoadedFragLevel = -1,
                this.firstSelection = -1,
                this.lastLevelLoadSec = 0,
                this.fragCurrent = this.partCurrent = null,
                this.onLevelsUpdated(),
                this.clearTimer()
            }
            ,
            e.onLevelsUpdated = function() {
                this.lastLoadedFragLevel > -1 && this.fragCurrent && (this.lastLoadedFragLevel = this.fragCurrent.level),
                this._nextAutoLevel = -1,
                this.onMaxAutoLevelUpdated(),
                this.codecTiers = null,
                this.audioTracksByGroup = null
            }
            ,
            e.onMaxAutoLevelUpdated = function() {
                this.firstSelection = -1,
                this.nextAutoLevelKey = ""
            }
            ,
            e.onFragLoading = function(t, e) {
                var r, i = e.frag;
                this.ignoreFragment(i) || (i.bitrateTest || (this.fragCurrent = i,
                this.partCurrent = null != (r = e.part) ? r : null),
                this.clearTimer(),
                this.timer = self.setInterval(this._abandonRulesCheck, 100))
            }
            ,
            e.onLevelSwitching = function(t, e) {
                this.clearTimer()
            }
            ,
            e.onError = function(t, e) {
                if (!e.fatal)
                    switch (e.details) {
                    case A.BUFFER_ADD_CODEC_ERROR:
                    case A.BUFFER_APPEND_ERROR:
                        this.lastLoadedFragLevel = -1,
                        this.firstSelection = -1;
                        break;
                    case A.FRAG_LOAD_TIMEOUT:
                        var r = e.frag
                          , i = this.fragCurrent
                          , n = this.partCurrent;
                        if (r && i && r.sn === i.sn && r.level === i.level) {
                            var a = performance.now()
                              , s = n ? n.stats : r.stats
                              , o = a - s.loading.start
                              , l = s.loading.first ? s.loading.first - s.loading.start : -1;
                            if (s.loaded && l > -1) {
                                var u = this.bwEstimator.getEstimateTTFB();
                                this.bwEstimator.sample(o - Math.min(u, l), s.loaded)
                            } else
                                this.bwEstimator.sampleTTFB(o)
                        }
                    }
            }
            ,
            e.getTimeToLoadFrag = function(t, e, r, i) {
                return t + r / e + (i ? this.lastLevelLoadSec : 0)
            }
            ,
            e.onLevelLoaded = function(t, e) {
                var r = this.hls.config
                  , i = e.stats.loading
                  , n = i.end - i.start;
                y(n) && (this.lastLevelLoadSec = n / 1e3),
                e.details.live ? this.bwEstimator.update(r.abrEwmaSlowLive, r.abrEwmaFastLive) : this.bwEstimator.update(r.abrEwmaSlowVoD, r.abrEwmaFastVoD)
            }
            ,
            e.onFragLoaded = function(t, e) {
                var r = e.frag
                  , i = e.part
                  , n = i ? i.stats : r.stats;
                if (r.type === Ie && this.bwEstimator.sampleTTFB(n.loading.first - n.loading.start),
                !this.ignoreFragment(r)) {
                    if (this.clearTimer(),
                    r.level === this._nextAutoLevel && (this._nextAutoLevel = -1),
                    this.firstSelection = -1,
                    this.hls.config.abrMaxWithRealBitrate) {
                        var a = i ? i.duration : r.duration
                          , s = this.hls.levels[r.level]
                          , o = (s.loaded ? s.loaded.bytes : 0) + n.loaded
                          , l = (s.loaded ? s.loaded.duration : 0) + a;
                        s.loaded = {
                            bytes: o,
                            duration: l
                        },
                        s.realBitrate = Math.round(8 * o / l)
                    }
                    if (r.bitrateTest) {
                        var u = {
                            stats: n,
                            frag: r,
                            part: i,
                            id: r.type
                        };
                        this.onFragBuffered(S.FRAG_BUFFERED, u),
                        r.bitrateTest = !1
                    } else
                        this.lastLoadedFragLevel = r.level
                }
            }
            ,
            e.onFragBuffered = function(t, e) {
                var r = e.frag
                  , i = e.part
                  , n = null != i && i.stats.loaded ? i.stats : r.stats;
                if (!n.aborted && !this.ignoreFragment(r)) {
                    var a = n.parsing.end - n.loading.start - Math.min(n.loading.first - n.loading.start, this.bwEstimator.getEstimateTTFB());
                    this.bwEstimator.sample(a, n.loaded),
                    n.bwEstimate = this.getBwEstimate(),
                    r.bitrateTest ? this.bitrateTestDelay = a / 1e3 : this.bitrateTestDelay = 0
                }
            }
            ,
            e.ignoreFragment = function(t) {
                return t.type !== Ie || "initSegment" === t.sn
            }
            ,
            e.clearTimer = function() {
                this.timer > -1 && (self.clearInterval(this.timer),
                this.timer = -1)
            }
            ,
            e.getAutoLevelKey = function() {
                var t;
                return this.getBwEstimate() + "_" + (null == (t = this.hls.mainForwardBufferInfo) ? void 0 : t.len)
            }
            ,
            e.getNextABRAutoLevel = function() {
                var t = this.fragCurrent
                  , e = this.partCurrent
                  , r = this.hls
                  , i = r.maxAutoLevel
                  , n = r.config
                  , a = r.minAutoLevel
                  , s = r.media
                  , o = e ? e.duration : t ? t.duration : 0
                  , l = s && 0 !== s.playbackRate ? Math.abs(s.playbackRate) : 1
                  , u = this.getBwEstimate()
                  , h = r.mainForwardBufferInfo
                  , d = (h ? h.len : 0) / l
                  , c = n.abrBandWidthFactor
                  , f = n.abrBandWidthUpFactor;
                if (d) {
                    var g = this.findBestLevel(u, a, i, d, 0, c, f);
                    if (g >= 0)
                        return g
                }
                var v = o ? Math.min(o, n.maxStarvationDelay) : n.maxStarvationDelay;
                if (!d) {
                    var m = this.bitrateTestDelay;
                    m && (v = (o ? Math.min(o, n.maxLoadingDelay) : n.maxLoadingDelay) - m,
                    w.info("[abr] bitrate test took " + Math.round(1e3 * m) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * v) + " ms"),
                    c = f = 1)
                }
                var p = this.findBestLevel(u, a, i, d, v, c, f);
                if (w.info("[abr] " + (d ? "rebuffering expected" : "buffer is empty") + ", optimal quality level " + p),
                p > -1)
                    return p;
                var y = r.levels[a]
                  , E = r.levels[r.loadLevel];
                return (null == y ? void 0 : y.bitrate) < (null == E ? void 0 : E.bitrate) ? a : r.loadLevel
            }
            ,
            e.getBwEstimate = function() {
                return this.bwEstimator.canEstimate() ? this.bwEstimator.getEstimate() : this.hls.config.abrEwmaDefaultEstimate
            }
            ,
            e.findBestLevel = function(t, e, r, i, n, a, s) {
                var o, l = this, u = i + n, h = this.lastLoadedFragLevel, d = -1 === h ? this.hls.firstLevel : h, c = this.fragCurrent, f = this.partCurrent, g = this.hls, v = g.levels, m = g.allAudioTracks, p = g.loadLevel, E = g.config;
                if (1 === v.length)
                    return 0;
                var T, S = v[d], L = !(null == S || null == (o = S.details) || !o.live), A = -1 === p || -1 === h, R = "SDR", k = (null == S ? void 0 : S.frameRate) || 0, b = E.audioPreference, D = E.videoPreference, I = this.audioTracksByGroup || (this.audioTracksByGroup = function(t) {
                    return t.reduce((function(t, e) {
                        var r = t.groups[e.groupId];
                        r || (r = t.groups[e.groupId] = {
                            tracks: [],
                            channels: {
                                2: 0
                            },
                            hasDefault: !1,
                            hasAutoSelect: !1
                        }),
                        r.tracks.push(e);
                        var i = e.channels || "2";
                        return r.channels[i] = (r.channels[i] || 0) + 1,
                        r.hasDefault = r.hasDefault || e.default,
                        r.hasAutoSelect = r.hasAutoSelect || e.autoselect,
                        r.hasDefault && (t.hasDefaultAudio = !0),
                        r.hasAutoSelect && (t.hasAutoSelectAudio = !0),
                        t
                    }
                    ), {
                        hasDefaultAudio: !1,
                        hasAutoSelectAudio: !1,
                        groups: {}
                    })
                }(m));
                if (A) {
                    if (-1 !== this.firstSelection)
                        return this.firstSelection;
                    var C = this.codecTiers || (this.codecTiers = function(t, e, r, i) {
                        return t.slice(r, i + 1).reduce((function(t, r) {
                            if (!r.codecSet)
                                return t;
                            var i = r.audioGroups
                              , n = t[r.codecSet];
                            n || (t[r.codecSet] = n = {
                                minBitrate: 1 / 0,
                                minHeight: 1 / 0,
                                minFramerate: 1 / 0,
                                maxScore: 0,
                                videoRanges: {
                                    SDR: 0
                                },
                                channels: {
                                    2: 0
                                },
                                hasDefaultAudio: !i,
                                fragmentError: 0
                            }),
                            n.minBitrate = Math.min(n.minBitrate, r.bitrate);
                            var a = Math.min(r.height, r.width);
                            return n.minHeight = Math.min(n.minHeight, a),
                            n.minFramerate = Math.min(n.minFramerate, r.frameRate),
                            n.maxScore = Math.max(n.maxScore, r.score),
                            n.fragmentError += r.fragmentError,
                            n.videoRanges[r.videoRange] = (n.videoRanges[r.videoRange] || 0) + 1,
                            i && i.forEach((function(t) {
                                if (t) {
                                    var r = e.groups[t];
                                    n.hasDefaultAudio = n.hasDefaultAudio || e.hasDefaultAudio ? r.hasDefault : r.hasAutoSelect || !e.hasDefaultAudio && !e.hasAutoSelectAudio,
                                    Object.keys(r.channels).forEach((function(t) {
                                        n.channels[t] = (n.channels[t] || 0) + r.channels[t]
                                    }
                                    ))
                                }
                            }
                            )),
                            t
                        }
                        ), {})
                    }(v, I, e, r))
                      , _ = function(t, e, r, i, n) {
                        for (var a = Object.keys(t), s = null == i ? void 0 : i.channels, o = null == i ? void 0 : i.audioCodec, l = s && 2 === parseInt(s), u = !0, h = !1, d = 1 / 0, c = 1 / 0, f = 1 / 0, g = 0, v = [], m = Pr(e, n), p = m.preferHDR, E = m.allowedVideoRanges, T = function() {
                            var e = t[a[S]];
                            u = e.channels[2] > 0,
                            d = Math.min(d, e.minHeight),
                            c = Math.min(c, e.minFramerate),
                            f = Math.min(f, e.minBitrate);
                            var r = E.filter((function(t) {
                                return e.videoRanges[t] > 0
                            }
                            ));
                            r.length > 0 && (h = !0,
                            v = r)
                        }, S = a.length; S--; )
                            T();
                        d = y(d) ? d : 0,
                        c = y(c) ? c : 0;
                        var L = Math.max(1080, d)
                          , A = Math.max(30, c);
                        return f = y(f) ? f : r,
                        r = Math.max(f, r),
                        h || (e = void 0,
                        v = []),
                        {
                            codecSet: a.reduce((function(e, i) {
                                var n = t[i];
                                if (i === e)
                                    return e;
                                if (n.minBitrate > r)
                                    return Fr(i, "min bitrate of " + n.minBitrate + " > current estimate of " + r),
                                    e;
                                if (!n.hasDefaultAudio)
                                    return Fr(i, "no renditions with default or auto-select sound found"),
                                    e;
                                if (o && i.indexOf(o.substring(0, 4)) % 5 != 0)
                                    return Fr(i, 'audio codec preference "' + o + '" not found'),
                                    e;
                                if (s && !l) {
                                    if (!n.channels[s])
                                        return Fr(i, "no renditions with " + s + " channel sound found (channels options: " + Object.keys(n.channels) + ")"),
                                        e
                                } else if ((!o || l) && u && 0 === n.channels[2])
                                    return Fr(i, "no renditions with stereo sound found"),
                                    e;
                                return n.minHeight > L ? (Fr(i, "min resolution of " + n.minHeight + " > maximum of " + L),
                                e) : n.minFramerate > A ? (Fr(i, "min framerate of " + n.minFramerate + " > maximum of " + A),
                                e) : v.some((function(t) {
                                    return n.videoRanges[t] > 0
                                }
                                )) ? n.maxScore < g ? (Fr(i, "max score of " + n.maxScore + " < selected max of " + g),
                                e) : e && (se(i) >= se(e) || n.fragmentError > t[e].fragmentError) ? e : (g = n.maxScore,
                                i) : (Fr(i, "no variants with VIDEO-RANGE of " + JSON.stringify(v) + " found"),
                                e)
                            }
                            ), void 0),
                            videoRanges: v,
                            preferHDR: p,
                            minFramerate: c,
                            minBitrate: f
                        }
                    }(C, R, t, b, D)
                      , x = _.codecSet
                      , P = _.videoRanges
                      , F = _.minFramerate
                      , M = _.minBitrate
                      , O = _.preferHDR;
                    T = x,
                    R = O ? P[P.length - 1] : P[0],
                    k = F,
                    t = Math.max(t, M),
                    w.log("[abr] picked start tier " + JSON.stringify(_))
                } else
                    T = null == S ? void 0 : S.codecSet,
                    R = null == S ? void 0 : S.videoRange;
                for (var N, U = f ? f.duration : c ? c.duration : 0, B = this.bwEstimator.getEstimateTTFB() / 1e3, G = [], K = function() {
                    var e, o = v[H], c = H > d;
                    if (!o)
                        return 0;
                    if (E.useMediaCapabilities && !o.supportedResult && !o.supportedPromise) {
                        var g = navigator.mediaCapabilities;
                        "function" == typeof (null == g ? void 0 : g.decodingInfo) && function(t, e, r, i, n, a) {
                            var s = t.audioCodec ? t.audioGroups : null
                              , o = null == a ? void 0 : a.audioCodec
                              , l = null == a ? void 0 : a.channels
                              , u = l ? parseInt(l) : o ? 1 / 0 : 2
                              , h = null;
                            if (null != s && s.length)
                                try {
                                    h = 1 === s.length && s[0] ? e.groups[s[0]].channels : s.reduce((function(t, r) {
                                        if (r) {
                                            var i = e.groups[r];
                                            if (!i)
                                                throw new Error("Audio track group " + r + " not found");
                                            Object.keys(i.channels).forEach((function(e) {
                                                t[e] = (t[e] || 0) + i.channels[e]
                                            }
                                            ))
                                        }
                                        return t
                                    }
                                    ), {
                                        2: 0
                                    })
                                } catch (t) {
                                    return !0
                                }
                            return void 0 !== t.videoCodec && (t.width > 1920 && t.height > 1088 || t.height > 1920 && t.width > 1088 || t.frameRate > Math.max(i, 30) || "SDR" !== t.videoRange && t.videoRange !== r || t.bitrate > Math.max(n, 8e6)) || !!h && y(u) && Object.keys(h).some((function(t) {
                                return parseInt(t) > u
                            }
                            ))
                        }(o, I, R, k, t, b) ? (o.supportedPromise = xr(o, I, g),
                        o.supportedPromise.then((function(t) {
                            o.supportedResult = t;
                            var e = l.hls.levels
                              , r = e.indexOf(o);
                            t.error ? w.warn('[abr] MediaCapabilities decodingInfo error: "' + t.error + '" for level ' + r + " " + JSON.stringify(t)) : t.supported || (w.warn("[abr] Unsupported MediaCapabilities decodingInfo result for level " + r + " " + JSON.stringify(t)),
                            r > -1 && e.length > 1 && (w.log("[abr] Removing unsupported level " + r),
                            l.hls.removeLevel(r)))
                        }
                        ))) : o.supportedResult = Cr
                    }
                    if (T && o.codecSet !== T || R && o.videoRange !== R || c && k > o.frameRate || !c && k > 0 && k < o.frameRate || o.supportedResult && (null == (e = o.supportedResult.decodingInfoResults) || !e[0].smooth))
                        return G.push(H),
                        0;
                    var m, D = o.details, C = (f ? null == D ? void 0 : D.partTarget : null == D ? void 0 : D.averagetargetduration) || U;
                    m = c ? s * t : a * t;
                    var _ = U && i >= 2 * U && 0 === n ? v[H].averageBitrate : v[H].maxBitrate
                      , x = l.getTimeToLoadFrag(B, m, _ * C, void 0 === D);
                    if (m >= _ && (H === h || 0 === o.loadError && 0 === o.fragmentError) && (x <= B || !y(x) || L && !l.bitrateTestDelay || x < u)) {
                        var P = l.forcedAutoLevel;
                        return H === p || -1 !== P && P === p || (G.length && w.trace("[abr] Skipped level(s) " + G.join(",") + " of " + r + ' max with CODECS and VIDEO-RANGE:"' + v[G[0]].codecs + '" ' + v[G[0]].videoRange + '; not compatible with "' + S.codecs + '" ' + R),
                        w.info("[abr] switch candidate:" + d + "->" + H + " adjustedbw(" + Math.round(m) + ")-bitrate=" + Math.round(m - _) + " ttfb:" + B.toFixed(1) + " avgDuration:" + C.toFixed(1) + " maxFetchDuration:" + u.toFixed(1) + " fetchDuration:" + x.toFixed(1) + " firstSelection:" + A + " codecSet:" + T + " videoRange:" + R + " hls.loadLevel:" + p)),
                        A && (l.firstSelection = H),
                        {
                            v: H
                        }
                    }
                }, H = r; H >= e; H--)
                    if (0 !== (N = K()) && N)
                        return N.v;
                return -1
            }
            ,
            s(t, [{
                key: "firstAutoLevel",
                get: function() {
                    var t = this.hls
                      , e = t.maxAutoLevel
                      , r = t.minAutoLevel
                      , i = this.getBwEstimate()
                      , n = this.hls.config.maxStarvationDelay
                      , a = this.findBestLevel(i, r, e, 0, n, 1, 1);
                    if (a > -1)
                        return a;
                    var s = this.hls.firstLevel
                      , o = Math.min(Math.max(s, r), e);
                    return w.warn("[abr] Could not find best starting auto level. Defaulting to first in playlist " + s + " clamped to " + o),
                    o
                }
            }, {
                key: "forcedAutoLevel",
                get: function() {
                    return this.nextAutoLevelKey ? -1 : this._nextAutoLevel
                }
            }, {
                key: "nextAutoLevel",
                get: function() {
                    var t = this.forcedAutoLevel
                      , e = this.bwEstimator.canEstimate()
                      , r = this.lastLoadedFragLevel > -1;
                    if (!(-1 === t || e && r && this.nextAutoLevelKey !== this.getAutoLevelKey()))
                        return t;
                    var i = e && r ? this.getNextABRAutoLevel() : this.firstAutoLevel;
                    if (-1 !== t) {
                        var n = this.hls.levels;
                        if (n.length > Math.max(t, i) && n[t].loadError <= n[i].loadError)
                            return t
                    }
                    return this._nextAutoLevel = i,
                    this.nextAutoLevelKey = this.getAutoLevelKey(),
                    i
                },
                set: function(t) {
                    var e = Math.max(this.hls.minAutoLevel, t);
                    this._nextAutoLevel != e && (this.nextAutoLevelKey = "",
                    this._nextAutoLevel = e)
                }
            }]),
            t
        }()
          , Gr = function() {
            function t() {
                this._boundTick = void 0,
                this._tickTimer = null,
                this._tickInterval = null,
                this._tickCallCount = 0,
                this._boundTick = this.tick.bind(this)
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.onHandlerDestroying(),
                this.onHandlerDestroyed()
            }
            ,
            e.onHandlerDestroying = function() {
                this.clearNextTick(),
                this.clearInterval()
            }
            ,
            e.onHandlerDestroyed = function() {}
            ,
            e.hasInterval = function() {
                return !!this._tickInterval
            }
            ,
            e.hasNextTick = function() {
                return !!this._tickTimer
            }
            ,
            e.setInterval = function(t) {
                return !this._tickInterval && (this._tickCallCount = 0,
                this._tickInterval = self.setInterval(this._boundTick, t),
                !0)
            }
            ,
            e.clearInterval = function() {
                return !!this._tickInterval && (self.clearInterval(this._tickInterval),
                this._tickInterval = null,
                !0)
            }
            ,
            e.clearNextTick = function() {
                return !!this._tickTimer && (self.clearTimeout(this._tickTimer),
                this._tickTimer = null,
                !0)
            }
            ,
            e.tick = function() {
                this._tickCallCount++,
                1 === this._tickCallCount && (this.doTick(),
                this._tickCallCount > 1 && this.tickImmediate(),
                this._tickCallCount = 0)
            }
            ,
            e.tickImmediate = function() {
                this.clearNextTick(),
                this._tickTimer = self.setTimeout(this._boundTick, 0)
            }
            ,
            e.doTick = function() {}
            ,
            t
        }()
          , Kr = "NOT_LOADED"
          , Hr = "APPENDING"
          , Vr = "PARTIAL"
          , Yr = "OK"
          , Wr = function() {
            function t(t) {
                this.activePartLists = Object.create(null),
                this.endListFragments = Object.create(null),
                this.fragments = Object.create(null),
                this.timeRanges = Object.create(null),
                this.bufferPadding = .2,
                this.hls = void 0,
                this.hasGaps = !1,
                this.hls = t,
                this._registerListeners()
            }
            var e = t.prototype;
            return e._registerListeners = function() {
                var t = this.hls;
                t.on(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this)
            }
            ,
            e._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.BUFFER_APPENDED, this.onBufferAppended, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this)
            }
            ,
            e.destroy = function() {
                this._unregisterListeners(),
                this.fragments = this.activePartLists = this.endListFragments = this.timeRanges = null
            }
            ,
            e.getAppendedFrag = function(t, e) {
                var r = this.activePartLists[e];
                if (r)
                    for (var i = r.length; i--; ) {
                        var n = r[i];
                        if (!n)
                            break;
                        var a = n.end;
                        if (n.start <= t && null !== a && t <= a)
                            return n
                    }
                return this.getBufferedFrag(t, e)
            }
            ,
            e.getBufferedFrag = function(t, e) {
                for (var r = this.fragments, i = Object.keys(r), n = i.length; n--; ) {
                    var a = r[i[n]];
                    if ((null == a ? void 0 : a.body.type) === e && a.buffered) {
                        var s = a.body;
                        if (s.start <= t && t <= s.end)
                            return s
                    }
                }
                return null
            }
            ,
            e.detectEvictedFragments = function(t, e, r, i) {
                var n = this;
                this.timeRanges && (this.timeRanges[t] = e);
                var a = (null == i ? void 0 : i.fragment.sn) || -1;
                Object.keys(this.fragments).forEach((function(i) {
                    var s = n.fragments[i];
                    if (s && !(a >= s.body.sn))
                        if (s.buffered || s.loaded) {
                            var o = s.range[t];
                            o && o.time.some((function(t) {
                                var r = !n.isTimeBuffered(t.startPTS, t.endPTS, e);
                                return r && n.removeFragment(s.body),
                                r
                            }
                            ))
                        } else
                            s.body.type === r && n.removeFragment(s.body)
                }
                ))
            }
            ,
            e.detectPartialFragments = function(t) {
                var e = this
                  , r = this.timeRanges
                  , i = t.frag
                  , n = t.part;
                if (r && "initSegment" !== i.sn) {
                    var a = qr(i)
                      , s = this.fragments[a];
                    if (!(!s || s.buffered && i.gap)) {
                        var o = !i.relurl;
                        Object.keys(r).forEach((function(t) {
                            var a = i.elementaryStreams[t];
                            if (a) {
                                var l = r[t]
                                  , u = o || !0 === a.partial;
                                s.range[t] = e.getBufferedTimes(i, n, u, l)
                            }
                        }
                        )),
                        s.loaded = null,
                        Object.keys(s.range).length ? (s.buffered = !0,
                        (s.body.endList = i.endList || s.body.endList) && (this.endListFragments[s.body.type] = s),
                        jr(s) || this.removeParts(i.sn - 1, i.type)) : this.removeFragment(s.body)
                    }
                }
            }
            ,
            e.removeParts = function(t, e) {
                var r = this.activePartLists[e];
                r && (this.activePartLists[e] = r.filter((function(e) {
                    return e.fragment.sn >= t
                }
                )))
            }
            ,
            e.fragBuffered = function(t, e) {
                var r = qr(t)
                  , i = this.fragments[r];
                !i && e && (i = this.fragments[r] = {
                    body: t,
                    appendedPTS: null,
                    loaded: null,
                    buffered: !1,
                    range: Object.create(null)
                },
                t.gap && (this.hasGaps = !0)),
                i && (i.loaded = null,
                i.buffered = !0)
            }
            ,
            e.getBufferedTimes = function(t, e, r, i) {
                for (var n = {
                    time: [],
                    partial: r
                }, a = t.start, s = t.end, o = t.minEndPTS || s, l = t.maxStartPTS || a, u = 0; u < i.length; u++) {
                    var h = i.start(u) - this.bufferPadding
                      , d = i.end(u) + this.bufferPadding;
                    if (l >= h && o <= d) {
                        n.time.push({
                            startPTS: Math.max(a, i.start(u)),
                            endPTS: Math.min(s, i.end(u))
                        });
                        break
                    }
                    if (a < d && s > h) {
                        var c = Math.max(a, i.start(u))
                          , f = Math.min(s, i.end(u));
                        f > c && (n.partial = !0,
                        n.time.push({
                            startPTS: c,
                            endPTS: f
                        }))
                    } else if (s <= h)
                        break
                }
                return n
            }
            ,
            e.getPartialFragment = function(t) {
                var e, r, i, n = null, a = 0, s = this.bufferPadding, o = this.fragments;
                return Object.keys(o).forEach((function(l) {
                    var u = o[l];
                    u && jr(u) && (r = u.body.start - s,
                    i = u.body.end + s,
                    t >= r && t <= i && (e = Math.min(t - r, i - t),
                    a <= e && (n = u.body,
                    a = e)))
                }
                )),
                n
            }
            ,
            e.isEndListAppended = function(t) {
                var e = this.endListFragments[t];
                return void 0 !== e && (e.buffered || jr(e))
            }
            ,
            e.getState = function(t) {
                var e = qr(t)
                  , r = this.fragments[e];
                return r ? r.buffered ? jr(r) ? Vr : Yr : Hr : Kr
            }
            ,
            e.isTimeBuffered = function(t, e, r) {
                for (var i, n, a = 0; a < r.length; a++) {
                    if (i = r.start(a) - this.bufferPadding,
                    n = r.end(a) + this.bufferPadding,
                    t >= i && e <= n)
                        return !0;
                    if (e <= i)
                        return !1
                }
                return !1
            }
            ,
            e.onFragLoaded = function(t, e) {
                var r = e.frag
                  , i = e.part;
                if ("initSegment" !== r.sn && !r.bitrateTest) {
                    var n = i ? null : e
                      , a = qr(r);
                    this.fragments[a] = {
                        body: r,
                        appendedPTS: null,
                        loaded: n,
                        buffered: !1,
                        range: Object.create(null)
                    }
                }
            }
            ,
            e.onBufferAppended = function(t, e) {
                var r = this
                  , i = e.frag
                  , n = e.part
                  , a = e.timeRanges;
                if ("initSegment" !== i.sn) {
                    var s = i.type;
                    if (n) {
                        var o = this.activePartLists[s];
                        o || (this.activePartLists[s] = o = []),
                        o.push(n)
                    }
                    this.timeRanges = a,
                    Object.keys(a).forEach((function(t) {
                        var e = a[t];
                        r.detectEvictedFragments(t, e, s, n)
                    }
                    ))
                }
            }
            ,
            e.onFragBuffered = function(t, e) {
                this.detectPartialFragments(e)
            }
            ,
            e.hasFragment = function(t) {
                var e = qr(t);
                return !!this.fragments[e]
            }
            ,
            e.hasParts = function(t) {
                var e;
                return !(null == (e = this.activePartLists[t]) || !e.length)
            }
            ,
            e.removeFragmentsInRange = function(t, e, r, i, n) {
                var a = this;
                i && !this.hasGaps || Object.keys(this.fragments).forEach((function(s) {
                    var o = a.fragments[s];
                    if (o) {
                        var l = o.body;
                        l.type !== r || i && !l.gap || l.start < e && l.end > t && (o.buffered || n) && a.removeFragment(l)
                    }
                }
                ))
            }
            ,
            e.removeFragment = function(t) {
                var e = qr(t);
                t.stats.loaded = 0,
                t.clearElementaryStreamInfo();
                var r = this.activePartLists[t.type];
                if (r) {
                    var i = t.sn;
                    this.activePartLists[t.type] = r.filter((function(t) {
                        return t.fragment.sn !== i
                    }
                    ))
                }
                delete this.fragments[e],
                t.endList && delete this.endListFragments[t.type]
            }
            ,
            e.removeAllFragments = function() {
                this.fragments = Object.create(null),
                this.endListFragments = Object.create(null),
                this.activePartLists = Object.create(null),
                this.hasGaps = !1
            }
            ,
            t
        }();
        function jr(t) {
            var e, r, i;
            return t.buffered && (t.body.gap || (null == (e = t.range.video) ? void 0 : e.partial) || (null == (r = t.range.audio) ? void 0 : r.partial) || (null == (i = t.range.audiovideo) ? void 0 : i.partial))
        }
        function qr(t) {
            return t.type + "_" + t.level + "_" + t.sn
        }
        var Xr = {
            length: 0,
            start: function() {
                return 0
            },
            end: function() {
                return 0
            }
        }
          , zr = function() {
            function t() {}
            return t.isBuffered = function(e, r) {
                try {
                    if (e)
                        for (var i = t.getBuffered(e), n = 0; n < i.length; n++)
                            if (r >= i.start(n) && r <= i.end(n))
                                return !0
                } catch (t) {}
                return !1
            }
            ,
            t.bufferInfo = function(e, r, i) {
                try {
                    if (e) {
                        var n, a = t.getBuffered(e), s = [];
                        for (n = 0; n < a.length; n++)
                            s.push({
                                start: a.start(n),
                                end: a.end(n)
                            });
                        return this.bufferedInfo(s, r, i)
                    }
                } catch (t) {}
                return {
                    len: 0,
                    start: r,
                    end: r,
                    nextStart: void 0
                }
            }
            ,
            t.bufferedInfo = function(t, e, r) {
                e = Math.max(0, e),
                t.sort((function(t, e) {
                    var r = t.start - e.start;
                    return r || e.end - t.end
                }
                ));
                var i = [];
                if (r)
                    for (var n = 0; n < t.length; n++) {
                        var a = i.length;
                        if (a) {
                            var s = i[a - 1].end;
                            t[n].start - s < r ? t[n].end > s && (i[a - 1].end = t[n].end) : i.push(t[n])
                        } else
                            i.push(t[n])
                    }
                else
                    i = t;
                for (var o, l = 0, u = e, h = e, d = 0; d < i.length; d++) {
                    var c = i[d].start
                      , f = i[d].end;
                    if (e + r >= c && e < f)
                        u = c,
                        l = (h = f) - e;
                    else if (e + r < c) {
                        o = c;
                        break
                    }
                }
                return {
                    len: l,
                    start: u || 0,
                    end: h || 0,
                    nextStart: o
                }
            }
            ,
            t.getBuffered = function(t) {
                try {
                    return t.buffered
                } catch (t) {
                    return w.log("failed to get media.buffered", t),
                    Xr
                }
            }
            ,
            t
        }()
          , Qr = function(t, e, r, i, n, a) {
            void 0 === i && (i = 0),
            void 0 === n && (n = -1),
            void 0 === a && (a = !1),
            this.level = void 0,
            this.sn = void 0,
            this.part = void 0,
            this.id = void 0,
            this.size = void 0,
            this.partial = void 0,
            this.transmuxing = {
                start: 0,
                executeStart: 0,
                executeEnd: 0,
                end: 0
            },
            this.buffering = {
                audio: {
                    start: 0,
                    executeStart: 0,
                    executeEnd: 0,
                    end: 0
                },
                video: {
                    start: 0,
                    executeStart: 0,
                    executeEnd: 0,
                    end: 0
                },
                audiovideo: {
                    start: 0,
                    executeStart: 0,
                    executeEnd: 0,
                    end: 0
                }
            },
            this.level = t,
            this.sn = e,
            this.id = r,
            this.size = i,
            this.part = n,
            this.partial = a
        };
        function Jr(t, e) {
            for (var r = 0, i = t.length; r < i; r++) {
                var n;
                if ((null == (n = t[r]) ? void 0 : n.cc) === e)
                    return t[r]
            }
            return null
        }
        function $r(t, e) {
            if (t) {
                var r = t.start + e;
                t.start = t.startPTS = r,
                t.endPTS = r + t.duration
            }
        }
        function Zr(t, e) {
            for (var r = e.fragments, i = 0, n = r.length; i < n; i++)
                $r(r[i], t);
            e.fragmentHint && $r(e.fragmentHint, t),
            e.alignedSliding = !0
        }
        function ti(t, e, r) {
            e && (function(t, e, r) {
                if (function(t, e, r) {
                    return !(!e || !(r.endCC > r.startCC || t && t.cc < r.startCC))
                }(t, r, e)) {
                    var i = function(t, e) {
                        var r = t.fragments
                          , i = e.fragments;
                        if (i.length && r.length) {
                            var n = Jr(r, i[0].cc);
                            if (n && (!n || n.startPTS))
                                return n;
                            w.log("No frag in previous level to align on")
                        } else
                            w.log("No fragments to align")
                    }(r, e);
                    i && y(i.start) && (w.log("Adjusting PTS using last level due to CC increase within current level " + e.url),
                    Zr(i.start, e))
                }
            }(t, r, e),
            !r.alignedSliding && e && ei(r, e),
            r.alignedSliding || !e || r.skippedSegments || ar(e, r))
        }
        function ei(t, e) {
            if (t.hasProgramDateTime && e.hasProgramDateTime) {
                var r = t.fragments
                  , i = e.fragments;
                if (r.length && i.length) {
                    var n, a, s = Math.min(e.endCC, t.endCC);
                    e.startCC < s && t.startCC < s && (n = Jr(i, s),
                    a = Jr(r, s)),
                    n && a || (a = Jr(r, (n = i[Math.floor(i.length / 2)]).cc) || r[Math.floor(r.length / 2)]);
                    var o = n.programDateTime
                      , l = a.programDateTime;
                    o && l && Zr((l - o) / 1e3 - (a.start - n.start), t)
                }
            }
        }
        var ri = Math.pow(2, 17)
          , ii = function() {
            function t(t) {
                this.config = void 0,
                this.loader = null,
                this.partLoadTimeout = -1,
                this.config = t
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.loader && (this.loader.destroy(),
                this.loader = null)
            }
            ,
            e.abort = function() {
                this.loader && this.loader.abort()
            }
            ,
            e.load = function(t, e) {
                var r = this
                  , n = t.url;
                if (!n)
                    return Promise.reject(new si({
                        type: L.NETWORK_ERROR,
                        details: A.FRAG_LOAD_ERROR,
                        fatal: !1,
                        frag: t,
                        error: new Error("Fragment does not have a " + (n ? "part list" : "url")),
                        networkDetails: null
                    }));
                this.abort();
                var a = this.config
                  , s = a.fLoader
                  , o = a.loader;
                return new Promise((function(l, u) {
                    if (r.loader && r.loader.destroy(),
                    t.gap) {
                        if (t.tagList.some((function(t) {
                            return "GAP" === t[0]
                        }
                        )))
                            return void u(ai(t));
                        t.gap = !1
                    }
                    var h = r.loader = t.loader = s ? new s(a) : new o(a)
                      , d = ni(t)
                      , c = fr(a.fragLoadPolicy.default)
                      , f = {
                        loadPolicy: c,
                        timeout: c.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0,
                        highWaterMark: "initSegment" === t.sn ? 1 / 0 : ri
                    };
                    t.stats = h.stats,
                    h.load(d, f, {
                        onSuccess: function(e, i, n, a) {
                            r.resetLoader(t, h);
                            var s = e.data;
                            n.resetIV && t.decryptdata && (t.decryptdata.iv = new Uint8Array(s.slice(0, 16)),
                            s = s.slice(16)),
                            l({
                                frag: t,
                                part: null,
                                payload: s,
                                networkDetails: a
                            })
                        },
                        onError: function(e, a, s, o) {
                            r.resetLoader(t, h),
                            u(new si({
                                type: L.NETWORK_ERROR,
                                details: A.FRAG_LOAD_ERROR,
                                fatal: !1,
                                frag: t,
                                response: i({
                                    url: n,
                                    data: void 0
                                }, e),
                                error: new Error("HTTP Error " + e.code + " " + e.text),
                                networkDetails: s,
                                stats: o
                            }))
                        },
                        onAbort: function(e, i, n) {
                            r.resetLoader(t, h),
                            u(new si({
                                type: L.NETWORK_ERROR,
                                details: A.INTERNAL_ABORTED,
                                fatal: !1,
                                frag: t,
                                error: new Error("Aborted"),
                                networkDetails: n,
                                stats: e
                            }))
                        },
                        onTimeout: function(e, i, n) {
                            r.resetLoader(t, h),
                            u(new si({
                                type: L.NETWORK_ERROR,
                                details: A.FRAG_LOAD_TIMEOUT,
                                fatal: !1,
                                frag: t,
                                error: new Error("Timeout after " + f.timeout + "ms"),
                                networkDetails: n,
                                stats: e
                            }))
                        },
                        onProgress: function(r, i, n, a) {
                            e && e({
                                frag: t,
                                part: null,
                                payload: n,
                                networkDetails: a
                            })
                        }
                    })
                }
                ))
            }
            ,
            e.loadPart = function(t, e, r) {
                var n = this;
                this.abort();
                var a = this.config
                  , s = a.fLoader
                  , o = a.loader;
                return new Promise((function(l, u) {
                    if (n.loader && n.loader.destroy(),
                    t.gap || e.gap)
                        u(ai(t, e));
                    else {
                        var h = n.loader = t.loader = s ? new s(a) : new o(a)
                          , d = ni(t, e)
                          , c = fr(a.fragLoadPolicy.default)
                          , f = {
                            loadPolicy: c,
                            timeout: c.maxLoadTimeMs,
                            maxRetry: 0,
                            retryDelay: 0,
                            maxRetryDelay: 0,
                            highWaterMark: ri
                        };
                        e.stats = h.stats,
                        h.load(d, f, {
                            onSuccess: function(i, a, s, o) {
                                n.resetLoader(t, h),
                                n.updateStatsFromPart(t, e);
                                var u = {
                                    frag: t,
                                    part: e,
                                    payload: i.data,
                                    networkDetails: o
                                };
                                r(u),
                                l(u)
                            },
                            onError: function(r, a, s, o) {
                                n.resetLoader(t, h),
                                u(new si({
                                    type: L.NETWORK_ERROR,
                                    details: A.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: t,
                                    part: e,
                                    response: i({
                                        url: d.url,
                                        data: void 0
                                    }, r),
                                    error: new Error("HTTP Error " + r.code + " " + r.text),
                                    networkDetails: s,
                                    stats: o
                                }))
                            },
                            onAbort: function(r, i, a) {
                                t.stats.aborted = e.stats.aborted,
                                n.resetLoader(t, h),
                                u(new si({
                                    type: L.NETWORK_ERROR,
                                    details: A.INTERNAL_ABORTED,
                                    fatal: !1,
                                    frag: t,
                                    part: e,
                                    error: new Error("Aborted"),
                                    networkDetails: a,
                                    stats: r
                                }))
                            },
                            onTimeout: function(r, i, a) {
                                n.resetLoader(t, h),
                                u(new si({
                                    type: L.NETWORK_ERROR,
                                    details: A.FRAG_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: t,
                                    part: e,
                                    error: new Error("Timeout after " + f.timeout + "ms"),
                                    networkDetails: a,
                                    stats: r
                                }))
                            }
                        })
                    }
                }
                ))
            }
            ,
            e.updateStatsFromPart = function(t, e) {
                var r = t.stats
                  , i = e.stats
                  , n = i.total;
                if (r.loaded += i.loaded,
                n) {
                    var a = Math.round(t.duration / e.duration)
                      , s = Math.min(Math.round(r.loaded / n), a)
                      , o = (a - s) * Math.round(r.loaded / s);
                    r.total = r.loaded + o
                } else
                    r.total = Math.max(r.loaded, r.total);
                var l = r.loading
                  , u = i.loading;
                l.start ? l.first += u.first - u.start : (l.start = u.start,
                l.first = u.first),
                l.end = u.end
            }
            ,
            e.resetLoader = function(t, e) {
                t.loader = null,
                this.loader === e && (self.clearTimeout(this.partLoadTimeout),
                this.loader = null),
                e.destroy()
            }
            ,
            t
        }();
        function ni(t, e) {
            void 0 === e && (e = null);
            var r = e || t
              , i = {
                frag: t,
                part: e,
                responseType: "arraybuffer",
                url: r.url,
                headers: {},
                rangeStart: 0,
                rangeEnd: 0
            }
              , n = r.byteRangeStartOffset
              , a = r.byteRangeEndOffset;
            if (y(n) && y(a)) {
                var s, o = n, l = a;
                if ("initSegment" === t.sn && "AES-128" === (null == (s = t.decryptdata) ? void 0 : s.method)) {
                    var u = a - n;
                    u % 16 && (l = a + (16 - u % 16)),
                    0 !== n && (i.resetIV = !0,
                    o = n - 16)
                }
                i.rangeStart = o,
                i.rangeEnd = l
            }
            return i
        }
        function ai(t, e) {
            var r = new Error("GAP " + (t.gap ? "tag" : "attribute") + " found")
              , i = {
                type: L.MEDIA_ERROR,
                details: A.FRAG_GAP,
                fatal: !1,
                frag: t,
                error: r,
                networkDetails: null
            };
            return e && (i.part = e),
            (e || t).stats.aborted = !0,
            new si(i)
        }
        var si = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this, e.error.message) || this).data = void 0,
                r.data = e,
                r
            }
            return l(e, t),
            e
        }(c(Error))
          , oi = function() {
            function t(t, e) {
                this.subtle = void 0,
                this.aesIV = void 0,
                this.subtle = t,
                this.aesIV = e
            }
            return t.prototype.decrypt = function(t, e) {
                return this.subtle.decrypt({
                    name: "AES-CBC",
                    iv: this.aesIV
                }, e, t)
            }
            ,
            t
        }()
          , li = function() {
            function t(t, e) {
                this.subtle = void 0,
                this.key = void 0,
                this.subtle = t,
                this.key = e
            }
            return t.prototype.expandKey = function() {
                return this.subtle.importKey("raw", this.key, {
                    name: "AES-CBC"
                }, !1, ["encrypt", "decrypt"])
            }
            ,
            t
        }()
          , ui = function() {
            function t() {
                this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                this.sBox = new Uint32Array(256),
                this.invSBox = new Uint32Array(256),
                this.key = new Uint32Array(0),
                this.ksRows = 0,
                this.keySize = 0,
                this.keySchedule = void 0,
                this.invKeySchedule = void 0,
                this.initTable()
            }
            var e = t.prototype;
            return e.uint8ArrayToUint32Array_ = function(t) {
                for (var e = new DataView(t), r = new Uint32Array(4), i = 0; i < 4; i++)
                    r[i] = e.getUint32(4 * i);
                return r
            }
            ,
            e.initTable = function() {
                var t = this.sBox
                  , e = this.invSBox
                  , r = this.subMix
                  , i = r[0]
                  , n = r[1]
                  , a = r[2]
                  , s = r[3]
                  , o = this.invSubMix
                  , l = o[0]
                  , u = o[1]
                  , h = o[2]
                  , d = o[3]
                  , c = new Uint32Array(256)
                  , f = 0
                  , g = 0
                  , v = 0;
                for (v = 0; v < 256; v++)
                    c[v] = v < 128 ? v << 1 : v << 1 ^ 283;
                for (v = 0; v < 256; v++) {
                    var m = g ^ g << 1 ^ g << 2 ^ g << 3 ^ g << 4;
                    m = m >>> 8 ^ 255 & m ^ 99,
                    t[f] = m,
                    e[m] = f;
                    var p = c[f]
                      , y = c[p]
                      , E = c[y]
                      , T = 257 * c[m] ^ 16843008 * m;
                    i[f] = T << 24 | T >>> 8,
                    n[f] = T << 16 | T >>> 16,
                    a[f] = T << 8 | T >>> 24,
                    s[f] = T,
                    T = 16843009 * E ^ 65537 * y ^ 257 * p ^ 16843008 * f,
                    l[m] = T << 24 | T >>> 8,
                    u[m] = T << 16 | T >>> 16,
                    h[m] = T << 8 | T >>> 24,
                    d[m] = T,
                    f ? (f = p ^ c[c[c[E ^ p]]],
                    g ^= c[c[g]]) : f = g = 1
                }
            }
            ,
            e.expandKey = function(t) {
                for (var e = this.uint8ArrayToUint32Array_(t), r = !0, i = 0; i < e.length && r; )
                    r = e[i] === this.key[i],
                    i++;
                if (!r) {
                    this.key = e;
                    var n = this.keySize = e.length;
                    if (4 !== n && 6 !== n && 8 !== n)
                        throw new Error("Invalid aes key size=" + n);
                    var a, s, o, l, u = this.ksRows = 4 * (n + 6 + 1), h = this.keySchedule = new Uint32Array(u), d = this.invKeySchedule = new Uint32Array(u), c = this.sBox, f = this.rcon, g = this.invSubMix, v = g[0], m = g[1], p = g[2], y = g[3];
                    for (a = 0; a < u; a++)
                        a < n ? o = h[a] = e[a] : (l = o,
                        a % n == 0 ? (l = c[(l = l << 8 | l >>> 24) >>> 24] << 24 | c[l >>> 16 & 255] << 16 | c[l >>> 8 & 255] << 8 | c[255 & l],
                        l ^= f[a / n | 0] << 24) : n > 6 && a % n == 4 && (l = c[l >>> 24] << 24 | c[l >>> 16 & 255] << 16 | c[l >>> 8 & 255] << 8 | c[255 & l]),
                        h[a] = o = (h[a - n] ^ l) >>> 0);
                    for (s = 0; s < u; s++)
                        a = u - s,
                        l = 3 & s ? h[a] : h[a - 4],
                        d[s] = s < 4 || a <= 4 ? l : v[c[l >>> 24]] ^ m[c[l >>> 16 & 255]] ^ p[c[l >>> 8 & 255]] ^ y[c[255 & l]],
                        d[s] = d[s] >>> 0
                }
            }
            ,
            e.networkToHostOrderSwap = function(t) {
                return t << 24 | (65280 & t) << 8 | (16711680 & t) >> 8 | t >>> 24
            }
            ,
            e.decrypt = function(t, e, r) {
                for (var i, n, a, s, o, l, u, h, d, c, f, g, v, m, p = this.keySize + 6, y = this.invKeySchedule, E = this.invSBox, T = this.invSubMix, S = T[0], L = T[1], A = T[2], R = T[3], k = this.uint8ArrayToUint32Array_(r), b = k[0], D = k[1], I = k[2], w = k[3], C = new Int32Array(t), _ = new Int32Array(C.length), x = this.networkToHostOrderSwap; e < C.length; ) {
                    for (d = x(C[e]),
                    c = x(C[e + 1]),
                    f = x(C[e + 2]),
                    g = x(C[e + 3]),
                    o = d ^ y[0],
                    l = g ^ y[1],
                    u = f ^ y[2],
                    h = c ^ y[3],
                    v = 4,
                    m = 1; m < p; m++)
                        i = S[o >>> 24] ^ L[l >> 16 & 255] ^ A[u >> 8 & 255] ^ R[255 & h] ^ y[v],
                        n = S[l >>> 24] ^ L[u >> 16 & 255] ^ A[h >> 8 & 255] ^ R[255 & o] ^ y[v + 1],
                        a = S[u >>> 24] ^ L[h >> 16 & 255] ^ A[o >> 8 & 255] ^ R[255 & l] ^ y[v + 2],
                        s = S[h >>> 24] ^ L[o >> 16 & 255] ^ A[l >> 8 & 255] ^ R[255 & u] ^ y[v + 3],
                        o = i,
                        l = n,
                        u = a,
                        h = s,
                        v += 4;
                    i = E[o >>> 24] << 24 ^ E[l >> 16 & 255] << 16 ^ E[u >> 8 & 255] << 8 ^ E[255 & h] ^ y[v],
                    n = E[l >>> 24] << 24 ^ E[u >> 16 & 255] << 16 ^ E[h >> 8 & 255] << 8 ^ E[255 & o] ^ y[v + 1],
                    a = E[u >>> 24] << 24 ^ E[h >> 16 & 255] << 16 ^ E[o >> 8 & 255] << 8 ^ E[255 & l] ^ y[v + 2],
                    s = E[h >>> 24] << 24 ^ E[o >> 16 & 255] << 16 ^ E[l >> 8 & 255] << 8 ^ E[255 & u] ^ y[v + 3],
                    _[e] = x(i ^ b),
                    _[e + 1] = x(s ^ D),
                    _[e + 2] = x(a ^ I),
                    _[e + 3] = x(n ^ w),
                    b = d,
                    D = c,
                    I = f,
                    w = g,
                    e += 4
                }
                return _.buffer
            }
            ,
            t
        }()
          , hi = function() {
            function t(t, e) {
                var r = (void 0 === e ? {} : e).removePKCS7Padding
                  , i = void 0 === r || r;
                if (this.logEnabled = !0,
                this.removePKCS7Padding = void 0,
                this.subtle = null,
                this.softwareDecrypter = null,
                this.key = null,
                this.fastAesKey = null,
                this.remainderData = null,
                this.currentIV = null,
                this.currentResult = null,
                this.useSoftware = void 0,
                this.useSoftware = t.enableSoftwareAES,
                this.removePKCS7Padding = i,
                i)
                    try {
                        var n = self.crypto;
                        n && (this.subtle = n.subtle || n.webkitSubtle)
                    } catch (t) {}
                null === this.subtle && (this.useSoftware = !0)
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.subtle = null,
                this.softwareDecrypter = null,
                this.key = null,
                this.fastAesKey = null,
                this.remainderData = null,
                this.currentIV = null,
                this.currentResult = null
            }
            ,
            e.isSync = function() {
                return this.useSoftware
            }
            ,
            e.flush = function() {
                var t = this.currentResult
                  , e = this.remainderData;
                if (!t || e)
                    return this.reset(),
                    null;
                var r, i, n, a = new Uint8Array(t);
                return this.reset(),
                this.removePKCS7Padding ? (i = (r = a).byteLength,
                (n = i && new DataView(r.buffer).getUint8(i - 1)) ? nt(r, 0, i - n) : r) : a
            }
            ,
            e.reset = function() {
                this.currentResult = null,
                this.currentIV = null,
                this.remainderData = null,
                this.softwareDecrypter && (this.softwareDecrypter = null)
            }
            ,
            e.decrypt = function(t, e, r) {
                var i = this;
                return this.useSoftware ? new Promise((function(n, a) {
                    i.softwareDecrypt(new Uint8Array(t), e, r);
                    var s = i.flush();
                    s ? n(s.buffer) : a(new Error("[softwareDecrypt] Failed to decrypt data"))
                }
                )) : this.webCryptoDecrypt(new Uint8Array(t), e, r)
            }
            ,
            e.softwareDecrypt = function(t, e, r) {
                var i = this.currentIV
                  , n = this.currentResult
                  , a = this.remainderData;
                this.logOnce("JS AES decrypt"),
                a && (t = Gt(a, t),
                this.remainderData = null);
                var s = this.getValidChunk(t);
                if (!s.length)
                    return null;
                i && (r = i);
                var o = this.softwareDecrypter;
                o || (o = this.softwareDecrypter = new ui),
                o.expandKey(e);
                var l = n;
                return this.currentResult = o.decrypt(s.buffer, 0, r),
                this.currentIV = nt(s, -16).buffer,
                l || null
            }
            ,
            e.webCryptoDecrypt = function(t, e, r) {
                var i = this
                  , n = this.subtle;
                return this.key === e && this.fastAesKey || (this.key = e,
                this.fastAesKey = new li(n,e)),
                this.fastAesKey.expandKey().then((function(e) {
                    return n ? (i.logOnce("WebCrypto AES decrypt"),
                    new oi(n,new Uint8Array(r)).decrypt(t.buffer, e)) : Promise.reject(new Error("web crypto not initialized"))
                }
                )).catch((function(n) {
                    return w.warn("[decrypter]: WebCrypto Error, disable WebCrypto API, " + n.name + ": " + n.message),
                    i.onWebCryptoError(t, e, r)
                }
                ))
            }
            ,
            e.onWebCryptoError = function(t, e, r) {
                this.useSoftware = !0,
                this.logEnabled = !0,
                this.softwareDecrypt(t, e, r);
                var i = this.flush();
                if (i)
                    return i.buffer;
                throw new Error("WebCrypto and softwareDecrypt: failed to decrypt data")
            }
            ,
            e.getValidChunk = function(t) {
                var e = t
                  , r = t.length - t.length % 16;
                return r !== t.length && (e = nt(t, 0, r),
                this.remainderData = nt(t, r)),
                e
            }
            ,
            e.logOnce = function(t) {
                this.logEnabled && (w.log("[decrypter]: " + t),
                this.logEnabled = !1)
            }
            ,
            t
        }()
          , di = function(t) {
            for (var e = "", r = t.length, i = 0; i < r; i++)
                e += "[" + t.start(i).toFixed(3) + "-" + t.end(i).toFixed(3) + "]";
            return e
        }
          , ci = "STOPPED"
          , fi = "IDLE"
          , gi = "KEY_LOADING"
          , vi = "FRAG_LOADING"
          , mi = "FRAG_LOADING_WAITING_RETRY"
          , pi = "WAITING_TRACK"
          , yi = "PARSING"
          , Ei = "PARSED"
          , Ti = "ENDED"
          , Si = "ERROR"
          , Li = "WAITING_INIT_PTS"
          , Ai = "WAITING_LEVEL"
          , Ri = function(t) {
            function e(e, r, i, n, a) {
                var s;
                return (s = t.call(this) || this).hls = void 0,
                s.fragPrevious = null,
                s.fragCurrent = null,
                s.fragmentTracker = void 0,
                s.transmuxer = null,
                s._state = ci,
                s.playlistType = void 0,
                s.media = null,
                s.mediaBuffer = null,
                s.config = void 0,
                s.bitrateTest = !1,
                s.lastCurrentTime = 0,
                s.nextLoadPosition = 0,
                s.startPosition = 0,
                s.startTimeOffset = null,
                s.loadedmetadata = !1,
                s.retryDate = 0,
                s.levels = null,
                s.fragmentLoader = void 0,
                s.keyLoader = void 0,
                s.levelLastLoaded = null,
                s.startFragRequested = !1,
                s.decrypter = void 0,
                s.initPTS = [],
                s.onvseeking = null,
                s.onvended = null,
                s.logPrefix = "",
                s.log = void 0,
                s.warn = void 0,
                s.playlistType = a,
                s.logPrefix = n,
                s.log = w.log.bind(w, n + ":"),
                s.warn = w.warn.bind(w, n + ":"),
                s.hls = e,
                s.fragmentLoader = new ii(e.config),
                s.keyLoader = i,
                s.fragmentTracker = r,
                s.config = e.config,
                s.decrypter = new hi(e.config),
                e.on(S.MANIFEST_LOADED, s.onManifestLoaded, function(t) {
                    if (void 0 === t)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return t
                }(s)),
                s
            }
            l(e, t);
            var r = e.prototype;
            return r.doTick = function() {
                this.onTickEnd()
            }
            ,
            r.onTickEnd = function() {}
            ,
            r.startLoad = function(t) {}
            ,
            r.stopLoad = function() {
                this.fragmentLoader.abort(),
                this.keyLoader.abort(this.playlistType);
                var t = this.fragCurrent;
                null != t && t.loader && (t.abortRequests(),
                this.fragmentTracker.removeFragment(t)),
                this.resetTransmuxer(),
                this.fragCurrent = null,
                this.fragPrevious = null,
                this.clearInterval(),
                this.clearNextTick(),
                this.state = ci
            }
            ,
            r._streamEnded = function(t, e) {
                if (e.live || t.nextStart || !t.end || !this.media)
                    return !1;
                var r = e.partList;
                if (null != r && r.length) {
                    var i = r[r.length - 1];
                    return zr.isBuffered(this.media, i.start + i.duration / 2)
                }
                var n = e.fragments[e.fragments.length - 1].type;
                return this.fragmentTracker.isEndListAppended(n)
            }
            ,
            r.getLevelDetails = function() {
                var t;
                if (this.levels && null !== this.levelLastLoaded)
                    return null == (t = this.levelLastLoaded) ? void 0 : t.details
            }
            ,
            r.onMediaAttached = function(t, e) {
                var r = this.media = this.mediaBuffer = e.media;
                this.onvseeking = this.onMediaSeeking.bind(this),
                this.onvended = this.onMediaEnded.bind(this),
                r.addEventListener("seeking", this.onvseeking),
                r.addEventListener("ended", this.onvended);
                var i = this.config;
                this.levels && i.autoStartLoad && this.state === ci && this.startLoad(i.startPosition)
            }
            ,
            r.onMediaDetaching = function() {
                var t = this.media;
                null != t && t.ended && (this.log("MSE detaching and video ended, reset startPosition"),
                this.startPosition = this.lastCurrentTime = 0),
                t && this.onvseeking && this.onvended && (t.removeEventListener("seeking", this.onvseeking),
                t.removeEventListener("ended", this.onvended),
                this.onvseeking = this.onvended = null),
                this.keyLoader && this.keyLoader.detach(),
                this.media = this.mediaBuffer = null,
                this.loadedmetadata = !1,
                this.fragmentTracker.removeAllFragments(),
                this.stopLoad()
            }
            ,
            r.onMediaSeeking = function() {
                var t = this.config
                  , e = this.fragCurrent
                  , r = this.media
                  , i = this.mediaBuffer
                  , n = this.state
                  , a = r ? r.currentTime : 0
                  , s = zr.bufferInfo(i || r, a, t.maxBufferHole);
                if (this.log("media seeking to " + (y(a) ? a.toFixed(3) : a) + ", state: " + n),
                this.state === Ti)
                    this.resetLoadingState();
                else if (e) {
                    var o = t.maxFragLookUpTolerance
                      , l = e.start - o
                      , u = e.start + e.duration + o;
                    if (!s.len || u < s.start || l > s.end) {
                        var h = a > u;
                        (a < l || h) && (h && e.loader && (this.log("seeking outside of buffer while fragment load in progress, cancel fragment load"),
                        e.abortRequests(),
                        this.resetLoadingState()),
                        this.fragPrevious = null)
                    }
                }
                r && (this.fragmentTracker.removeFragmentsInRange(a, 1 / 0, this.playlistType, !0),
                this.lastCurrentTime = a),
                this.loadedmetadata || s.len || (this.nextLoadPosition = this.startPosition = a),
                this.tickImmediate()
            }
            ,
            r.onMediaEnded = function() {
                this.startPosition = this.lastCurrentTime = 0
            }
            ,
            r.onManifestLoaded = function(t, e) {
                this.startTimeOffset = e.startTimeOffset,
                this.initPTS = []
            }
            ,
            r.onHandlerDestroying = function() {
                this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                this.stopLoad(),
                t.prototype.onHandlerDestroying.call(this),
                this.hls = null
            }
            ,
            r.onHandlerDestroyed = function() {
                this.state = ci,
                this.fragmentLoader && this.fragmentLoader.destroy(),
                this.keyLoader && this.keyLoader.destroy(),
                this.decrypter && this.decrypter.destroy(),
                this.hls = this.log = this.warn = this.decrypter = this.keyLoader = this.fragmentLoader = this.fragmentTracker = null,
                t.prototype.onHandlerDestroyed.call(this)
            }
            ,
            r.loadFragment = function(t, e, r) {
                this._loadFragForPlayback(t, e, r)
            }
            ,
            r._loadFragForPlayback = function(t, e, r) {
                var i = this;
                this._doFragLoad(t, e, r, (function(e) {
                    if (i.fragContextChanged(t))
                        return i.warn("Fragment " + t.sn + (e.part ? " p: " + e.part.index : "") + " of level " + t.level + " was dropped during download."),
                        void i.fragmentTracker.removeFragment(t);
                    t.stats.chunkCount++,
                    i._handleFragmentLoadProgress(e)
                }
                )).then((function(e) {
                    if (e) {
                        var r = i.state;
                        i.fragContextChanged(t) ? (r === vi || !i.fragCurrent && r === yi) && (i.fragmentTracker.removeFragment(t),
                        i.state = fi) : ("payload"in e && (i.log("Loaded fragment " + t.sn + " of level " + t.level),
                        i.hls.trigger(S.FRAG_LOADED, e)),
                        i._handleFragmentLoadComplete(e))
                    }
                }
                )).catch((function(e) {
                    i.state !== ci && i.state !== Si && (i.warn(e),
                    i.resetFragmentLoading(t))
                }
                ))
            }
            ,
            r.clearTrackerIfNeeded = function(t) {
                var e, r = this.fragmentTracker;
                if (r.getState(t) === Hr) {
                    var i = t.type
                      , n = this.getFwdBufferInfo(this.mediaBuffer, i)
                      , a = Math.max(t.duration, n ? n.len : this.config.maxBufferLength);
                    this.reduceMaxBufferLength(a) && r.removeFragment(t)
                } else
                    0 === (null == (e = this.mediaBuffer) ? void 0 : e.buffered.length) ? r.removeAllFragments() : r.hasParts(t.type) && (r.detectPartialFragments({
                        frag: t,
                        part: null,
                        stats: t.stats,
                        id: t.type
                    }),
                    r.getState(t) === Vr && r.removeFragment(t))
            }
            ,
            r.checkLiveUpdate = function(t) {
                if (t.updated && !t.live) {
                    var e = t.fragments[t.fragments.length - 1];
                    this.fragmentTracker.detectPartialFragments({
                        frag: e,
                        part: null,
                        stats: e.stats,
                        id: e.type
                    })
                }
                t.fragments[0] || (t.deltaUpdateFailed = !0)
            }
            ,
            r.flushMainBuffer = function(t, e, r) {
                if (void 0 === r && (r = null),
                t - e) {
                    var i = {
                        startOffset: t,
                        endOffset: e,
                        type: r
                    };
                    this.hls.trigger(S.BUFFER_FLUSHING, i)
                }
            }
            ,
            r._loadInitSegment = function(t, e) {
                var r = this;
                this._doFragLoad(t, e).then((function(e) {
                    if (!e || r.fragContextChanged(t) || !r.levels)
                        throw new Error("init load aborted");
                    return e
                }
                )).then((function(e) {
                    var i = r.hls
                      , n = e.payload
                      , a = t.decryptdata;
                    if (n && n.byteLength > 0 && null != a && a.key && a.iv && "AES-128" === a.method) {
                        var s = self.performance.now();
                        return r.decrypter.decrypt(new Uint8Array(n), a.key.buffer, a.iv.buffer).catch((function(e) {
                            throw i.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.FRAG_DECRYPT_ERROR,
                                fatal: !1,
                                error: e,
                                reason: e.message,
                                frag: t
                            }),
                            e
                        }
                        )).then((function(n) {
                            var a = self.performance.now();
                            return i.trigger(S.FRAG_DECRYPTED, {
                                frag: t,
                                payload: n,
                                stats: {
                                    tstart: s,
                                    tdecrypt: a
                                }
                            }),
                            e.payload = n,
                            r.completeInitSegmentLoad(e)
                        }
                        ))
                    }
                    return r.completeInitSegmentLoad(e)
                }
                )).catch((function(e) {
                    r.state !== ci && r.state !== Si && (r.warn(e),
                    r.resetFragmentLoading(t))
                }
                ))
            }
            ,
            r.completeInitSegmentLoad = function(t) {
                if (!this.levels)
                    throw new Error("init load aborted, missing levels");
                var e = t.frag.stats;
                this.state = fi,
                t.frag.data = new Uint8Array(t.payload),
                e.parsing.start = e.buffering.start = self.performance.now(),
                e.parsing.end = e.buffering.end = self.performance.now(),
                this.tick()
            }
            ,
            r.fragContextChanged = function(t) {
                var e = this.fragCurrent;
                return !t || !e || t.sn !== e.sn || t.level !== e.level
            }
            ,
            r.fragBufferedComplete = function(t, e) {
                var r, i, n, a, s = this.mediaBuffer ? this.mediaBuffer : this.media;
                if (this.log("Buffered " + t.type + " sn: " + t.sn + (e ? " part: " + e.index : "") + " of " + (this.playlistType === Ie ? "level" : "track") + " " + t.level + " (frag:[" + (null != (r = t.startPTS) ? r : NaN).toFixed(3) + "-" + (null != (i = t.endPTS) ? i : NaN).toFixed(3) + "] > buffer:" + (s ? di(zr.getBuffered(s)) : "(detached)") + ")"),
                "initSegment" !== t.sn) {
                    var o;
                    if (t.type !== Ce) {
                        var l = t.elementaryStreams;
                        if (!Object.keys(l).some((function(t) {
                            return !!l[t]
                        }
                        )))
                            return void (this.state = fi)
                    }
                    var u = null == (o = this.levels) ? void 0 : o[t.level];
                    null != u && u.fragmentError && (this.log("Resetting level fragment error count of " + u.fragmentError + " on frag buffered"),
                    u.fragmentError = 0)
                }
                this.state = fi,
                s && (!this.loadedmetadata && t.type == Ie && s.buffered.length && (null == (n = this.fragCurrent) ? void 0 : n.sn) === (null == (a = this.fragPrevious) ? void 0 : a.sn) && (this.loadedmetadata = !0,
                this.seekToStartPos()),
                this.tick())
            }
            ,
            r.seekToStartPos = function() {}
            ,
            r._handleFragmentLoadComplete = function(t) {
                var e = this.transmuxer;
                if (e) {
                    var r = t.frag
                      , i = t.part
                      , n = t.partsLoaded
                      , a = !n || 0 === n.length || n.some((function(t) {
                        return !t
                    }
                    ))
                      , s = new Qr(r.level,r.sn,r.stats.chunkCount + 1,0,i ? i.index : -1,!a);
                    e.flush(s)
                }
            }
            ,
            r._handleFragmentLoadProgress = function(t) {}
            ,
            r._doFragLoad = function(t, e, r, i) {
                var n, a = this;
                void 0 === r && (r = null);
                var s = null == e ? void 0 : e.details;
                if (!this.levels || !s)
                    throw new Error("frag load aborted, missing level" + (s ? "" : " detail") + "s");
                var o = null;
                if (!t.encrypted || null != (n = t.decryptdata) && n.key ? !t.encrypted && s.encryptedFragments.length && this.keyLoader.loadClear(t, s.encryptedFragments) : (this.log("Loading key for " + t.sn + " of [" + s.startSN + "-" + s.endSN + "], " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + " " + t.level),
                this.state = gi,
                this.fragCurrent = t,
                o = this.keyLoader.load(t).then((function(t) {
                    if (!a.fragContextChanged(t.frag))
                        return a.hls.trigger(S.KEY_LOADED, t),
                        a.state === gi && (a.state = fi),
                        t
                }
                )),
                this.hls.trigger(S.KEY_LOADING, {
                    frag: t
                }),
                null === this.fragCurrent && (o = Promise.reject(new Error("frag load aborted, context changed in KEY_LOADING")))),
                r = Math.max(t.start, r || 0),
                this.config.lowLatencyMode && "initSegment" !== t.sn) {
                    var l = s.partList;
                    if (l && i) {
                        r > t.end && s.fragmentHint && (t = s.fragmentHint);
                        var u = this.getNextPart(l, t, r);
                        if (u > -1) {
                            var h, d = l[u];
                            return this.log("Loading part sn: " + t.sn + " p: " + d.index + " cc: " + t.cc + " of playlist [" + s.startSN + "-" + s.endSN + "] parts [0-" + u + "-" + (l.length - 1) + "] " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + t.level + ", target: " + parseFloat(r.toFixed(3))),
                            this.nextLoadPosition = d.start + d.duration,
                            this.state = vi,
                            h = o ? o.then((function(r) {
                                return !r || a.fragContextChanged(r.frag) ? null : a.doFragPartsLoad(t, d, e, i)
                            }
                            )).catch((function(t) {
                                return a.handleFragLoadError(t)
                            }
                            )) : this.doFragPartsLoad(t, d, e, i).catch((function(t) {
                                return a.handleFragLoadError(t)
                            }
                            )),
                            this.hls.trigger(S.FRAG_LOADING, {
                                frag: t,
                                part: d,
                                targetBufferTime: r
                            }),
                            null === this.fragCurrent ? Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING parts")) : h
                        }
                        if (!t.url || this.loadedEndOfParts(l, r))
                            return Promise.resolve(null)
                    }
                }
                this.log("Loading fragment " + t.sn + " cc: " + t.cc + " " + (s ? "of [" + s.startSN + "-" + s.endSN + "] " : "") + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + t.level + ", target: " + parseFloat(r.toFixed(3))),
                y(t.sn) && !this.bitrateTest && (this.nextLoadPosition = t.start + t.duration),
                this.state = vi;
                var c, f = this.config.progressive;
                return c = f && o ? o.then((function(e) {
                    return !e || a.fragContextChanged(null == e ? void 0 : e.frag) ? null : a.fragmentLoader.load(t, i)
                }
                )).catch((function(t) {
                    return a.handleFragLoadError(t)
                }
                )) : Promise.all([this.fragmentLoader.load(t, f ? i : void 0), o]).then((function(t) {
                    var e = t[0];
                    return !f && e && i && i(e),
                    e
                }
                )).catch((function(t) {
                    return a.handleFragLoadError(t)
                }
                )),
                this.hls.trigger(S.FRAG_LOADING, {
                    frag: t,
                    targetBufferTime: r
                }),
                null === this.fragCurrent ? Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING")) : c
            }
            ,
            r.doFragPartsLoad = function(t, e, r, i) {
                var n = this;
                return new Promise((function(a, s) {
                    var o, l = [], u = null == (o = r.details) ? void 0 : o.partList;
                    !function e(o) {
                        n.fragmentLoader.loadPart(t, o, i).then((function(i) {
                            l[o.index] = i;
                            var s = i.part;
                            n.hls.trigger(S.FRAG_LOADED, i);
                            var h = or(r, t.sn, o.index + 1) || lr(u, t.sn, o.index + 1);
                            if (!h)
                                return a({
                                    frag: t,
                                    part: s,
                                    partsLoaded: l
                                });
                            e(h)
                        }
                        )).catch(s)
                    }(e)
                }
                ))
            }
            ,
            r.handleFragLoadError = function(t) {
                if ("data"in t) {
                    var e = t.data;
                    t.data && e.details === A.INTERNAL_ABORTED ? this.handleFragLoadAborted(e.frag, e.part) : this.hls.trigger(S.ERROR, e)
                } else
                    this.hls.trigger(S.ERROR, {
                        type: L.OTHER_ERROR,
                        details: A.INTERNAL_EXCEPTION,
                        err: t,
                        error: t,
                        fatal: !0
                    });
                return null
            }
            ,
            r._handleTransmuxerFlush = function(t) {
                var e = this.getCurrentContext(t);
                if (e && this.state === yi) {
                    var r = e.frag
                      , i = e.part
                      , n = e.level
                      , a = self.performance.now();
                    r.stats.parsing.end = a,
                    i && (i.stats.parsing.end = a),
                    this.updateLevelTiming(r, i, n, t.partial)
                } else
                    this.fragCurrent || this.state === ci || this.state === Si || (this.state = fi)
            }
            ,
            r.getCurrentContext = function(t) {
                var e = this.levels
                  , r = this.fragCurrent
                  , i = t.level
                  , n = t.sn
                  , a = t.part;
                if (null == e || !e[i])
                    return this.warn("Levels object was unset while buffering fragment " + n + " of level " + i + ". The current chunk will not be buffered."),
                    null;
                var s = e[i]
                  , o = a > -1 ? or(s, n, a) : null
                  , l = o ? o.fragment : function(t, e, r) {
                    if (null == t || !t.details)
                        return null;
                    var i = t.details
                      , n = i.fragments[e - i.startSN];
                    return n || ((n = i.fragmentHint) && n.sn === e ? n : e < i.startSN && r && r.sn === e ? r : null)
                }(s, n, r);
                return l ? (r && r !== l && (l.stats = r.stats),
                {
                    frag: l,
                    part: o,
                    level: s
                }) : null
            }
            ,
            r.bufferFragmentData = function(t, e, r, i, n) {
                var a;
                if (t && this.state === yi) {
                    var s = t.data1
                      , o = t.data2
                      , l = s;
                    if (s && o && (l = Gt(s, o)),
                    null != (a = l) && a.length) {
                        var u = {
                            type: t.type,
                            frag: e,
                            part: r,
                            chunkMeta: i,
                            parent: e.type,
                            data: l
                        };
                        if (this.hls.trigger(S.BUFFER_APPENDING, u),
                        t.dropped && t.independent && !r) {
                            if (n)
                                return;
                            this.flushBufferGap(e)
                        }
                    }
                }
            }
            ,
            r.flushBufferGap = function(t) {
                var e = this.media;
                if (e)
                    if (zr.isBuffered(e, e.currentTime)) {
                        var r = e.currentTime
                          , i = zr.bufferInfo(e, r, 0)
                          , n = t.duration
                          , a = Math.min(2 * this.config.maxFragLookUpTolerance, .25 * n)
                          , s = Math.max(Math.min(t.start - a, i.end - a), r + a);
                        t.start - s > a && this.flushMainBuffer(s, t.start)
                    } else
                        this.flushMainBuffer(0, t.start)
            }
            ,
            r.getFwdBufferInfo = function(t, e) {
                var r = this.getLoadPosition();
                return y(r) ? this.getFwdBufferInfoAtPos(t, r, e) : null
            }
            ,
            r.getFwdBufferInfoAtPos = function(t, e, r) {
                var i = this.config.maxBufferHole
                  , n = zr.bufferInfo(t, e, i);
                if (0 === n.len && void 0 !== n.nextStart) {
                    var a = this.fragmentTracker.getBufferedFrag(e, r);
                    if (a && n.nextStart < a.end)
                        return zr.bufferInfo(t, e, Math.max(n.nextStart, i))
                }
                return n
            }
            ,
            r.getMaxBufferLength = function(t) {
                var e, r = this.config;
                return e = t ? Math.max(8 * r.maxBufferSize / t, r.maxBufferLength) : r.maxBufferLength,
                Math.min(e, r.maxMaxBufferLength)
            }
            ,
            r.reduceMaxBufferLength = function(t) {
                var e = this.config
                  , r = t || e.maxBufferLength;
                return e.maxMaxBufferLength >= r && (e.maxMaxBufferLength /= 2,
                this.warn("Reduce max buffer length to " + e.maxMaxBufferLength + "s"),
                !0)
            }
            ,
            r.getAppendedFrag = function(t, e) {
                var r = this.fragmentTracker.getAppendedFrag(t, Ie);
                return r && "fragment"in r ? r.fragment : r
            }
            ,
            r.getNextFragment = function(t, e) {
                var r = e.fragments
                  , i = r.length;
                if (!i)
                    return null;
                var n, a = this.config, s = r[0].start;
                if (e.live) {
                    var o = a.initialLiveManifestSize;
                    if (i < o)
                        return this.warn("Not enough fragments to start playback (have: " + i + ", need: " + o + ")"),
                        null;
                    (!e.PTSKnown && !this.startFragRequested && -1 === this.startPosition || t < s) && (n = this.getInitialLiveFragment(e, r),
                    this.startPosition = this.nextLoadPosition = n ? this.hls.liveSyncPosition || n.start : t)
                } else
                    t <= s && (n = r[0]);
                if (!n) {
                    var l = a.lowLatencyMode ? e.partEnd : e.fragmentEnd;
                    n = this.getFragmentAtPosition(t, l, e)
                }
                return this.mapToInitFragWhenRequired(n)
            }
            ,
            r.isLoopLoading = function(t, e) {
                var r = this.fragmentTracker.getState(t);
                return (r === Yr || r === Vr && !!t.gap) && this.nextLoadPosition > e
            }
            ,
            r.getNextFragmentLoopLoading = function(t, e, r, i, n) {
                var a = t.gap
                  , s = this.getNextFragment(this.nextLoadPosition, e);
                if (null === s)
                    return s;
                if (t = s,
                a && t && !t.gap && r.nextStart) {
                    var o = this.getFwdBufferInfoAtPos(this.mediaBuffer ? this.mediaBuffer : this.media, r.nextStart, i);
                    if (null !== o && r.len + o.len >= n)
                        return this.log('buffer full after gaps in "' + i + '" playlist starting at sn: ' + t.sn),
                        null
                }
                return t
            }
            ,
            r.mapToInitFragWhenRequired = function(t) {
                return null == t || !t.initSegment || null != t && t.initSegment.data || this.bitrateTest ? t : t.initSegment
            }
            ,
            r.getNextPart = function(t, e, r) {
                for (var i = -1, n = !1, a = !0, s = 0, o = t.length; s < o; s++) {
                    var l = t[s];
                    if (a = a && !l.independent,
                    i > -1 && r < l.start)
                        break;
                    var u = l.loaded;
                    u ? i = -1 : (n || l.independent || a) && l.fragment === e && (i = s),
                    n = u
                }
                return i
            }
            ,
            r.loadedEndOfParts = function(t, e) {
                var r = t[t.length - 1];
                return r && e > r.start && r.loaded
            }
            ,
            r.getInitialLiveFragment = function(t, e) {
                var r = this.fragPrevious
                  , i = null;
                if (r) {
                    if (t.hasProgramDateTime && (this.log("Live playlist, switching playlist, load frag with same PDT: " + r.programDateTime),
                    i = function(t, e, r) {
                        if (null === e || !Array.isArray(t) || !t.length || !y(e))
                            return null;
                        if (e < (t[0].programDateTime || 0))
                            return null;
                        if (e >= (t[t.length - 1].endProgramDateTime || 0))
                            return null;
                        r = r || 0;
                        for (var i = 0; i < t.length; ++i) {
                            var n = t[i];
                            if (yr(e, r, n))
                                return n
                        }
                        return null
                    }(e, r.endProgramDateTime, this.config.maxFragLookUpTolerance)),
                    !i) {
                        var n = r.sn + 1;
                        if (n >= t.startSN && n <= t.endSN) {
                            var a = e[n - t.startSN];
                            r.cc === a.cc && (i = a,
                            this.log("Live playlist, switching playlist, load frag with next SN: " + i.sn))
                        }
                        i || (i = function(t, e) {
                            return vr(t, (function(t) {
                                return t.cc < e ? 1 : t.cc > e ? -1 : 0
                            }
                            ))
                        }(e, r.cc),
                        i && this.log("Live playlist, switching playlist, load frag with same CC: " + i.sn))
                    }
                } else {
                    var s = this.hls.liveSyncPosition;
                    null !== s && (i = this.getFragmentAtPosition(s, this.bitrateTest ? t.fragmentEnd : t.edge, t))
                }
                return i
            }
            ,
            r.getFragmentAtPosition = function(t, e, r) {
                var i, n = this.config, a = this.fragPrevious, s = r.fragments, o = r.endSN, l = r.fragmentHint, u = n.maxFragLookUpTolerance, h = r.partList, d = !!(n.lowLatencyMode && null != h && h.length && l);
                if (d && l && !this.bitrateTest && (s = s.concat(l),
                o = l.sn),
                i = t < e ? mr(a, s, t, t > e - u ? 0 : u) : s[s.length - 1]) {
                    var c = i.sn - r.startSN
                      , f = this.fragmentTracker.getState(i);
                    if ((f === Yr || f === Vr && i.gap) && (a = i),
                    a && i.sn === a.sn && (!d || h[0].fragment.sn > i.sn) && a && i.level === a.level) {
                        var g = s[c + 1];
                        i = i.sn < o && this.fragmentTracker.getState(g) !== Yr ? g : null
                    }
                }
                return i
            }
            ,
            r.synchronizeToLiveEdge = function(t) {
                var e = this.config
                  , r = this.media;
                if (r) {
                    var i = this.hls.liveSyncPosition
                      , n = r.currentTime
                      , a = t.fragments[0].start
                      , s = t.edge
                      , o = n >= a - e.maxFragLookUpTolerance && n <= s;
                    if (null !== i && r.duration > i && (n < i || !o)) {
                        var l = void 0 !== e.liveMaxLatencyDuration ? e.liveMaxLatencyDuration : e.liveMaxLatencyDurationCount * t.targetduration;
                        (!o && r.readyState < 4 || n < s - l) && (this.loadedmetadata || (this.nextLoadPosition = i),
                        r.readyState && (this.warn("Playback: " + n.toFixed(3) + " is located too far from the end of live sliding playlist: " + s + ", reset currentTime to : " + i.toFixed(3)),
                        r.currentTime = i))
                    }
                }
            }
            ,
            r.alignPlaylists = function(t, e, r) {
                var i = t.fragments.length;
                if (!i)
                    return this.warn("No fragments in live playlist"),
                    0;
                var n = t.fragments[0].start
                  , a = !e
                  , s = t.alignedSliding && y(n);
                if (a || !s && !n) {
                    var o = this.fragPrevious;
                    ti(o, r, t);
                    var l = t.fragments[0].start;
                    return this.log("Live playlist sliding: " + l.toFixed(2) + " start-sn: " + (e ? e.startSN : "na") + "->" + t.startSN + " prev-sn: " + (o ? o.sn : "na") + " fragments: " + i),
                    l
                }
                return n
            }
            ,
            r.waitForCdnTuneIn = function(t) {
                return t.live && t.canBlockReload && t.partTarget && t.tuneInGoal > Math.max(t.partHoldBack, 3 * t.partTarget)
            }
            ,
            r.setStartPosition = function(t, e) {
                var r = this.startPosition;
                if (r < e && (r = -1),
                -1 === r || -1 === this.lastCurrentTime) {
                    var i = null !== this.startTimeOffset
                      , n = i ? this.startTimeOffset : t.startTimeOffset;
                    null !== n && y(n) ? (r = e + n,
                    n < 0 && (r += t.totalduration),
                    r = Math.min(Math.max(e, r), e + t.totalduration),
                    this.log("Start time offset " + n + " found in " + (i ? "multivariant" : "media") + " playlist, adjust startPosition to " + r),
                    this.startPosition = r) : t.live ? r = this.hls.liveSyncPosition || e : this.startPosition = r = 0,
                    this.lastCurrentTime = r
                }
                this.nextLoadPosition = r
            }
            ,
            r.getLoadPosition = function() {
                var t = this.media
                  , e = 0;
                return this.loadedmetadata && t ? e = t.currentTime : this.nextLoadPosition && (e = this.nextLoadPosition),
                e
            }
            ,
            r.handleFragLoadAborted = function(t, e) {
                this.transmuxer && "initSegment" !== t.sn && t.stats.aborted && (this.warn("Fragment " + t.sn + (e ? " part " + e.index : "") + " of level " + t.level + " was aborted"),
                this.resetFragmentLoading(t))
            }
            ,
            r.resetFragmentLoading = function(t) {
                this.fragCurrent && (this.fragContextChanged(t) || this.state === mi) || (this.state = fi)
            }
            ,
            r.onFragmentOrKeyLoadError = function(t, e) {
                if (e.chunkMeta && !e.frag) {
                    var r = this.getCurrentContext(e.chunkMeta);
                    r && (e.frag = r.frag)
                }
                var i = e.frag;
                if (i && i.type === t && this.levels)
                    if (this.fragContextChanged(i)) {
                        var n;
                        this.warn("Frag load error must match current frag to retry " + i.url + " > " + (null == (n = this.fragCurrent) ? void 0 : n.url))
                    } else {
                        var a = e.details === A.FRAG_GAP;
                        a && this.fragmentTracker.fragBuffered(i, !0);
                        var s = e.errorAction
                          , o = s || {}
                          , l = o.action
                          , u = o.retryCount
                          , h = void 0 === u ? 0 : u
                          , d = o.retryConfig;
                        if (s && l === Lr && d) {
                            this.resetStartWhenNotLoaded(this.levelLastLoaded);
                            var c = cr(d, h);
                            this.warn("Fragment " + i.sn + " of " + t + " " + i.level + " errored with " + e.details + ", retrying loading " + (h + 1) + "/" + d.maxNumRetry + " in " + c + "ms"),
                            s.resolved = !0,
                            this.retryDate = self.performance.now() + c,
                            this.state = mi
                        } else if (d && s) {
                            if (this.resetFragmentErrors(t),
                            !(h < d.maxNumRetry))
                                return void w.warn(e.details + " reached or exceeded max retry (" + h + ")");
                            a || l === Sr || (s.resolved = !0)
                        } else
                            (null == s ? void 0 : s.action) === Tr ? this.state = Ai : this.state = Si;
                        this.tickImmediate()
                    }
            }
            ,
            r.reduceLengthAndFlushBuffer = function(t) {
                if (this.state === yi || this.state === Ei) {
                    var e = t.parent
                      , r = this.getFwdBufferInfo(this.mediaBuffer, e)
                      , i = r && r.len > .5;
                    i && this.reduceMaxBufferLength(r.len);
                    var n = !i;
                    return n && this.warn("Buffer full error while media.currentTime is not buffered, flush " + e + " buffer"),
                    t.frag && (this.fragmentTracker.removeFragment(t.frag),
                    this.nextLoadPosition = t.frag.start),
                    this.resetLoadingState(),
                    n
                }
                return !1
            }
            ,
            r.resetFragmentErrors = function(t) {
                t === we && (this.fragCurrent = null),
                this.loadedmetadata || (this.startFragRequested = !1),
                this.state !== ci && (this.state = fi)
            }
            ,
            r.afterBufferFlushed = function(t, e, r) {
                if (t) {
                    var i = zr.getBuffered(t);
                    this.fragmentTracker.detectEvictedFragments(e, i, r),
                    this.state === Ti && this.resetLoadingState()
                }
            }
            ,
            r.resetLoadingState = function() {
                this.log("Reset loading state"),
                this.fragCurrent = null,
                this.fragPrevious = null,
                this.state = fi
            }
            ,
            r.resetStartWhenNotLoaded = function(t) {
                if (!this.loadedmetadata) {
                    this.startFragRequested = !1;
                    var e = t ? t.details : null;
                    null != e && e.live ? (this.startPosition = -1,
                    this.setStartPosition(e, 0),
                    this.resetLoadingState()) : this.nextLoadPosition = this.startPosition
                }
            }
            ,
            r.resetWhenMissingContext = function(t) {
                this.warn("The loading context changed while buffering fragment " + t.sn + " of level " + t.level + ". This chunk will not be buffered."),
                this.removeUnbufferedFrags(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState()
            }
            ,
            r.removeUnbufferedFrags = function(t) {
                void 0 === t && (t = 0),
                this.fragmentTracker.removeFragmentsInRange(t, 1 / 0, this.playlistType, !1, !0)
            }
            ,
            r.updateLevelTiming = function(t, e, r, i) {
                var n, a = this, s = r.details;
                if (s) {
                    if (!Object.keys(t.elementaryStreams).reduce((function(e, n) {
                        var o = t.elementaryStreams[n];
                        if (o) {
                            var l = o.endPTS - o.startPTS;
                            if (l <= 0)
                                return a.warn("Could not parse fragment " + t.sn + " " + n + " duration reliably (" + l + ")"),
                                e || !1;
                            var u = i ? 0 : ir(s, t, o.startPTS, o.endPTS, o.startDTS, o.endDTS);
                            return a.hls.trigger(S.LEVEL_PTS_UPDATED, {
                                details: s,
                                level: r,
                                drift: u,
                                type: n,
                                frag: t,
                                start: o.startPTS,
                                end: o.endPTS
                            }),
                            !0
                        }
                        return e
                    }
                    ), !1) && null === (null == (n = this.transmuxer) ? void 0 : n.error)) {
                        var o = new Error("Found no media in fragment " + t.sn + " of level " + t.level + " resetting transmuxer to fallback to playlist timing");
                        if (0 === r.fragmentError && (r.fragmentError++,
                        t.gap = !0,
                        this.fragmentTracker.removeFragment(t),
                        this.fragmentTracker.fragBuffered(t, !0)),
                        this.warn(o.message),
                        this.hls.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            fatal: !1,
                            error: o,
                            frag: t,
                            reason: "Found no media in msn " + t.sn + ' of level "' + r.url + '"'
                        }),
                        !this.hls)
                            return;
                        this.resetTransmuxer()
                    }
                    this.state = Ei,
                    this.hls.trigger(S.FRAG_PARSED, {
                        frag: t,
                        part: e
                    })
                } else
                    this.warn("level.details undefined")
            }
            ,
            r.resetTransmuxer = function() {
                this.transmuxer && (this.transmuxer.destroy(),
                this.transmuxer = null)
            }
            ,
            r.recoverWorkerError = function(t) {
                "demuxerWorker" === t.event && (this.fragmentTracker.removeAllFragments(),
                this.resetTransmuxer(),
                this.resetStartWhenNotLoaded(this.levelLastLoaded),
                this.resetLoadingState())
            }
            ,
            s(e, [{
                key: "state",
                get: function() {
                    return this._state
                },
                set: function(t) {
                    var e = this._state;
                    e !== t && (this._state = t,
                    this.log(e + "->" + t))
                }
            }]),
            e
        }(Gr)
          , ki = function() {
            function t() {
                this.chunks = [],
                this.dataLength = 0
            }
            var e = t.prototype;
            return e.push = function(t) {
                this.chunks.push(t),
                this.dataLength += t.length
            }
            ,
            e.flush = function() {
                var t, e = this.chunks, r = this.dataLength;
                return e.length ? (t = 1 === e.length ? e[0] : function(t, e) {
                    for (var r = new Uint8Array(e), i = 0, n = 0; n < t.length; n++) {
                        var a = t[n];
                        r.set(a, i),
                        i += a.length
                    }
                    return r
                }(e, r),
                this.reset(),
                t) : new Uint8Array(0)
            }
            ,
            e.reset = function() {
                this.chunks.length = 0,
                this.dataLength = 0
            }
            ,
            t
        }();
        function bi(t, e) {
            return void 0 === t && (t = ""),
            void 0 === e && (e = 9e4),
            {
                type: t,
                id: -1,
                pid: -1,
                inputTimeScale: e,
                sequenceNumber: -1,
                samples: [],
                dropped: 0
            }
        }
        var Di = function() {
            function t() {
                this._audioTrack = void 0,
                this._id3Track = void 0,
                this.frameIndex = 0,
                this.cachedData = null,
                this.basePTS = null,
                this.initPTS = null,
                this.lastPTS = null
            }
            var e = t.prototype;
            return e.resetInitSegment = function(t, e, r, i) {
                this._id3Track = {
                    type: "id3",
                    id: 3,
                    pid: -1,
                    inputTimeScale: 9e4,
                    sequenceNumber: 0,
                    samples: [],
                    dropped: 0
                }
            }
            ,
            e.resetTimeStamp = function(t) {
                this.initPTS = t,
                this.resetContiguity()
            }
            ,
            e.resetContiguity = function() {
                this.basePTS = null,
                this.lastPTS = null,
                this.frameIndex = 0
            }
            ,
            e.canParse = function(t, e) {
                return !1
            }
            ,
            e.appendFrame = function(t, e, r) {}
            ,
            e.demux = function(t, e) {
                this.cachedData && (t = Gt(this.cachedData, t),
                this.cachedData = null);
                var r, i = lt(t, 0), n = i ? i.length : 0, a = this._audioTrack, s = this._id3Track, o = i ? dt(i) : void 0, l = t.length;
                for ((null === this.basePTS || 0 === this.frameIndex && y(o)) && (this.basePTS = Ii(o, e, this.initPTS),
                this.lastPTS = this.basePTS),
                null === this.lastPTS && (this.lastPTS = this.basePTS),
                i && i.length > 0 && s.samples.push({
                    pts: this.lastPTS,
                    dts: this.lastPTS,
                    data: i,
                    type: Be,
                    duration: Number.POSITIVE_INFINITY
                }); n < l; ) {
                    if (this.canParse(t, n)) {
                        var u = this.appendFrame(a, t, n);
                        u ? (this.frameIndex++,
                        this.lastPTS = u.sample.pts,
                        r = n += u.length) : n = l
                    } else
                        ht(t, n) ? (i = lt(t, n),
                        s.samples.push({
                            pts: this.lastPTS,
                            dts: this.lastPTS,
                            data: i,
                            type: Be,
                            duration: Number.POSITIVE_INFINITY
                        }),
                        r = n += i.length) : n++;
                    if (n === l && r !== l) {
                        var h = nt(t, r);
                        this.cachedData ? this.cachedData = Gt(this.cachedData, h) : this.cachedData = h
                    }
                }
                return {
                    audioTrack: a,
                    videoTrack: bi(),
                    id3Track: s,
                    textTrack: bi()
                }
            }
            ,
            e.demuxSampleAes = function(t, e, r) {
                return Promise.reject(new Error("[" + this + "] This demuxer does not support Sample-AES decryption"))
            }
            ,
            e.flush = function(t) {
                var e = this.cachedData;
                return e && (this.cachedData = null,
                this.demux(e, 0)),
                {
                    audioTrack: this._audioTrack,
                    videoTrack: bi(),
                    id3Track: this._id3Track,
                    textTrack: bi()
                }
            }
            ,
            e.destroy = function() {}
            ,
            t
        }()
          , Ii = function(t, e, r) {
            return y(t) ? 90 * t : 9e4 * e + (r ? 9e4 * r.baseTime / r.timescale : 0)
        };
        function wi(t, e) {
            return 255 === t[e] && 240 == (246 & t[e + 1])
        }
        function Ci(t, e) {
            return 1 & t[e + 1] ? 7 : 9
        }
        function _i(t, e) {
            return (3 & t[e + 3]) << 11 | t[e + 4] << 3 | (224 & t[e + 5]) >>> 5
        }
        function xi(t, e) {
            return e + 1 < t.length && wi(t, e)
        }
        function Pi(t, e) {
            if (xi(t, e)) {
                var r = Ci(t, e);
                if (e + r >= t.length)
                    return !1;
                var i = _i(t, e);
                if (i <= r)
                    return !1;
                var n = e + i;
                return n === t.length || xi(t, n)
            }
            return !1
        }
        function Fi(t, e, r, i, n) {
            if (!t.samplerate) {
                var a = function(t, e, r, i) {
                    var n, a, s, o, l = navigator.userAgent.toLowerCase(), u = i, h = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                    n = 1 + ((192 & e[r + 2]) >>> 6);
                    var d = (60 & e[r + 2]) >>> 2;
                    if (!(d > h.length - 1))
                        return s = (1 & e[r + 2]) << 2,
                        s |= (192 & e[r + 3]) >>> 6,
                        w.log("manifest codec:" + i + ", ADTS type:" + n + ", samplingIndex:" + d),
                        /firefox/i.test(l) ? d >= 6 ? (n = 5,
                        o = new Array(4),
                        a = d - 3) : (n = 2,
                        o = new Array(2),
                        a = d) : -1 !== l.indexOf("android") ? (n = 2,
                        o = new Array(2),
                        a = d) : (n = 5,
                        o = new Array(4),
                        i && (-1 !== i.indexOf("mp4a.40.29") || -1 !== i.indexOf("mp4a.40.5")) || !i && d >= 6 ? a = d - 3 : ((i && -1 !== i.indexOf("mp4a.40.2") && (d >= 6 && 1 === s || /vivaldi/i.test(l)) || !i && 1 === s) && (n = 2,
                        o = new Array(2)),
                        a = d)),
                        o[0] = n << 3,
                        o[0] |= (14 & d) >> 1,
                        o[1] |= (1 & d) << 7,
                        o[1] |= s << 3,
                        5 === n && (o[1] |= (14 & a) >> 1,
                        o[2] = (1 & a) << 7,
                        o[2] |= 8,
                        o[3] = 0),
                        {
                            config: o,
                            samplerate: h[d],
                            channelCount: s,
                            codec: "mp4a.40." + n,
                            manifestCodec: u
                        };
                    var c = new Error("invalid ADTS sampling index:" + d);
                    t.emit(S.ERROR, S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.FRAG_PARSING_ERROR,
                        fatal: !0,
                        error: c,
                        reason: c.message
                    })
                }(e, r, i, n);
                if (!a)
                    return;
                t.config = a.config,
                t.samplerate = a.samplerate,
                t.channelCount = a.channelCount,
                t.codec = a.codec,
                t.manifestCodec = a.manifestCodec,
                w.log("parsed codec:" + t.codec + ", rate:" + a.samplerate + ", channels:" + a.channelCount)
            }
        }
        function Mi(t) {
            return 9216e4 / t
        }
        function Oi(t, e, r, i, n) {
            var a, s = i + n * Mi(t.samplerate), o = function(t, e) {
                var r = Ci(t, e);
                if (e + r <= t.length) {
                    var i = _i(t, e) - r;
                    if (i > 0)
                        return {
                            headerLength: r,
                            frameLength: i
                        }
                }
            }(e, r);
            if (o) {
                var l = o.frameLength
                  , u = o.headerLength
                  , h = u + l
                  , d = Math.max(0, r + h - e.length);
                d ? (a = new Uint8Array(h - u)).set(e.subarray(r + u, e.length), 0) : a = e.subarray(r + u, r + h);
                var c = {
                    unit: a,
                    pts: s
                };
                return d || t.samples.push(c),
                {
                    sample: c,
                    length: h,
                    missing: d
                }
            }
            var f = e.length - r;
            return (a = new Uint8Array(f)).set(e.subarray(r, e.length), 0),
            {
                sample: {
                    unit: a,
                    pts: s
                },
                length: f,
                missing: -1
            }
        }
        var Ni = null
          , Ui = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160]
          , Bi = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3]
          , Gi = [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]]
          , Ki = [0, 1, 1, 4];
        function Hi(t, e, r, i, n) {
            if (!(r + 24 > e.length)) {
                var a = Vi(e, r);
                if (a && r + a.frameLength <= e.length) {
                    var s = i + n * (9e4 * a.samplesPerFrame / a.sampleRate)
                      , o = {
                        unit: e.subarray(r, r + a.frameLength),
                        pts: s,
                        dts: s
                    };
                    return t.config = [],
                    t.channelCount = a.channelCount,
                    t.samplerate = a.sampleRate,
                    t.samples.push(o),
                    {
                        sample: o,
                        length: a.frameLength,
                        missing: 0
                    }
                }
            }
        }
        function Vi(t, e) {
            var r = t[e + 1] >> 3 & 3
              , i = t[e + 1] >> 1 & 3
              , n = t[e + 2] >> 4 & 15
              , a = t[e + 2] >> 2 & 3;
            if (1 !== r && 0 !== n && 15 !== n && 3 !== a) {
                var s = t[e + 2] >> 1 & 1
                  , o = t[e + 3] >> 6
                  , l = 1e3 * Ui[14 * (3 === r ? 3 - i : 3 === i ? 3 : 4) + n - 1]
                  , u = Bi[3 * (3 === r ? 0 : 2 === r ? 1 : 2) + a]
                  , h = 3 === o ? 1 : 2
                  , d = Gi[r][i]
                  , c = Ki[i]
                  , f = 8 * d * c
                  , g = Math.floor(d * l / u + s) * c;
                if (null === Ni) {
                    var v = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
                    Ni = v ? parseInt(v[1]) : 0
                }
                return !!Ni && Ni <= 87 && 2 === i && l >= 224e3 && 0 === o && (t[e + 3] = 128 | t[e + 3]),
                {
                    sampleRate: u,
                    channelCount: h,
                    frameLength: g,
                    samplesPerFrame: f
                }
            }
        }
        function Yi(t, e) {
            return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1])
        }
        function Wi(t, e) {
            return e + 1 < t.length && Yi(t, e)
        }
        function ji(t, e) {
            if (e + 1 < t.length && Yi(t, e)) {
                var r = Vi(t, e)
                  , i = 4;
                null != r && r.frameLength && (i = r.frameLength);
                var n = e + i;
                return n === t.length || Wi(t, n)
            }
            return !1
        }
        var qi = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this) || this).observer = void 0,
                i.config = void 0,
                i.observer = e,
                i.config = r,
                i
            }
            l(e, t);
            var r = e.prototype;
            return r.resetInitSegment = function(e, r, i, n) {
                t.prototype.resetInitSegment.call(this, e, r, i, n),
                this._audioTrack = {
                    container: "audio/adts",
                    type: "audio",
                    id: 2,
                    pid: -1,
                    sequenceNumber: 0,
                    segmentCodec: "aac",
                    samples: [],
                    manifestCodec: r,
                    duration: n,
                    inputTimeScale: 9e4,
                    dropped: 0
                }
            }
            ,
            e.probe = function(t) {
                if (!t)
                    return !1;
                var e = lt(t, 0)
                  , r = (null == e ? void 0 : e.length) || 0;
                if (ji(t, r))
                    return !1;
                for (var i = t.length; r < i; r++)
                    if (Pi(t, r))
                        return w.log("ADTS sync word found !"),
                        !0;
                return !1
            }
            ,
            r.canParse = function(t, e) {
                return function(t, e) {
                    return function(t, e) {
                        return e + 5 < t.length
                    }(t, e) && wi(t, e) && _i(t, e) <= t.length - e
                }(t, e)
            }
            ,
            r.appendFrame = function(t, e, r) {
                Fi(t, this.observer, e, r, t.manifestCodec);
                var i = Oi(t, e, r, this.basePTS, this.frameIndex);
                if (i && 0 === i.missing)
                    return i
            }
            ,
            e
        }(Di)
          , Xi = /\/emsg[-/]ID3/i
          , zi = function() {
            function t(t, e) {
                this.remainderData = null,
                this.timeOffset = 0,
                this.config = void 0,
                this.videoTrack = void 0,
                this.audioTrack = void 0,
                this.id3Track = void 0,
                this.txtTrack = void 0,
                this.config = e
            }
            var e = t.prototype;
            return e.resetTimeStamp = function() {}
            ,
            e.resetInitSegment = function(t, e, r, i) {
                var n = this.videoTrack = bi("video", 1)
                  , a = this.audioTrack = bi("audio", 1)
                  , s = this.txtTrack = bi("text", 1);
                if (this.id3Track = bi("id3", 1),
                this.timeOffset = 0,
                null != t && t.byteLength) {
                    var o = Pt(t);
                    if (o.video) {
                        var l = o.video
                          , u = l.id
                          , h = l.timescale
                          , d = l.codec;
                        n.id = u,
                        n.timescale = s.timescale = h,
                        n.codec = d
                    }
                    if (o.audio) {
                        var c = o.audio
                          , f = c.id
                          , g = c.timescale
                          , v = c.codec;
                        a.id = f,
                        a.timescale = g,
                        a.codec = v
                    }
                    s.id = kt.text,
                    n.sampleDuration = 0,
                    n.duration = a.duration = i
                }
            }
            ,
            e.resetContiguity = function() {
                this.remainderData = null
            }
            ,
            t.probe = function(t) {
                return function(t) {
                    for (var e = t.byteLength, r = 0; r < e; ) {
                        var i = It(t, r);
                        if (i > 8 && 109 === t[r + 4] && 111 === t[r + 5] && 111 === t[r + 6] && 102 === t[r + 7])
                            return !0;
                        r = i > 1 ? r + i : e
                    }
                    return !1
                }(t)
            }
            ,
            e.demux = function(t, e) {
                this.timeOffset = e;
                var r = t
                  , i = this.videoTrack
                  , n = this.txtTrack;
                if (this.config.progressive) {
                    this.remainderData && (r = Gt(this.remainderData, t));
                    var a = function(t) {
                        var e = {
                            valid: null,
                            remainder: null
                        }
                          , r = _t(t, ["moof"]);
                        if (r.length < 2)
                            return e.remainder = t,
                            e;
                        var i = r[r.length - 1];
                        return e.valid = nt(t, 0, i.byteOffset - 8),
                        e.remainder = nt(t, i.byteOffset - 8),
                        e
                    }(r);
                    this.remainderData = a.remainder,
                    i.samples = a.valid || new Uint8Array
                } else
                    i.samples = r;
                var s = this.extractID3Track(i, e);
                return n.samples = Kt(e, i),
                {
                    videoTrack: i,
                    audioTrack: this.audioTrack,
                    id3Track: s,
                    textTrack: this.txtTrack
                }
            }
            ,
            e.flush = function() {
                var t = this.timeOffset
                  , e = this.videoTrack
                  , r = this.txtTrack;
                e.samples = this.remainderData || new Uint8Array,
                this.remainderData = null;
                var i = this.extractID3Track(e, this.timeOffset);
                return r.samples = Kt(t, e),
                {
                    videoTrack: e,
                    audioTrack: bi(),
                    id3Track: i,
                    textTrack: bi()
                }
            }
            ,
            e.extractID3Track = function(t, e) {
                var r = this.id3Track;
                if (t.samples.length) {
                    var i = _t(t.samples, ["emsg"]);
                    i && i.forEach((function(t) {
                        var i = function(t) {
                            var e = t[0]
                              , r = ""
                              , i = ""
                              , n = 0
                              , a = 0
                              , s = 0
                              , o = 0
                              , l = 0
                              , u = 0;
                            if (0 === e) {
                                for (; "\0" !== bt(t.subarray(u, u + 1)); )
                                    r += bt(t.subarray(u, u + 1)),
                                    u += 1;
                                for (r += bt(t.subarray(u, u + 1)),
                                u += 1; "\0" !== bt(t.subarray(u, u + 1)); )
                                    i += bt(t.subarray(u, u + 1)),
                                    u += 1;
                                i += bt(t.subarray(u, u + 1)),
                                u += 1,
                                n = It(t, 12),
                                a = It(t, 16),
                                o = It(t, 20),
                                l = It(t, 24),
                                u = 28
                            } else if (1 === e) {
                                n = It(t, u += 4);
                                var h = It(t, u += 4)
                                  , d = It(t, u += 4);
                                for (u += 4,
                                s = Math.pow(2, 32) * h + d,
                                E(s) || (s = Number.MAX_SAFE_INTEGER,
                                w.warn("Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box")),
                                o = It(t, u),
                                l = It(t, u += 4),
                                u += 4; "\0" !== bt(t.subarray(u, u + 1)); )
                                    r += bt(t.subarray(u, u + 1)),
                                    u += 1;
                                for (r += bt(t.subarray(u, u + 1)),
                                u += 1; "\0" !== bt(t.subarray(u, u + 1)); )
                                    i += bt(t.subarray(u, u + 1)),
                                    u += 1;
                                i += bt(t.subarray(u, u + 1)),
                                u += 1
                            }
                            return {
                                schemeIdUri: r,
                                value: i,
                                timeScale: n,
                                presentationTime: s,
                                presentationTimeDelta: a,
                                eventDuration: o,
                                id: l,
                                payload: t.subarray(u, t.byteLength)
                            }
                        }(t);
                        if (Xi.test(i.schemeIdUri)) {
                            var n = y(i.presentationTime) ? i.presentationTime / i.timeScale : e + i.presentationTimeDelta / i.timeScale
                              , a = 4294967295 === i.eventDuration ? Number.POSITIVE_INFINITY : i.eventDuration / i.timeScale;
                            a <= .001 && (a = Number.POSITIVE_INFINITY);
                            var s = i.payload;
                            r.samples.push({
                                data: s,
                                len: s.byteLength,
                                dts: n,
                                pts: n,
                                type: Ke,
                                duration: a
                            })
                        }
                    }
                    ))
                }
                return r
            }
            ,
            e.demuxSampleAes = function(t, e, r) {
                return Promise.reject(new Error("The MP4 demuxer does not support SAMPLE-AES decryption"))
            }
            ,
            e.destroy = function() {}
            ,
            t
        }()
          , Qi = function(t, e) {
            var r = 0
              , i = 5;
            e += i;
            for (var n = new Uint32Array(1), a = new Uint32Array(1), s = new Uint8Array(1); i > 0; ) {
                s[0] = t[e];
                var o = Math.min(i, 8)
                  , l = 8 - o;
                a[0] = 4278190080 >>> 24 + l << l,
                n[0] = (s[0] & a[0]) >> l,
                r = r ? r << o | n[0] : n[0],
                e += 1,
                i -= o
            }
            return r
        }
          , Ji = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this) || this).observer = void 0,
                r.observer = e,
                r
            }
            l(e, t);
            var r = e.prototype;
            return r.resetInitSegment = function(e, r, i, n) {
                t.prototype.resetInitSegment.call(this, e, r, i, n),
                this._audioTrack = {
                    container: "audio/ac-3",
                    type: "audio",
                    id: 2,
                    pid: -1,
                    sequenceNumber: 0,
                    segmentCodec: "ac3",
                    samples: [],
                    manifestCodec: r,
                    duration: n,
                    inputTimeScale: 9e4,
                    dropped: 0
                }
            }
            ,
            r.canParse = function(t, e) {
                return e + 64 < t.length
            }
            ,
            r.appendFrame = function(t, e, r) {
                var i = $i(t, e, r, this.basePTS, this.frameIndex);
                if (-1 !== i)
                    return {
                        sample: t.samples[t.samples.length - 1],
                        length: i,
                        missing: 0
                    }
            }
            ,
            e.probe = function(t) {
                if (!t)
                    return !1;
                var e = lt(t, 0);
                if (!e)
                    return !1;
                var r = e.length;
                return 11 === t[r] && 119 === t[r + 1] && void 0 !== dt(e) && Qi(t, r) < 16
            }
            ,
            e
        }(Di);
        function $i(t, e, r, i, n) {
            if (r + 8 > e.length)
                return -1;
            if (11 !== e[r] || 119 !== e[r + 1])
                return -1;
            var a = e[r + 4] >> 6;
            if (a >= 3)
                return -1;
            var s = [48e3, 44100, 32e3][a]
              , o = 63 & e[r + 4]
              , l = 2 * [64, 69, 96, 64, 70, 96, 80, 87, 120, 80, 88, 120, 96, 104, 144, 96, 105, 144, 112, 121, 168, 112, 122, 168, 128, 139, 192, 128, 140, 192, 160, 174, 240, 160, 175, 240, 192, 208, 288, 192, 209, 288, 224, 243, 336, 224, 244, 336, 256, 278, 384, 256, 279, 384, 320, 348, 480, 320, 349, 480, 384, 417, 576, 384, 418, 576, 448, 487, 672, 448, 488, 672, 512, 557, 768, 512, 558, 768, 640, 696, 960, 640, 697, 960, 768, 835, 1152, 768, 836, 1152, 896, 975, 1344, 896, 976, 1344, 1024, 1114, 1536, 1024, 1115, 1536, 1152, 1253, 1728, 1152, 1254, 1728, 1280, 1393, 1920, 1280, 1394, 1920][3 * o + a];
            if (r + l > e.length)
                return -1;
            var u = e[r + 6] >> 5
              , h = 0;
            2 === u ? h += 2 : (1 & u && 1 !== u && (h += 2),
            4 & u && (h += 2));
            var d = (e[r + 6] << 8 | e[r + 7]) >> 12 - h & 1
              , c = [2, 1, 2, 3, 3, 4, 4, 5][u] + d
              , f = e[r + 5] >> 3
              , g = 7 & e[r + 5]
              , v = new Uint8Array([a << 6 | f << 1 | g >> 2, (3 & g) << 6 | u << 3 | d << 2 | o >> 4, o << 4 & 224])
              , m = i + n * (1536 / s * 9e4)
              , p = e.subarray(r, r + l);
            return t.config = v,
            t.channelCount = c,
            t.samplerate = s,
            t.samples.push({
                unit: p,
                pts: m
            }),
            l
        }
        var Zi = function() {
            function t() {
                this.VideoSample = null
            }
            var e = t.prototype;
            return e.createVideoSample = function(t, e, r, i) {
                return {
                    key: t,
                    frame: !1,
                    pts: e,
                    dts: r,
                    units: [],
                    debug: i,
                    length: 0
                }
            }
            ,
            e.getLastNalUnit = function(t) {
                var e, r, i = this.VideoSample;
                if (i && 0 !== i.units.length || (i = t[t.length - 1]),
                null != (e = i) && e.units) {
                    var n = i.units;
                    r = n[n.length - 1]
                }
                return r
            }
            ,
            e.pushAccessUnit = function(t, e) {
                if (t.units.length && t.frame) {
                    if (void 0 === t.pts) {
                        var r = e.samples
                          , i = r.length;
                        if (!i)
                            return void e.dropped++;
                        var n = r[i - 1];
                        t.pts = n.pts,
                        t.dts = n.dts
                    }
                    e.samples.push(t)
                }
                t.debug.length && w.log(t.pts + "/" + t.dts + ":" + t.debug)
            }
            ,
            t
        }()
          , tn = function() {
            function t(t) {
                this.data = void 0,
                this.bytesAvailable = void 0,
                this.word = void 0,
                this.bitsAvailable = void 0,
                this.data = t,
                this.bytesAvailable = t.byteLength,
                this.word = 0,
                this.bitsAvailable = 0
            }
            var e = t.prototype;
            return e.loadWord = function() {
                var t = this.data
                  , e = this.bytesAvailable
                  , r = t.byteLength - e
                  , i = new Uint8Array(4)
                  , n = Math.min(4, e);
                if (0 === n)
                    throw new Error("no bytes available");
                i.set(t.subarray(r, r + n)),
                this.word = new DataView(i.buffer).getUint32(0),
                this.bitsAvailable = 8 * n,
                this.bytesAvailable -= n
            }
            ,
            e.skipBits = function(t) {
                var e;
                t = Math.min(t, 8 * this.bytesAvailable + this.bitsAvailable),
                this.bitsAvailable > t ? (this.word <<= t,
                this.bitsAvailable -= t) : (t -= this.bitsAvailable,
                t -= (e = t >> 3) << 3,
                this.bytesAvailable -= e,
                this.loadWord(),
                this.word <<= t,
                this.bitsAvailable -= t)
            }
            ,
            e.readBits = function(t) {
                var e = Math.min(this.bitsAvailable, t)
                  , r = this.word >>> 32 - e;
                if (t > 32 && w.error("Cannot read more than 32 bits at a time"),
                this.bitsAvailable -= e,
                this.bitsAvailable > 0)
                    this.word <<= e;
                else {
                    if (!(this.bytesAvailable > 0))
                        throw new Error("no bits available");
                    this.loadWord()
                }
                return (e = t - e) > 0 && this.bitsAvailable ? r << e | this.readBits(e) : r
            }
            ,
            e.skipLZ = function() {
                var t;
                for (t = 0; t < this.bitsAvailable; ++t)
                    if (0 != (this.word & 2147483648 >>> t))
                        return this.word <<= t,
                        this.bitsAvailable -= t,
                        t;
                return this.loadWord(),
                t + this.skipLZ()
            }
            ,
            e.skipUEG = function() {
                this.skipBits(1 + this.skipLZ())
            }
            ,
            e.skipEG = function() {
                this.skipBits(1 + this.skipLZ())
            }
            ,
            e.readUEG = function() {
                var t = this.skipLZ();
                return this.readBits(t + 1) - 1
            }
            ,
            e.readEG = function() {
                var t = this.readUEG();
                return 1 & t ? 1 + t >>> 1 : -1 * (t >>> 1)
            }
            ,
            e.readBoolean = function() {
                return 1 === this.readBits(1)
            }
            ,
            e.readUByte = function() {
                return this.readBits(8)
            }
            ,
            e.readUShort = function() {
                return this.readBits(16)
            }
            ,
            e.readUInt = function() {
                return this.readBits(32)
            }
            ,
            e.skipScalingList = function(t) {
                for (var e = 8, r = 8, i = 0; i < t; i++)
                    0 !== r && (r = (e + this.readEG() + 256) % 256),
                    e = 0 === r ? e : r
            }
            ,
            e.readSPS = function() {
                var t, e, r, i = 0, n = 0, a = 0, s = 0, o = this.readUByte.bind(this), l = this.readBits.bind(this), u = this.readUEG.bind(this), h = this.readBoolean.bind(this), d = this.skipBits.bind(this), c = this.skipEG.bind(this), f = this.skipUEG.bind(this), g = this.skipScalingList.bind(this);
                o();
                var v = o();
                if (l(5),
                d(3),
                o(),
                f(),
                100 === v || 110 === v || 122 === v || 244 === v || 44 === v || 83 === v || 86 === v || 118 === v || 128 === v) {
                    var m = u();
                    if (3 === m && d(1),
                    f(),
                    f(),
                    d(1),
                    h())
                        for (e = 3 !== m ? 8 : 12,
                        r = 0; r < e; r++)
                            h() && g(r < 6 ? 16 : 64)
                }
                f();
                var p = u();
                if (0 === p)
                    u();
                else if (1 === p)
                    for (d(1),
                    c(),
                    c(),
                    t = u(),
                    r = 0; r < t; r++)
                        c();
                f(),
                d(1);
                var y = u()
                  , E = u()
                  , T = l(1);
                0 === T && d(1),
                d(1),
                h() && (i = u(),
                n = u(),
                a = u(),
                s = u());
                var S = [1, 1];
                if (h() && h())
                    switch (o()) {
                    case 1:
                        S = [1, 1];
                        break;
                    case 2:
                        S = [12, 11];
                        break;
                    case 3:
                        S = [10, 11];
                        break;
                    case 4:
                        S = [16, 11];
                        break;
                    case 5:
                        S = [40, 33];
                        break;
                    case 6:
                        S = [24, 11];
                        break;
                    case 7:
                        S = [20, 11];
                        break;
                    case 8:
                        S = [32, 11];
                        break;
                    case 9:
                        S = [80, 33];
                        break;
                    case 10:
                        S = [18, 11];
                        break;
                    case 11:
                        S = [15, 11];
                        break;
                    case 12:
                        S = [64, 33];
                        break;
                    case 13:
                        S = [160, 99];
                        break;
                    case 14:
                        S = [4, 3];
                        break;
                    case 15:
                        S = [3, 2];
                        break;
                    case 16:
                        S = [2, 1];
                        break;
                    case 255:
                        S = [o() << 8 | o(), o() << 8 | o()]
                    }
                return {
                    width: Math.ceil(16 * (y + 1) - 2 * i - 2 * n),
                    height: (2 - T) * (E + 1) * 16 - (T ? 2 : 4) * (a + s),
                    pixelRatio: S
                }
            }
            ,
            e.readSliceType = function() {
                return this.readUByte(),
                this.readUEG(),
                this.readUEG()
            }
            ,
            t
        }()
          , en = function(t) {
            function e() {
                return t.apply(this, arguments) || this
            }
            l(e, t);
            var r = e.prototype;
            return r.parseAVCPES = function(t, e, r, i, n) {
                var a, s = this, o = this.parseAVCNALu(t, r.data), l = this.VideoSample, u = !1;
                r.data = null,
                l && o.length && !t.audFound && (this.pushAccessUnit(l, t),
                l = this.VideoSample = this.createVideoSample(!1, r.pts, r.dts, "")),
                o.forEach((function(i) {
                    var o;
                    switch (i.type) {
                    case 1:
                        var h = !1;
                        a = !0;
                        var d, c = i.data;
                        if (u && c.length > 4) {
                            var f = new tn(c).readSliceType();
                            2 !== f && 4 !== f && 7 !== f && 9 !== f || (h = !0)
                        }
                        h && null != (d = l) && d.frame && !l.key && (s.pushAccessUnit(l, t),
                        l = s.VideoSample = null),
                        l || (l = s.VideoSample = s.createVideoSample(!0, r.pts, r.dts, "")),
                        l.frame = !0,
                        l.key = h;
                        break;
                    case 5:
                        a = !0,
                        null != (o = l) && o.frame && !l.key && (s.pushAccessUnit(l, t),
                        l = s.VideoSample = null),
                        l || (l = s.VideoSample = s.createVideoSample(!0, r.pts, r.dts, "")),
                        l.key = !0,
                        l.frame = !0;
                        break;
                    case 6:
                        a = !0,
                        Vt(i.data, 1, r.pts, e.samples);
                        break;
                    case 7:
                        var g, v;
                        a = !0,
                        u = !0;
                        var m = i.data
                          , p = new tn(m).readSPS();
                        if (!t.sps || t.width !== p.width || t.height !== p.height || (null == (g = t.pixelRatio) ? void 0 : g[0]) !== p.pixelRatio[0] || (null == (v = t.pixelRatio) ? void 0 : v[1]) !== p.pixelRatio[1]) {
                            t.width = p.width,
                            t.height = p.height,
                            t.pixelRatio = p.pixelRatio,
                            t.sps = [m],
                            t.duration = n;
                            for (var y = m.subarray(1, 4), E = "avc1.", T = 0; T < 3; T++) {
                                var S = y[T].toString(16);
                                S.length < 2 && (S = "0" + S),
                                E += S
                            }
                            t.codec = E
                        }
                        break;
                    case 8:
                        a = !0,
                        t.pps = [i.data];
                        break;
                    case 9:
                        a = !0,
                        t.audFound = !0,
                        l && s.pushAccessUnit(l, t),
                        l = s.VideoSample = s.createVideoSample(!1, r.pts, r.dts, "");
                        break;
                    case 12:
                        a = !0;
                        break;
                    default:
                        a = !1,
                        l && (l.debug += "unknown NAL " + i.type + " ")
                    }
                    l && a && l.units.push(i)
                }
                )),
                i && l && (this.pushAccessUnit(l, t),
                this.VideoSample = null)
            }
            ,
            r.parseAVCNALu = function(t, e) {
                var r, i, n = e.byteLength, a = t.naluState || 0, s = a, o = [], l = 0, u = -1, h = 0;
                for (-1 === a && (u = 0,
                h = 31 & e[0],
                a = 0,
                l = 1); l < n; )
                    if (r = e[l++],
                    a)
                        if (1 !== a)
                            if (r)
                                if (1 === r) {
                                    if (i = l - a - 1,
                                    u >= 0) {
                                        var d = {
                                            data: e.subarray(u, i),
                                            type: h
                                        };
                                        o.push(d)
                                    } else {
                                        var c = this.getLastNalUnit(t.samples);
                                        c && (s && l <= 4 - s && c.state && (c.data = c.data.subarray(0, c.data.byteLength - s)),
                                        i > 0 && (c.data = Gt(c.data, e.subarray(0, i)),
                                        c.state = 0))
                                    }
                                    l < n ? (u = l,
                                    h = 31 & e[l],
                                    a = 0) : a = -1
                                } else
                                    a = 0;
                            else
                                a = 3;
                        else
                            a = r ? 0 : 2;
                    else
                        a = r ? 0 : 1;
                if (u >= 0 && a >= 0) {
                    var f = {
                        data: e.subarray(u, n),
                        type: h,
                        state: a
                    };
                    o.push(f)
                }
                if (0 === o.length) {
                    var g = this.getLastNalUnit(t.samples);
                    g && (g.data = Gt(g.data, e))
                }
                return t.naluState = a,
                o
            }
            ,
            e
        }(Zi)
          , rn = function() {
            function t(t, e, r) {
                this.keyData = void 0,
                this.decrypter = void 0,
                this.keyData = r,
                this.decrypter = new hi(e,{
                    removePKCS7Padding: !1
                })
            }
            var e = t.prototype;
            return e.decryptBuffer = function(t) {
                return this.decrypter.decrypt(t, this.keyData.key.buffer, this.keyData.iv.buffer)
            }
            ,
            e.decryptAacSample = function(t, e, r) {
                var i = this
                  , n = t[e].unit;
                if (!(n.length <= 16)) {
                    var a = n.subarray(16, n.length - n.length % 16)
                      , s = a.buffer.slice(a.byteOffset, a.byteOffset + a.length);
                    this.decryptBuffer(s).then((function(a) {
                        var s = new Uint8Array(a);
                        n.set(s, 16),
                        i.decrypter.isSync() || i.decryptAacSamples(t, e + 1, r)
                    }
                    ))
                }
            }
            ,
            e.decryptAacSamples = function(t, e, r) {
                for (; ; e++) {
                    if (e >= t.length)
                        return void r();
                    if (!(t[e].unit.length < 32 || (this.decryptAacSample(t, e, r),
                    this.decrypter.isSync())))
                        return
                }
            }
            ,
            e.getAvcEncryptedData = function(t) {
                for (var e = 16 * Math.floor((t.length - 48) / 160) + 16, r = new Int8Array(e), i = 0, n = 32; n < t.length - 16; n += 160,
                i += 16)
                    r.set(t.subarray(n, n + 16), i);
                return r
            }
            ,
            e.getAvcDecryptedUnit = function(t, e) {
                for (var r = new Uint8Array(e), i = 0, n = 32; n < t.length - 16; n += 160,
                i += 16)
                    t.set(r.subarray(i, i + 16), n);
                return t
            }
            ,
            e.decryptAvcSample = function(t, e, r, i, n) {
                var a = this
                  , s = Yt(n.data)
                  , o = this.getAvcEncryptedData(s);
                this.decryptBuffer(o.buffer).then((function(o) {
                    n.data = a.getAvcDecryptedUnit(s, o),
                    a.decrypter.isSync() || a.decryptAvcSamples(t, e, r + 1, i)
                }
                ))
            }
            ,
            e.decryptAvcSamples = function(t, e, r, i) {
                if (t instanceof Uint8Array)
                    throw new Error("Cannot decrypt samples of type Uint8Array");
                for (; ; e++,
                r = 0) {
                    if (e >= t.length)
                        return void i();
                    for (var n = t[e].units; !(r >= n.length); r++) {
                        var a = n[r];
                        if (!(a.data.length <= 48 || 1 !== a.type && 5 !== a.type || (this.decryptAvcSample(t, e, r, i, a),
                        this.decrypter.isSync())))
                            return
                    }
                }
            }
            ,
            t
        }()
          , nn = 188
          , an = function() {
            function t(t, e, r) {
                this.observer = void 0,
                this.config = void 0,
                this.typeSupported = void 0,
                this.sampleAes = null,
                this.pmtParsed = !1,
                this.audioCodec = void 0,
                this.videoCodec = void 0,
                this._duration = 0,
                this._pmtId = -1,
                this._videoTrack = void 0,
                this._audioTrack = void 0,
                this._id3Track = void 0,
                this._txtTrack = void 0,
                this.aacOverFlow = null,
                this.remainderData = null,
                this.videoParser = void 0,
                this.observer = t,
                this.config = e,
                this.typeSupported = r,
                this.videoParser = new en
            }
            t.probe = function(e) {
                var r = t.syncOffset(e);
                return r > 0 && w.warn("MPEG2-TS detected but first sync word found @ offset " + r),
                -1 !== r
            }
            ,
            t.syncOffset = function(t) {
                for (var e = t.length, r = Math.min(940, e - nn) + 1, i = 0; i < r; ) {
                    for (var n = !1, a = -1, s = 0, o = i; o < e; o += nn) {
                        if (71 !== t[o] || e - o !== nn && 71 !== t[o + nn]) {
                            if (s)
                                return -1;
                            break
                        }
                        if (s++,
                        -1 === a && 0 !== (a = o) && (r = Math.min(a + 18612, t.length - nn) + 1),
                        n || (n = 0 === sn(t, o)),
                        n && s > 1 && (0 === a && s > 2 || o + nn > r))
                            return a
                    }
                    i++
                }
                return -1
            }
            ,
            t.createTrack = function(t, e) {
                return {
                    container: "video" === t || "audio" === t ? "video/mp2t" : void 0,
                    type: t,
                    id: kt[t],
                    pid: -1,
                    inputTimeScale: 9e4,
                    sequenceNumber: 0,
                    samples: [],
                    dropped: 0,
                    duration: "audio" === t ? e : void 0
                }
            }
            ;
            var e = t.prototype;
            return e.resetInitSegment = function(e, r, i, n) {
                this.pmtParsed = !1,
                this._pmtId = -1,
                this._videoTrack = t.createTrack("video"),
                this._audioTrack = t.createTrack("audio", n),
                this._id3Track = t.createTrack("id3"),
                this._txtTrack = t.createTrack("text"),
                this._audioTrack.segmentCodec = "aac",
                this.aacOverFlow = null,
                this.remainderData = null,
                this.audioCodec = r,
                this.videoCodec = i,
                this._duration = n
            }
            ,
            e.resetTimeStamp = function() {}
            ,
            e.resetContiguity = function() {
                var t = this._audioTrack
                  , e = this._videoTrack
                  , r = this._id3Track;
                t && (t.pesData = null),
                e && (e.pesData = null),
                r && (r.pesData = null),
                this.aacOverFlow = null,
                this.remainderData = null
            }
            ,
            e.demux = function(e, r, i, n) {
                var a;
                void 0 === i && (i = !1),
                void 0 === n && (n = !1),
                i || (this.sampleAes = null);
                var s = this._videoTrack
                  , o = this._audioTrack
                  , l = this._id3Track
                  , u = this._txtTrack
                  , h = s.pid
                  , d = s.pesData
                  , c = o.pid
                  , f = l.pid
                  , g = o.pesData
                  , v = l.pesData
                  , m = null
                  , p = this.pmtParsed
                  , y = this._pmtId
                  , E = e.length;
                if (this.remainderData && (E = (e = Gt(this.remainderData, e)).length,
                this.remainderData = null),
                E < nn && !n)
                    return this.remainderData = e,
                    {
                        audioTrack: o,
                        videoTrack: s,
                        id3Track: l,
                        textTrack: u
                    };
                var T = Math.max(0, t.syncOffset(e));
                (E -= (E - T) % nn) < e.byteLength && !n && (this.remainderData = new Uint8Array(e.buffer,E,e.buffer.byteLength - E));
                for (var R = 0, k = T; k < E; k += nn)
                    if (71 === e[k]) {
                        var b = !!(64 & e[k + 1])
                          , D = sn(e, k)
                          , I = void 0;
                        if ((48 & e[k + 3]) >> 4 > 1) {
                            if ((I = k + 5 + e[k + 4]) === k + nn)
                                continue
                        } else
                            I = k + 4;
                        switch (D) {
                        case h:
                            b && (d && (a = hn(d)) && this.videoParser.parseAVCPES(s, u, a, !1, this._duration),
                            d = {
                                data: [],
                                size: 0
                            }),
                            d && (d.data.push(e.subarray(I, k + nn)),
                            d.size += k + nn - I);
                            break;
                        case c:
                            if (b) {
                                if (g && (a = hn(g)))
                                    switch (o.segmentCodec) {
                                    case "aac":
                                        this.parseAACPES(o, a);
                                        break;
                                    case "mp3":
                                        this.parseMPEGPES(o, a);
                                        break;
                                    case "ac3":
                                        this.parseAC3PES(o, a)
                                    }
                                g = {
                                    data: [],
                                    size: 0
                                }
                            }
                            g && (g.data.push(e.subarray(I, k + nn)),
                            g.size += k + nn - I);
                            break;
                        case f:
                            b && (v && (a = hn(v)) && this.parseID3PES(l, a),
                            v = {
                                data: [],
                                size: 0
                            }),
                            v && (v.data.push(e.subarray(I, k + nn)),
                            v.size += k + nn - I);
                            break;
                        case 0:
                            b && (I += e[I] + 1),
                            y = this._pmtId = on(e, I);
                            break;
                        case y:
                            b && (I += e[I] + 1);
                            var C = ln(e, I, this.typeSupported, i);
                            (h = C.videoPid) > 0 && (s.pid = h,
                            s.segmentCodec = C.segmentVideoCodec),
                            (c = C.audioPid) > 0 && (o.pid = c,
                            o.segmentCodec = C.segmentAudioCodec),
                            (f = C.id3Pid) > 0 && (l.pid = f),
                            null === m || p || (w.warn("MPEG-TS PMT found at " + k + " after unknown PID '" + m + "'. Backtracking to sync byte @" + T + " to parse all TS packets."),
                            m = null,
                            k = T - 188),
                            p = this.pmtParsed = !0;
                            break;
                        case 17:
                        case 8191:
                            break;
                        default:
                            m = D
                        }
                    } else
                        R++;
                if (R > 0) {
                    var _ = new Error("Found " + R + " TS packet/s that do not start with 0x47");
                    this.observer.emit(S.ERROR, S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.FRAG_PARSING_ERROR,
                        fatal: !1,
                        error: _,
                        reason: _.message
                    })
                }
                s.pesData = d,
                o.pesData = g,
                l.pesData = v;
                var x = {
                    audioTrack: o,
                    videoTrack: s,
                    id3Track: l,
                    textTrack: u
                };
                return n && this.extractRemainingSamples(x),
                x
            }
            ,
            e.flush = function() {
                var t, e = this.remainderData;
                return this.remainderData = null,
                t = e ? this.demux(e, -1, !1, !0) : {
                    videoTrack: this._videoTrack,
                    audioTrack: this._audioTrack,
                    id3Track: this._id3Track,
                    textTrack: this._txtTrack
                },
                this.extractRemainingSamples(t),
                this.sampleAes ? this.decrypt(t, this.sampleAes) : t
            }
            ,
            e.extractRemainingSamples = function(t) {
                var e, r = t.audioTrack, i = t.videoTrack, n = t.id3Track, a = t.textTrack, s = i.pesData, o = r.pesData, l = n.pesData;
                if (s && (e = hn(s)) ? (this.videoParser.parseAVCPES(i, a, e, !0, this._duration),
                i.pesData = null) : i.pesData = s,
                o && (e = hn(o))) {
                    switch (r.segmentCodec) {
                    case "aac":
                        this.parseAACPES(r, e);
                        break;
                    case "mp3":
                        this.parseMPEGPES(r, e);
                        break;
                    case "ac3":
                        this.parseAC3PES(r, e)
                    }
                    r.pesData = null
                } else
                    null != o && o.size && w.log("last AAC PES packet truncated,might overlap between fragments"),
                    r.pesData = o;
                l && (e = hn(l)) ? (this.parseID3PES(n, e),
                n.pesData = null) : n.pesData = l
            }
            ,
            e.demuxSampleAes = function(t, e, r) {
                var i = this.demux(t, r, !0, !this.config.progressive)
                  , n = this.sampleAes = new rn(this.observer,this.config,e);
                return this.decrypt(i, n)
            }
            ,
            e.decrypt = function(t, e) {
                return new Promise((function(r) {
                    var i = t.audioTrack
                      , n = t.videoTrack;
                    i.samples && "aac" === i.segmentCodec ? e.decryptAacSamples(i.samples, 0, (function() {
                        n.samples ? e.decryptAvcSamples(n.samples, 0, 0, (function() {
                            r(t)
                        }
                        )) : r(t)
                    }
                    )) : n.samples && e.decryptAvcSamples(n.samples, 0, 0, (function() {
                        r(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.destroy = function() {
                this._duration = 0
            }
            ,
            e.parseAACPES = function(t, e) {
                var r, i, n, a = 0, s = this.aacOverFlow, o = e.data;
                if (s) {
                    this.aacOverFlow = null;
                    var l = s.missing
                      , u = s.sample.unit.byteLength;
                    if (-1 === l)
                        o = Gt(s.sample.unit, o);
                    else {
                        var h = u - l;
                        s.sample.unit.set(o.subarray(0, l), h),
                        t.samples.push(s.sample),
                        a = s.missing
                    }
                }
                for (r = a,
                i = o.length; r < i - 1 && !xi(o, r); r++)
                    ;
                if (r !== a) {
                    var d, c = r < i - 1;
                    d = c ? "AAC PES did not start with ADTS header,offset:" + r : "No ADTS header found in AAC PES";
                    var f = new Error(d);
                    if (w.warn("parsing error: " + d),
                    this.observer.emit(S.ERROR, S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.FRAG_PARSING_ERROR,
                        fatal: !1,
                        levelRetry: c,
                        error: f,
                        reason: d
                    }),
                    !c)
                        return
                }
                if (Fi(t, this.observer, o, r, this.audioCodec),
                void 0 !== e.pts)
                    n = e.pts;
                else {
                    if (!s)
                        return void w.warn("[tsdemuxer]: AAC PES unknown PTS");
                    var g = Mi(t.samplerate);
                    n = s.sample.pts + g
                }
                for (var v, m = 0; r < i; ) {
                    if (r += (v = Oi(t, o, r, n, m)).length,
                    v.missing) {
                        this.aacOverFlow = v;
                        break
                    }
                    for (m++; r < i - 1 && !xi(o, r); r++)
                        ;
                }
            }
            ,
            e.parseMPEGPES = function(t, e) {
                var r = e.data
                  , i = r.length
                  , n = 0
                  , a = 0
                  , s = e.pts;
                if (void 0 !== s)
                    for (; a < i; )
                        if (Wi(r, a)) {
                            var o = Hi(t, r, a, s, n);
                            if (!o)
                                break;
                            a += o.length,
                            n++
                        } else
                            a++;
                else
                    w.warn("[tsdemuxer]: MPEG PES unknown PTS")
            }
            ,
            e.parseAC3PES = function(t, e) {
                var r = e.data
                  , i = e.pts;
                if (void 0 !== i)
                    for (var n, a = r.length, s = 0, o = 0; o < a && (n = $i(t, r, o, i, s++)) > 0; )
                        o += n;
                else
                    w.warn("[tsdemuxer]: AC3 PES unknown PTS")
            }
            ,
            e.parseID3PES = function(t, e) {
                if (void 0 !== e.pts) {
                    var r = o({}, e, {
                        type: this._videoTrack ? Ke : Be,
                        duration: Number.POSITIVE_INFINITY
                    });
                    t.samples.push(r)
                } else
                    w.warn("[tsdemuxer]: ID3 PES unknown PTS")
            }
            ,
            t
        }();
        function sn(t, e) {
            return ((31 & t[e + 1]) << 8) + t[e + 2]
        }
        function on(t, e) {
            return (31 & t[e + 10]) << 8 | t[e + 11]
        }
        function ln(t, e, r, i) {
            var n = {
                audioPid: -1,
                videoPid: -1,
                id3Pid: -1,
                segmentVideoCodec: "avc",
                segmentAudioCodec: "aac"
            }
              , a = e + 3 + ((15 & t[e + 1]) << 8 | t[e + 2]) - 4;
            for (e += 12 + ((15 & t[e + 10]) << 8 | t[e + 11]); e < a; ) {
                var s = sn(t, e)
                  , o = (15 & t[e + 3]) << 8 | t[e + 4];
                switch (t[e]) {
                case 207:
                    if (!i) {
                        un("ADTS AAC");
                        break
                    }
                case 15:
                    -1 === n.audioPid && (n.audioPid = s);
                    break;
                case 21:
                    -1 === n.id3Pid && (n.id3Pid = s);
                    break;
                case 219:
                    if (!i) {
                        un("H.264");
                        break
                    }
                case 27:
                    -1 === n.videoPid && (n.videoPid = s,
                    n.segmentVideoCodec = "avc");
                    break;
                case 3:
                case 4:
                    r.mpeg || r.mp3 ? -1 === n.audioPid && (n.audioPid = s,
                    n.segmentAudioCodec = "mp3") : w.log("MPEG audio found, not supported in this browser");
                    break;
                case 193:
                    if (!i) {
                        un("AC-3");
                        break
                    }
                case 129:
                    r.ac3 ? -1 === n.audioPid && (n.audioPid = s,
                    n.segmentAudioCodec = "ac3") : w.log("AC-3 audio found, not supported in this browser");
                    break;
                case 6:
                    if (-1 === n.audioPid && o > 0)
                        for (var l = e + 5, u = o; u > 2; ) {
                            106 === t[l] && (!0 !== r.ac3 ? w.log("AC-3 audio found, not supported in this browser for now") : (n.audioPid = s,
                            n.segmentAudioCodec = "ac3"));
                            var h = t[l + 1] + 2;
                            l += h,
                            u -= h
                        }
                    break;
                case 194:
                case 135:
                    w.warn("Unsupported EC-3 in M2TS found");
                    break;
                case 36:
                    w.warn("Unsupported HEVC in M2TS found")
                }
                e += o + 5
            }
            return n
        }
        function un(t) {
            w.log(t + " with AES-128-CBC encryption found in unencrypted stream")
        }
        function hn(t) {
            var e, r, i, n, a, s = 0, o = t.data;
            if (!t || 0 === t.size)
                return null;
            for (; o[0].length < 19 && o.length > 1; )
                o[0] = Gt(o[0], o[1]),
                o.splice(1, 1);
            if (1 === ((e = o[0])[0] << 16) + (e[1] << 8) + e[2]) {
                if ((r = (e[4] << 8) + e[5]) && r > t.size - 6)
                    return null;
                var l = e[7];
                192 & l && (n = 536870912 * (14 & e[9]) + 4194304 * (255 & e[10]) + 16384 * (254 & e[11]) + 128 * (255 & e[12]) + (254 & e[13]) / 2,
                64 & l ? n - (a = 536870912 * (14 & e[14]) + 4194304 * (255 & e[15]) + 16384 * (254 & e[16]) + 128 * (255 & e[17]) + (254 & e[18]) / 2) > 54e5 && (w.warn(Math.round((n - a) / 9e4) + "s delta between PTS and DTS, align them"),
                n = a) : a = n);
                var u = (i = e[8]) + 9;
                if (t.size <= u)
                    return null;
                t.size -= u;
                for (var h = new Uint8Array(t.size), d = 0, c = o.length; d < c; d++) {
                    var f = (e = o[d]).byteLength;
                    if (u) {
                        if (u > f) {
                            u -= f;
                            continue
                        }
                        e = e.subarray(u),
                        f -= u,
                        u = 0
                    }
                    h.set(e, s),
                    s += f
                }
                return r && (r -= i + 3),
                {
                    data: h,
                    pts: n,
                    dts: a,
                    len: r
                }
            }
            return null
        }
        var dn = function(t) {
            function e() {
                return t.apply(this, arguments) || this
            }
            l(e, t);
            var r = e.prototype;
            return r.resetInitSegment = function(e, r, i, n) {
                t.prototype.resetInitSegment.call(this, e, r, i, n),
                this._audioTrack = {
                    container: "audio/mpeg",
                    type: "audio",
                    id: 2,
                    pid: -1,
                    sequenceNumber: 0,
                    segmentCodec: "mp3",
                    samples: [],
                    manifestCodec: r,
                    duration: n,
                    inputTimeScale: 9e4,
                    dropped: 0
                }
            }
            ,
            e.probe = function(t) {
                if (!t)
                    return !1;
                var e = lt(t, 0)
                  , r = (null == e ? void 0 : e.length) || 0;
                if (e && 11 === t[r] && 119 === t[r + 1] && void 0 !== dt(e) && Qi(t, r) <= 16)
                    return !1;
                for (var i = t.length; r < i; r++)
                    if (ji(t, r))
                        return w.log("MPEG Audio sync word found !"),
                        !0;
                return !1
            }
            ,
            r.canParse = function(t, e) {
                return function(t, e) {
                    return Yi(t, e) && 4 <= t.length - e
                }(t, e)
            }
            ,
            r.appendFrame = function(t, e, r) {
                if (null !== this.basePTS)
                    return Hi(t, e, r, this.basePTS, this.frameIndex)
            }
            ,
            e
        }(Di)
          , cn = function() {
            function t() {}
            return t.getSilentFrame = function(t, e) {
                if ("mp4a.40.2" === t) {
                    if (1 === e)
                        return new Uint8Array([0, 200, 0, 128, 35, 128]);
                    if (2 === e)
                        return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                    if (3 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                    if (4 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                    if (5 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                    if (6 === e)
                        return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224])
                } else {
                    if (1 === e)
                        return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                    if (2 === e)
                        return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                    if (3 === e)
                        return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                }
            }
            ,
            t
        }()
          , fn = Math.pow(2, 32) - 1
          , gn = function() {
            function t() {}
            return t.init = function() {
                var e;
                for (e in t.types = {
                    avc1: [],
                    avcC: [],
                    btrt: [],
                    dinf: [],
                    dref: [],
                    esds: [],
                    ftyp: [],
                    hdlr: [],
                    mdat: [],
                    mdhd: [],
                    mdia: [],
                    mfhd: [],
                    minf: [],
                    moof: [],
                    moov: [],
                    mp4a: [],
                    ".mp3": [],
                    dac3: [],
                    "ac-3": [],
                    mvex: [],
                    mvhd: [],
                    pasp: [],
                    sdtp: [],
                    stbl: [],
                    stco: [],
                    stsc: [],
                    stsd: [],
                    stsz: [],
                    stts: [],
                    tfdt: [],
                    tfhd: [],
                    traf: [],
                    trak: [],
                    trun: [],
                    trex: [],
                    tkhd: [],
                    vmhd: [],
                    smhd: []
                },
                t.types)
                    t.types.hasOwnProperty(e) && (t.types[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]);
                var r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0])
                  , i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                t.HDLR_TYPES = {
                    video: r,
                    audio: i
                };
                var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])
                  , a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                t.STTS = t.STSC = t.STCO = a,
                t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
                t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                t.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                var s = new Uint8Array([105, 115, 111, 109])
                  , o = new Uint8Array([97, 118, 99, 49])
                  , l = new Uint8Array([0, 0, 0, 1]);
                t.FTYP = t.box(t.types.ftyp, s, l, s, o),
                t.DINF = t.box(t.types.dinf, t.box(t.types.dref, n))
            }
            ,
            t.box = function(t) {
                for (var e = 8, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)
                    i[n - 1] = arguments[n];
                for (var a = i.length, s = a; a--; )
                    e += i[a].byteLength;
                var o = new Uint8Array(e);
                for (o[0] = e >> 24 & 255,
                o[1] = e >> 16 & 255,
                o[2] = e >> 8 & 255,
                o[3] = 255 & e,
                o.set(t, 4),
                a = 0,
                e = 8; a < s; a++)
                    o.set(i[a], e),
                    e += i[a].byteLength;
                return o
            }
            ,
            t.hdlr = function(e) {
                return t.box(t.types.hdlr, t.HDLR_TYPES[e])
            }
            ,
            t.mdat = function(e) {
                return t.box(t.types.mdat, e)
            }
            ,
            t.mdhd = function(e, r) {
                r *= e;
                var i = Math.floor(r / (fn + 1))
                  , n = Math.floor(r % (fn + 1));
                return t.box(t.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 85, 196, 0, 0]))
            }
            ,
            t.mdia = function(e) {
                return t.box(t.types.mdia, t.mdhd(e.timescale, e.duration), t.hdlr(e.type), t.minf(e))
            }
            ,
            t.mfhd = function(e) {
                return t.box(t.types.mfhd, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e]))
            }
            ,
            t.minf = function(e) {
                return "audio" === e.type ? t.box(t.types.minf, t.box(t.types.smhd, t.SMHD), t.DINF, t.stbl(e)) : t.box(t.types.minf, t.box(t.types.vmhd, t.VMHD), t.DINF, t.stbl(e))
            }
            ,
            t.moof = function(e, r, i) {
                return t.box(t.types.moof, t.mfhd(e), t.traf(i, r))
            }
            ,
            t.moov = function(e) {
                for (var r = e.length, i = []; r--; )
                    i[r] = t.trak(e[r]);
                return t.box.apply(null, [t.types.moov, t.mvhd(e[0].timescale, e[0].duration)].concat(i).concat(t.mvex(e)))
            }
            ,
            t.mvex = function(e) {
                for (var r = e.length, i = []; r--; )
                    i[r] = t.trex(e[r]);
                return t.box.apply(null, [t.types.mvex].concat(i))
            }
            ,
            t.mvhd = function(e, r) {
                r *= e;
                var i = Math.floor(r / (fn + 1))
                  , n = Math.floor(r % (fn + 1))
                  , a = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                return t.box(t.types.mvhd, a)
            }
            ,
            t.sdtp = function(e) {
                var r, i, n = e.samples || [], a = new Uint8Array(4 + n.length);
                for (r = 0; r < n.length; r++)
                    i = n[r].flags,
                    a[r + 4] = i.dependsOn << 4 | i.isDependedOn << 2 | i.hasRedundancy;
                return t.box(t.types.sdtp, a)
            }
            ,
            t.stbl = function(e) {
                return t.box(t.types.stbl, t.stsd(e), t.box(t.types.stts, t.STTS), t.box(t.types.stsc, t.STSC), t.box(t.types.stsz, t.STSZ), t.box(t.types.stco, t.STCO))
            }
            ,
            t.avc1 = function(e) {
                var r, i, n, a = [], s = [];
                for (r = 0; r < e.sps.length; r++)
                    n = (i = e.sps[r]).byteLength,
                    a.push(n >>> 8 & 255),
                    a.push(255 & n),
                    a = a.concat(Array.prototype.slice.call(i));
                for (r = 0; r < e.pps.length; r++)
                    n = (i = e.pps[r]).byteLength,
                    s.push(n >>> 8 & 255),
                    s.push(255 & n),
                    s = s.concat(Array.prototype.slice.call(i));
                var o = t.box(t.types.avcC, new Uint8Array([1, a[3], a[4], a[5], 255, 224 | e.sps.length].concat(a).concat([e.pps.length]).concat(s)))
                  , l = e.width
                  , u = e.height
                  , h = e.pixelRatio[0]
                  , d = e.pixelRatio[1];
                return t.box(t.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, l >> 8 & 255, 255 & l, u >> 8 & 255, 255 & u, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), o, t.box(t.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), t.box(t.types.pasp, new Uint8Array([h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d])))
            }
            ,
            t.esds = function(t) {
                var e = t.config.length;
                return new Uint8Array([0, 0, 0, 0, 3, 23 + e, 0, 1, 0, 4, 15 + e, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([e]).concat(t.config).concat([6, 1, 2]))
            }
            ,
            t.audioStsd = function(t) {
                var e = t.samplerate;
                return new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, e >> 8 & 255, 255 & e, 0, 0])
            }
            ,
            t.mp4a = function(e) {
                return t.box(t.types.mp4a, t.audioStsd(e), t.box(t.types.esds, t.esds(e)))
            }
            ,
            t.mp3 = function(e) {
                return t.box(t.types[".mp3"], t.audioStsd(e))
            }
            ,
            t.ac3 = function(e) {
                return t.box(t.types["ac-3"], t.audioStsd(e), t.box(t.types.dac3, e.config))
            }
            ,
            t.stsd = function(e) {
                return "audio" === e.type ? "mp3" === e.segmentCodec && "mp3" === e.codec ? t.box(t.types.stsd, t.STSD, t.mp3(e)) : "ac3" === e.segmentCodec ? t.box(t.types.stsd, t.STSD, t.ac3(e)) : t.box(t.types.stsd, t.STSD, t.mp4a(e)) : t.box(t.types.stsd, t.STSD, t.avc1(e))
            }
            ,
            t.tkhd = function(e) {
                var r = e.id
                  , i = e.duration * e.timescale
                  , n = e.width
                  , a = e.height
                  , s = Math.floor(i / (fn + 1))
                  , o = Math.floor(i % (fn + 1));
                return t.box(t.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 0, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0, a >> 8 & 255, 255 & a, 0, 0]))
            }
            ,
            t.traf = function(e, r) {
                var i = t.sdtp(e)
                  , n = e.id
                  , a = Math.floor(r / (fn + 1))
                  , s = Math.floor(r % (fn + 1));
                return t.box(t.types.traf, t.box(t.types.tfhd, new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n])), t.box(t.types.tfdt, new Uint8Array([1, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s])), t.trun(e, i.length + 16 + 20 + 8 + 16 + 8 + 8), i)
            }
            ,
            t.trak = function(e) {
                return e.duration = e.duration || 4294967295,
                t.box(t.types.trak, t.tkhd(e), t.mdia(e))
            }
            ,
            t.trex = function(e) {
                var r = e.id;
                return t.box(t.types.trex, new Uint8Array([0, 0, 0, 0, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
            }
            ,
            t.trun = function(e, r) {
                var i, n, a, s, o, l, u = e.samples || [], h = u.length, d = 12 + 16 * h, c = new Uint8Array(d);
                for (r += 8 + d,
                c.set(["video" === e.type ? 1 : 0, 0, 15, 1, h >>> 24 & 255, h >>> 16 & 255, h >>> 8 & 255, 255 & h, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r], 0),
                i = 0; i < h; i++)
                    a = (n = u[i]).duration,
                    s = n.size,
                    o = n.flags,
                    l = n.cts,
                    c.set([a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, o.isLeading << 2 | o.dependsOn, o.isDependedOn << 6 | o.hasRedundancy << 4 | o.paddingValue << 1 | o.isNonSync, 61440 & o.degradPrio, 15 & o.degradPrio, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l], 12 + 16 * i);
                return t.box(t.types.trun, c)
            }
            ,
            t.initSegment = function(e) {
                t.types || t.init();
                var r = t.moov(e);
                return Gt(t.FTYP, r)
            }
            ,
            t
        }();
        gn.types = void 0,
        gn.HDLR_TYPES = void 0,
        gn.STTS = void 0,
        gn.STSC = void 0,
        gn.STCO = void 0,
        gn.STSZ = void 0,
        gn.VMHD = void 0,
        gn.SMHD = void 0,
        gn.STSD = void 0,
        gn.FTYP = void 0,
        gn.DINF = void 0;
        var vn = 9e4;
        function mn(t, e, r, i) {
            void 0 === r && (r = 1),
            void 0 === i && (i = !1);
            var n = t * e * r;
            return i ? Math.round(n) : n
        }
        function pn(t, e) {
            return void 0 === e && (e = !1),
            mn(t, 1e3, 1 / vn, e)
        }
        var yn = null
          , En = null
          , Tn = function() {
            function t(t, e, r, i) {
                if (this.observer = void 0,
                this.config = void 0,
                this.typeSupported = void 0,
                this.ISGenerated = !1,
                this._initPTS = null,
                this._initDTS = null,
                this.nextAvcDts = null,
                this.nextAudioPts = null,
                this.videoSampleDuration = null,
                this.isAudioContiguous = !1,
                this.isVideoContiguous = !1,
                this.videoTrackConfig = void 0,
                this.observer = t,
                this.config = e,
                this.typeSupported = r,
                this.ISGenerated = !1,
                null === yn) {
                    var n = (navigator.userAgent || "").match(/Chrome\/(\d+)/i);
                    yn = n ? parseInt(n[1]) : 0
                }
                if (null === En) {
                    var a = navigator.userAgent.match(/Safari\/(\d+)/i);
                    En = a ? parseInt(a[1]) : 0
                }
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.config = this.videoTrackConfig = this._initPTS = this._initDTS = null
            }
            ,
            e.resetTimeStamp = function(t) {
                w.log("[mp4-remuxer]: initPTS & initDTS reset"),
                this._initPTS = this._initDTS = t
            }
            ,
            e.resetNextTimestamp = function() {
                w.log("[mp4-remuxer]: reset next timestamp"),
                this.isVideoContiguous = !1,
                this.isAudioContiguous = !1
            }
            ,
            e.resetInitSegment = function() {
                w.log("[mp4-remuxer]: ISGenerated flag reset"),
                this.ISGenerated = !1,
                this.videoTrackConfig = void 0
            }
            ,
            e.getVideoStartPts = function(t) {
                var e = !1
                  , r = t.reduce((function(t, r) {
                    var i = r.pts - t;
                    return i < -4294967296 ? (e = !0,
                    Sn(t, r.pts)) : i > 0 ? t : r.pts
                }
                ), t[0].pts);
                return e && w.debug("PTS rollover detected"),
                r
            }
            ,
            e.remux = function(t, e, r, i, n, a, s, o) {
                var l, u, h, d, c, f, g = n, v = n, m = t.pid > -1, p = e.pid > -1, y = e.samples.length, E = t.samples.length > 0, T = s && y > 0 || y > 1;
                if ((!m || E) && (!p || T) || this.ISGenerated || s) {
                    if (this.ISGenerated) {
                        var S, L, A, R, k = this.videoTrackConfig;
                        !k || e.width === k.width && e.height === k.height && (null == (S = e.pixelRatio) ? void 0 : S[0]) === (null == (L = k.pixelRatio) ? void 0 : L[0]) && (null == (A = e.pixelRatio) ? void 0 : A[1]) === (null == (R = k.pixelRatio) ? void 0 : R[1]) || this.resetInitSegment()
                    } else
                        h = this.generateIS(t, e, n, a);
                    var b, D = this.isVideoContiguous, I = -1;
                    if (T && (I = function(t) {
                        for (var e = 0; e < t.length; e++)
                            if (t[e].key)
                                return e;
                        return -1
                    }(e.samples),
                    !D && this.config.forceKeyFrameOnDiscontinuity))
                        if (f = !0,
                        I > 0) {
                            w.warn("[mp4-remuxer]: Dropped " + I + " out of " + y + " video samples due to a missing keyframe");
                            var C = this.getVideoStartPts(e.samples);
                            e.samples = e.samples.slice(I),
                            e.dropped += I,
                            b = v += (e.samples[0].pts - C) / e.inputTimeScale
                        } else
                            -1 === I && (w.warn("[mp4-remuxer]: No keyframe found out of " + y + " video samples"),
                            f = !1);
                    if (this.ISGenerated) {
                        if (E && T) {
                            var _ = this.getVideoStartPts(e.samples)
                              , x = (Sn(t.samples[0].pts, _) - _) / e.inputTimeScale;
                            g += Math.max(0, x),
                            v += Math.max(0, -x)
                        }
                        if (E) {
                            if (t.samplerate || (w.warn("[mp4-remuxer]: regenerate InitSegment as audio detected"),
                            h = this.generateIS(t, e, n, a)),
                            u = this.remuxAudio(t, g, this.isAudioContiguous, a, p || T || o === we ? v : void 0),
                            T) {
                                var P = u ? u.endPTS - u.startPTS : 0;
                                e.inputTimeScale || (w.warn("[mp4-remuxer]: regenerate InitSegment as video detected"),
                                h = this.generateIS(t, e, n, a)),
                                l = this.remuxVideo(e, v, D, P)
                            }
                        } else
                            T && (l = this.remuxVideo(e, v, D, 0));
                        l && (l.firstKeyFrame = I,
                        l.independent = -1 !== I,
                        l.firstKeyFramePTS = b)
                    }
                }
                return this.ISGenerated && this._initPTS && this._initDTS && (r.samples.length && (c = Ln(r, n, this._initPTS, this._initDTS)),
                i.samples.length && (d = An(i, n, this._initPTS))),
                {
                    audio: u,
                    video: l,
                    initSegment: h,
                    independent: f,
                    text: d,
                    id3: c
                }
            }
            ,
            e.generateIS = function(t, e, r, i) {
                var n, a, s, o = t.samples, l = e.samples, u = this.typeSupported, h = {}, d = this._initPTS, c = !d || i, f = "audio/mp4";
                if (c && (n = a = 1 / 0),
                t.config && o.length) {
                    switch (t.timescale = t.samplerate,
                    t.segmentCodec) {
                    case "mp3":
                        u.mpeg ? (f = "audio/mpeg",
                        t.codec = "") : u.mp3 && (t.codec = "mp3");
                        break;
                    case "ac3":
                        t.codec = "ac-3"
                    }
                    h.audio = {
                        id: "audio",
                        container: f,
                        codec: t.codec,
                        initSegment: "mp3" === t.segmentCodec && u.mpeg ? new Uint8Array(0) : gn.initSegment([t]),
                        metadata: {
                            channelCount: t.channelCount
                        }
                    },
                    c && (s = t.inputTimeScale,
                    d && s === d.timescale ? c = !1 : n = a = o[0].pts - Math.round(s * r))
                }
                if (e.sps && e.pps && l.length) {
                    if (e.timescale = e.inputTimeScale,
                    h.video = {
                        id: "main",
                        container: "video/mp4",
                        codec: e.codec,
                        initSegment: gn.initSegment([e]),
                        metadata: {
                            width: e.width,
                            height: e.height
                        }
                    },
                    c)
                        if (s = e.inputTimeScale,
                        d && s === d.timescale)
                            c = !1;
                        else {
                            var g = this.getVideoStartPts(l)
                              , v = Math.round(s * r);
                            a = Math.min(a, Sn(l[0].dts, g) - v),
                            n = Math.min(n, g - v)
                        }
                    this.videoTrackConfig = {
                        width: e.width,
                        height: e.height,
                        pixelRatio: e.pixelRatio
                    }
                }
                if (Object.keys(h).length)
                    return this.ISGenerated = !0,
                    c ? (this._initPTS = {
                        baseTime: n,
                        timescale: s
                    },
                    this._initDTS = {
                        baseTime: a,
                        timescale: s
                    }) : n = s = void 0,
                    {
                        tracks: h,
                        initPTS: n,
                        timescale: s
                    }
            }
            ,
            e.remuxVideo = function(t, e, r, i) {
                var n, a, s = t.inputTimeScale, l = t.samples, u = [], h = l.length, d = this._initPTS, c = this.nextAvcDts, f = 8, g = this.videoSampleDuration, v = Number.POSITIVE_INFINITY, m = Number.NEGATIVE_INFINITY, p = !1;
                if (!r || null === c) {
                    var y = e * s
                      , E = l[0].pts - Sn(l[0].dts, l[0].pts);
                    yn && null !== c && Math.abs(y - E - c) < 15e3 ? r = !0 : c = y - E
                }
                for (var T = d.baseTime * s / d.timescale, R = 0; R < h; R++) {
                    var k = l[R];
                    k.pts = Sn(k.pts - T, c),
                    k.dts = Sn(k.dts - T, c),
                    k.dts < l[R > 0 ? R - 1 : R].dts && (p = !0)
                }
                p && l.sort((function(t, e) {
                    var r = t.dts - e.dts
                      , i = t.pts - e.pts;
                    return r || i
                }
                )),
                n = l[0].dts;
                var b = (a = l[l.length - 1].dts) - n
                  , D = b ? Math.round(b / (h - 1)) : g || t.inputTimeScale / 30;
                if (r) {
                    var I = n - c
                      , C = I > D
                      , _ = I < -1;
                    if ((C || _) && (C ? w.warn("AVC: " + pn(I, !0) + " ms (" + I + "dts) hole between fragments detected at " + e.toFixed(3)) : w.warn("AVC: " + pn(-I, !0) + " ms (" + I + "dts) overlapping between fragments detected at " + e.toFixed(3)),
                    !_ || c >= l[0].pts || yn)) {
                        n = c;
                        var x = l[0].pts - I;
                        if (C)
                            l[0].dts = n,
                            l[0].pts = x;
                        else
                            for (var P = 0; P < l.length && !(l[P].dts > x); P++)
                                l[P].dts -= I,
                                l[P].pts -= I;
                        w.log("Video: Initial PTS/DTS adjusted: " + pn(x, !0) + "/" + pn(n, !0) + ", delta: " + pn(I, !0) + " ms")
                    }
                }
                for (var F = 0, M = 0, O = n = Math.max(0, n), N = 0; N < h; N++) {
                    for (var U = l[N], B = U.units, G = B.length, K = 0, H = 0; H < G; H++)
                        K += B[H].data.length;
                    M += K,
                    F += G,
                    U.length = K,
                    U.dts < O ? (U.dts = O,
                    O += D / 4 | 0 || 1) : O = U.dts,
                    v = Math.min(U.pts, v),
                    m = Math.max(U.pts, m)
                }
                a = l[h - 1].dts;
                var V, Y = M + 4 * F + 8;
                try {
                    V = new Uint8Array(Y)
                } catch (t) {
                    return void this.observer.emit(S.ERROR, S.ERROR, {
                        type: L.MUX_ERROR,
                        details: A.REMUX_ALLOC_ERROR,
                        fatal: !1,
                        error: t,
                        bytes: Y,
                        reason: "fail allocating video mdat " + Y
                    })
                }
                var W = new DataView(V.buffer);
                W.setUint32(0, Y),
                V.set(gn.types.mdat, 4);
                for (var j = !1, q = Number.POSITIVE_INFINITY, X = Number.POSITIVE_INFINITY, z = Number.NEGATIVE_INFINITY, Q = Number.NEGATIVE_INFINITY, J = 0; J < h; J++) {
                    for (var $ = l[J], Z = $.units, tt = 0, et = 0, rt = Z.length; et < rt; et++) {
                        var it = Z[et]
                          , nt = it.data
                          , at = it.data.byteLength;
                        W.setUint32(f, at),
                        f += 4,
                        V.set(nt, f),
                        f += at,
                        tt += 4 + at
                    }
                    var st = void 0;
                    if (J < h - 1)
                        g = l[J + 1].dts - $.dts,
                        st = l[J + 1].pts - $.pts;
                    else {
                        var ot = this.config
                          , lt = J > 0 ? $.dts - l[J - 1].dts : D;
                        if (st = J > 0 ? $.pts - l[J - 1].pts : D,
                        ot.stretchShortVideoTrack && null !== this.nextAudioPts) {
                            var ut = Math.floor(ot.maxBufferHole * s)
                              , ht = (i ? v + i * s : this.nextAudioPts) - $.pts;
                            ht > ut ? ((g = ht - lt) < 0 ? g = lt : j = !0,
                            w.log("[mp4-remuxer]: It is approximately " + ht / 90 + " ms to the next segment; using duration " + g / 90 + " ms for the last video frame.")) : g = lt
                        } else
                            g = lt
                    }
                    var dt = Math.round($.pts - $.dts);
                    q = Math.min(q, g),
                    z = Math.max(z, g),
                    X = Math.min(X, st),
                    Q = Math.max(Q, st),
                    u.push(new kn($.key,g,tt,dt))
                }
                if (u.length)
                    if (yn) {
                        if (yn < 70) {
                            var ct = u[0].flags;
                            ct.dependsOn = 2,
                            ct.isNonSync = 0
                        }
                    } else if (En && Q - X < z - q && D / z < .025 && 0 === u[0].cts) {
                        w.warn("Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.");
                        for (var ft = n, gt = 0, vt = u.length; gt < vt; gt++) {
                            var mt = ft + u[gt].duration
                              , pt = ft + u[gt].cts;
                            if (gt < vt - 1) {
                                var yt = mt + u[gt + 1].cts;
                                u[gt].duration = yt - pt
                            } else
                                u[gt].duration = gt ? u[gt - 1].duration : D;
                            u[gt].cts = 0,
                            ft = mt
                        }
                    }
                g = j || !g ? D : g,
                this.nextAvcDts = c = a + g,
                this.videoSampleDuration = g,
                this.isVideoContiguous = !0;
                var Et = {
                    data1: gn.moof(t.sequenceNumber++, n, o({}, t, {
                        samples: u
                    })),
                    data2: V,
                    startPTS: v / s,
                    endPTS: (m + g) / s,
                    startDTS: n / s,
                    endDTS: c / s,
                    type: "video",
                    hasAudio: !1,
                    hasVideo: !0,
                    nb: u.length,
                    dropped: t.dropped
                };
                return t.samples = [],
                t.dropped = 0,
                Et
            }
            ,
            e.getSamplesPerFrame = function(t) {
                switch (t.segmentCodec) {
                case "mp3":
                    return 1152;
                case "ac3":
                    return 1536;
                default:
                    return 1024
                }
            }
            ,
            e.remuxAudio = function(t, e, r, i, n) {
                var a = t.inputTimeScale
                  , s = a / (t.samplerate ? t.samplerate : a)
                  , l = this.getSamplesPerFrame(t)
                  , u = l * s
                  , h = this._initPTS
                  , d = "mp3" === t.segmentCodec && this.typeSupported.mpeg
                  , c = []
                  , f = void 0 !== n
                  , g = t.samples
                  , v = d ? 0 : 8
                  , m = this.nextAudioPts || -1
                  , p = e * a
                  , y = h.baseTime * a / h.timescale;
                if (this.isAudioContiguous = r = r || g.length && m > 0 && (i && Math.abs(p - m) < 9e3 || Math.abs(Sn(g[0].pts - y, p) - m) < 20 * u),
                g.forEach((function(t) {
                    t.pts = Sn(t.pts - y, p)
                }
                )),
                !r || m < 0) {
                    if (g = g.filter((function(t) {
                        return t.pts >= 0
                    }
                    )),
                    !g.length)
                        return;
                    m = 0 === n ? 0 : i && !f ? Math.max(0, p) : g[0].pts
                }
                if ("aac" === t.segmentCodec)
                    for (var E = this.config.maxAudioFramesDrift, T = 0, R = m; T < g.length; T++) {
                        var k = g[T]
                          , b = k.pts
                          , D = b - R
                          , I = Math.abs(1e3 * D / a);
                        if (D <= -E * u && f)
                            0 === T && (w.warn("Audio frame @ " + (b / a).toFixed(3) + "s overlaps nextAudioPts by " + Math.round(1e3 * D / a) + " ms."),
                            this.nextAudioPts = m = R = b);
                        else if (D >= E * u && I < 1e4 && f) {
                            var C = Math.round(D / u);
                            (R = b - C * u) < 0 && (C--,
                            R += u),
                            0 === T && (this.nextAudioPts = m = R),
                            w.warn("[mp4-remuxer]: Injecting " + C + " audio frame @ " + (R / a).toFixed(3) + "s due to " + Math.round(1e3 * D / a) + " ms gap.");
                            for (var _ = 0; _ < C; _++) {
                                var x = Math.max(R, 0)
                                  , P = cn.getSilentFrame(t.manifestCodec || t.codec, t.channelCount);
                                P || (w.log("[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."),
                                P = k.unit.subarray()),
                                g.splice(T, 0, {
                                    unit: P,
                                    pts: x
                                }),
                                R += u,
                                T++
                            }
                        }
                        k.pts = R,
                        R += u
                    }
                for (var F, M = null, O = null, N = 0, U = g.length; U--; )
                    N += g[U].unit.byteLength;
                for (var B = 0, G = g.length; B < G; B++) {
                    var K = g[B]
                      , H = K.unit
                      , V = K.pts;
                    if (null !== O)
                        c[B - 1].duration = Math.round((V - O) / s);
                    else {
                        if (r && "aac" === t.segmentCodec && (V = m),
                        M = V,
                        !(N > 0))
                            return;
                        N += v;
                        try {
                            F = new Uint8Array(N)
                        } catch (t) {
                            return void this.observer.emit(S.ERROR, S.ERROR, {
                                type: L.MUX_ERROR,
                                details: A.REMUX_ALLOC_ERROR,
                                fatal: !1,
                                error: t,
                                bytes: N,
                                reason: "fail allocating audio mdat " + N
                            })
                        }
                        d || (new DataView(F.buffer).setUint32(0, N),
                        F.set(gn.types.mdat, 4))
                    }
                    F.set(H, v);
                    var Y = H.byteLength;
                    v += Y,
                    c.push(new kn(!0,l,Y,0)),
                    O = V
                }
                var W = c.length;
                if (W) {
                    var j = c[c.length - 1];
                    this.nextAudioPts = m = O + s * j.duration;
                    var q = d ? new Uint8Array(0) : gn.moof(t.sequenceNumber++, M / s, o({}, t, {
                        samples: c
                    }));
                    t.samples = [];
                    var X = M / a
                      , z = m / a
                      , Q = {
                        data1: q,
                        data2: F,
                        startPTS: X,
                        endPTS: z,
                        startDTS: X,
                        endDTS: z,
                        type: "audio",
                        hasAudio: !0,
                        hasVideo: !1,
                        nb: W
                    };
                    return this.isAudioContiguous = !0,
                    Q
                }
            }
            ,
            e.remuxEmptyAudio = function(t, e, r, i) {
                var n = t.inputTimeScale
                  , a = n / (t.samplerate ? t.samplerate : n)
                  , s = this.nextAudioPts
                  , o = this._initDTS
                  , l = 9e4 * o.baseTime / o.timescale
                  , u = (null !== s ? s : i.startDTS * n) + l
                  , h = i.endDTS * n + l
                  , d = 1024 * a
                  , c = Math.ceil((h - u) / d)
                  , f = cn.getSilentFrame(t.manifestCodec || t.codec, t.channelCount);
                if (w.warn("[mp4-remuxer]: remux empty Audio"),
                f) {
                    for (var g = [], v = 0; v < c; v++) {
                        var m = u + v * d;
                        g.push({
                            unit: f,
                            pts: m,
                            dts: m
                        })
                    }
                    return t.samples = g,
                    this.remuxAudio(t, e, r, !1)
                }
                w.trace("[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec")
            }
            ,
            t
        }();
        function Sn(t, e) {
            var r;
            if (null === e)
                return t;
            for (r = e < t ? -8589934592 : 8589934592; Math.abs(t - e) > 4294967296; )
                t += r;
            return t
        }
        function Ln(t, e, r, i) {
            var n = t.samples.length;
            if (n) {
                for (var a = t.inputTimeScale, s = 0; s < n; s++) {
                    var o = t.samples[s];
                    o.pts = Sn(o.pts - r.baseTime * a / r.timescale, e * a) / a,
                    o.dts = Sn(o.dts - i.baseTime * a / i.timescale, e * a) / a
                }
                var l = t.samples;
                return t.samples = [],
                {
                    samples: l
                }
            }
        }
        function An(t, e, r) {
            var i = t.samples.length;
            if (i) {
                for (var n = t.inputTimeScale, a = 0; a < i; a++) {
                    var s = t.samples[a];
                    s.pts = Sn(s.pts - r.baseTime * n / r.timescale, e * n) / n
                }
                t.samples.sort((function(t, e) {
                    return t.pts - e.pts
                }
                ));
                var o = t.samples;
                return t.samples = [],
                {
                    samples: o
                }
            }
        }
        var Rn, kn = function(t, e, r, i) {
            this.size = void 0,
            this.duration = void 0,
            this.cts = void 0,
            this.flags = void 0,
            this.duration = e,
            this.size = r,
            this.cts = i,
            this.flags = {
                isLeading: 0,
                isDependedOn: 0,
                hasRedundancy: 0,
                degradPrio: 0,
                dependsOn: t ? 2 : 1,
                isNonSync: t ? 0 : 1
            }
        }, bn = function() {
            function t() {
                this.emitInitSegment = !1,
                this.audioCodec = void 0,
                this.videoCodec = void 0,
                this.initData = void 0,
                this.initPTS = null,
                this.initTracks = void 0,
                this.lastEndTime = null
            }
            var e = t.prototype;
            return e.destroy = function() {}
            ,
            e.resetTimeStamp = function(t) {
                this.initPTS = t,
                this.lastEndTime = null
            }
            ,
            e.resetNextTimestamp = function() {
                this.lastEndTime = null
            }
            ,
            e.resetInitSegment = function(t, e, r, i) {
                this.audioCodec = e,
                this.videoCodec = r,
                this.generateInitSegment(function(t, e) {
                    if (!t || !e)
                        return t;
                    var r = e.keyId;
                    return r && e.isCommonEncryption && _t(t, ["moov", "trak"]).forEach((function(t) {
                        var e = _t(t, ["mdia", "minf", "stbl", "stsd"])[0].subarray(8)
                          , i = _t(e, ["enca"])
                          , n = i.length > 0;
                        n || (i = _t(e, ["encv"])),
                        i.forEach((function(t) {
                            _t(n ? t.subarray(28) : t.subarray(78), ["sinf"]).forEach((function(t) {
                                var e = Ut(t);
                                if (e) {
                                    var i = e.subarray(8, 24);
                                    i.some((function(t) {
                                        return 0 !== t
                                    }
                                    )) || (w.log("[eme] Patching keyId in 'enc" + (n ? "a" : "v") + ">sinf>>tenc' box: " + Lt(i) + " -> " + Lt(r)),
                                    e.set(r, 8))
                                }
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    t
                }(t, i)),
                this.emitInitSegment = !0
            }
            ,
            e.generateInitSegment = function(t) {
                var e = this.audioCodec
                  , r = this.videoCodec;
                if (null == t || !t.byteLength)
                    return this.initTracks = void 0,
                    void (this.initData = void 0);
                var i = this.initData = Pt(t);
                i.audio && (e = Dn(i.audio, O)),
                i.video && (r = Dn(i.video, N));
                var n = {};
                i.audio && i.video ? n.audiovideo = {
                    container: "video/mp4",
                    codec: e + "," + r,
                    initSegment: t,
                    id: "main"
                } : i.audio ? n.audio = {
                    container: "audio/mp4",
                    codec: e,
                    initSegment: t,
                    id: "audio"
                } : i.video ? n.video = {
                    container: "video/mp4",
                    codec: r,
                    initSegment: t,
                    id: "main"
                } : w.warn("[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."),
                this.initTracks = n
            }
            ,
            e.remux = function(t, e, r, i, n, a) {
                var s, o, l = this.initPTS, u = this.lastEndTime, h = {
                    audio: void 0,
                    video: void 0,
                    text: i,
                    id3: r,
                    initSegment: void 0
                };
                y(u) || (u = this.lastEndTime = n || 0);
                var d = e.samples;
                if (null == d || !d.length)
                    return h;
                var c = {
                    initPTS: void 0,
                    timescale: 1
                }
                  , f = this.initData;
                if (null != (s = f) && s.length || (this.generateInitSegment(d),
                f = this.initData),
                null == (o = f) || !o.length)
                    return w.warn("[passthrough-remuxer.ts]: Failed to generate initSegment."),
                    h;
                this.emitInitSegment && (c.tracks = this.initTracks,
                this.emitInitSegment = !1);
                var g = function(t, e) {
                    for (var r = 0, i = 0, n = 0, a = _t(t, ["moof", "traf"]), s = 0; s < a.length; s++) {
                        var o = a[s]
                          , l = _t(o, ["tfhd"])[0]
                          , u = e[It(l, 4)];
                        if (u) {
                            var h = u.default
                              , d = It(l, 0) | (null == h ? void 0 : h.flags)
                              , c = null == h ? void 0 : h.duration;
                            8 & d && (c = It(l, 2 & d ? 12 : 8));
                            for (var f = u.timescale || 9e4, g = _t(o, ["trun"]), v = 0; v < g.length; v++)
                                !(r = Bt(g[v])) && c && (r = c * It(g[v], 4)),
                                u.type === N ? i += r / f : u.type === O && (n += r / f)
                        }
                    }
                    if (0 === i && 0 === n) {
                        for (var m = 0, p = _t(t, ["sidx"]), y = 0; y < p.length; y++) {
                            var E = xt(p[y]);
                            null != E && E.references && (m += E.references.reduce((function(t, e) {
                                return t + e.info.duration || 0
                            }
                            ), 0))
                        }
                        return m
                    }
                    return i || n
                }(d, f)
                  , v = function(t, e) {
                    return _t(e, ["moof", "traf"]).reduce((function(e, r) {
                        var i = _t(r, ["tfdt"])[0]
                          , n = i[0]
                          , a = _t(r, ["tfhd"]).reduce((function(e, r) {
                            var a = It(r, 4)
                              , s = t[a];
                            if (s) {
                                var o = It(i, 4);
                                if (1 === n) {
                                    if (o === At)
                                        return w.warn("[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"),
                                        e;
                                    o *= At + 1,
                                    o += It(i, 8)
                                }
                                var l = o / (s.timescale || 9e4);
                                if (y(l) && (null === e || l < e))
                                    return l
                            }
                            return e
                        }
                        ), null);
                        return null !== a && y(a) && (null === e || a < e) ? a : e
                    }
                    ), null)
                }(f, d)
                  , m = null === v ? n : v;
                (function(t, e, r, i) {
                    if (null === t)
                        return !0;
                    var n = Math.max(i, 1)
                      , a = e - t.baseTime / t.timescale;
                    return Math.abs(a - r) > n
                }(l, m, n, g) || c.timescale !== l.timescale && a) && (c.initPTS = m - n,
                l && 1 === l.timescale && w.warn("Adjusting initPTS by " + (c.initPTS - l.baseTime)),
                this.initPTS = l = {
                    baseTime: c.initPTS,
                    timescale: 1
                });
                var p = t ? m - l.baseTime / l.timescale : u
                  , E = p + g;
                !function(t, e, r) {
                    _t(e, ["moof", "traf"]).forEach((function(e) {
                        _t(e, ["tfhd"]).forEach((function(i) {
                            var n = It(i, 4)
                              , a = t[n];
                            if (a) {
                                var s = a.timescale || 9e4;
                                _t(e, ["tfdt"]).forEach((function(t) {
                                    var e = t[0]
                                      , i = r * s;
                                    if (i) {
                                        var n = It(t, 4);
                                        if (0 === e)
                                            n -= i,
                                            Ct(t, 4, n = Math.max(n, 0));
                                        else {
                                            n *= Math.pow(2, 32),
                                            n += It(t, 8),
                                            n -= i,
                                            n = Math.max(n, 0);
                                            var a = Math.floor(n / (At + 1))
                                              , o = Math.floor(n % (At + 1));
                                            Ct(t, 4, a),
                                            Ct(t, 8, o)
                                        }
                                    }
                                }
                                ))
                            }
                        }
                        ))
                    }
                    ))
                }(f, d, l.baseTime / l.timescale),
                g > 0 ? this.lastEndTime = E : (w.warn("Duration parsed from mp4 should be greater than zero"),
                this.resetNextTimestamp());
                var T = !!f.audio
                  , S = !!f.video
                  , L = "";
                T && (L += "audio"),
                S && (L += "video");
                var A = {
                    data1: d,
                    startPTS: p,
                    startDTS: p,
                    endPTS: E,
                    endDTS: E,
                    type: L,
                    hasAudio: T,
                    hasVideo: S,
                    nb: 1,
                    dropped: 0
                };
                return h.audio = "audio" === A.type ? A : void 0,
                h.video = "audio" !== A.type ? A : void 0,
                h.initSegment = c,
                h.id3 = Ln(r, n, l, l),
                i.samples.length && (h.text = An(i, n, l)),
                h
            }
            ,
            t
        }();
        function Dn(t, e) {
            var r = null == t ? void 0 : t.codec;
            if (r && r.length > 4)
                return r;
            if (e === O) {
                if ("ec-3" === r || "ac-3" === r || "alac" === r)
                    return r;
                if ("fLaC" === r || "Opus" === r)
                    return ue(r, !1);
                var i = "mp4a.40.5";
                return w.info('Parsed audio codec "' + r + '" or audio object type not handled. Using "' + i + '"'),
                i
            }
            return w.warn('Unhandled video codec "' + r + '"'),
            "hvc1" === r || "hev1" === r ? "hvc1.1.6.L120.90" : "av01" === r ? "av01.0.04M.08" : "avc1.42e01e"
        }
        try {
            Rn = self.performance.now.bind(self.performance)
        } catch (t) {
            w.debug("Unable to use Performance API on this environment"),
            Rn = null == j ? void 0 : j.Date.now
        }
        var In = [{
            demux: zi,
            remux: bn
        }, {
            demux: an,
            remux: Tn
        }, {
            demux: qi,
            remux: Tn
        }, {
            demux: dn,
            remux: Tn
        }];
        In.splice(2, 0, {
            demux: Ji,
            remux: Tn
        });
        var wn = function() {
            function t(t, e, r, i, n) {
                this.async = !1,
                this.observer = void 0,
                this.typeSupported = void 0,
                this.config = void 0,
                this.vendor = void 0,
                this.id = void 0,
                this.demuxer = void 0,
                this.remuxer = void 0,
                this.decrypter = void 0,
                this.probe = void 0,
                this.decryptionPromise = null,
                this.transmuxConfig = void 0,
                this.currentTransmuxState = void 0,
                this.observer = t,
                this.typeSupported = e,
                this.config = r,
                this.vendor = i,
                this.id = n
            }
            var e = t.prototype;
            return e.configure = function(t) {
                this.transmuxConfig = t,
                this.decrypter && this.decrypter.reset()
            }
            ,
            e.push = function(t, e, r, i) {
                var n = this
                  , a = r.transmuxing;
                a.executeStart = Rn();
                var s = new Uint8Array(t)
                  , o = this.currentTransmuxState
                  , l = this.transmuxConfig;
                i && (this.currentTransmuxState = i);
                var u = i || o
                  , h = u.contiguous
                  , d = u.discontinuity
                  , c = u.trackSwitch
                  , f = u.accurateTimeOffset
                  , g = u.timeOffset
                  , v = u.initSegmentChange
                  , m = l.audioCodec
                  , p = l.videoCodec
                  , y = l.defaultInitPts
                  , E = l.duration
                  , T = l.initSegmentData
                  , R = function(t, e) {
                    var r = null;
                    return t.byteLength > 0 && null != (null == e ? void 0 : e.key) && null !== e.iv && null != e.method && (r = e),
                    r
                }(s, e);
                if (R && "AES-128" === R.method) {
                    var k = this.getDecrypter();
                    if (!k.isSync())
                        return this.decryptionPromise = k.webCryptoDecrypt(s, R.key.buffer, R.iv.buffer).then((function(t) {
                            var e = n.push(t, null, r);
                            return n.decryptionPromise = null,
                            e
                        }
                        )),
                        this.decryptionPromise;
                    var b = k.softwareDecrypt(s, R.key.buffer, R.iv.buffer);
                    if (r.part > -1 && (b = k.flush()),
                    !b)
                        return a.executeEnd = Rn(),
                        Cn(r);
                    s = new Uint8Array(b)
                }
                var D = this.needsProbing(d, c);
                if (D) {
                    var I = this.configureTransmuxer(s);
                    if (I)
                        return w.warn("[transmuxer] " + I.message),
                        this.observer.emit(S.ERROR, S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            fatal: !1,
                            error: I,
                            reason: I.message
                        }),
                        a.executeEnd = Rn(),
                        Cn(r)
                }
                (d || c || v || D) && this.resetInitSegment(T, m, p, E, e),
                (d || v || D) && this.resetInitialTimestamp(y),
                h || this.resetContiguity();
                var C = this.transmux(s, R, g, f, r)
                  , _ = this.currentTransmuxState;
                return _.contiguous = !0,
                _.discontinuity = !1,
                _.trackSwitch = !1,
                a.executeEnd = Rn(),
                C
            }
            ,
            e.flush = function(t) {
                var e = this
                  , r = t.transmuxing;
                r.executeStart = Rn();
                var i = this.decrypter
                  , n = this.currentTransmuxState
                  , a = this.decryptionPromise;
                if (a)
                    return a.then((function() {
                        return e.flush(t)
                    }
                    ));
                var s = []
                  , o = n.timeOffset;
                if (i) {
                    var l = i.flush();
                    l && s.push(this.push(l, null, t))
                }
                var u = this.demuxer
                  , h = this.remuxer;
                if (!u || !h)
                    return r.executeEnd = Rn(),
                    [Cn(t)];
                var d = u.flush(o);
                return _n(d) ? d.then((function(r) {
                    return e.flushRemux(s, r, t),
                    s
                }
                )) : (this.flushRemux(s, d, t),
                s)
            }
            ,
            e.flushRemux = function(t, e, r) {
                var i = e.audioTrack
                  , n = e.videoTrack
                  , a = e.id3Track
                  , s = e.textTrack
                  , o = this.currentTransmuxState
                  , l = o.accurateTimeOffset
                  , u = o.timeOffset;
                w.log("[transmuxer.ts]: Flushed fragment " + r.sn + (r.part > -1 ? " p: " + r.part : "") + " of level " + r.level);
                var h = this.remuxer.remux(i, n, a, s, u, l, !0, this.id);
                t.push({
                    remuxResult: h,
                    chunkMeta: r
                }),
                r.transmuxing.executeEnd = Rn()
            }
            ,
            e.resetInitialTimestamp = function(t) {
                var e = this.demuxer
                  , r = this.remuxer;
                e && r && (e.resetTimeStamp(t),
                r.resetTimeStamp(t))
            }
            ,
            e.resetContiguity = function() {
                var t = this.demuxer
                  , e = this.remuxer;
                t && e && (t.resetContiguity(),
                e.resetNextTimestamp())
            }
            ,
            e.resetInitSegment = function(t, e, r, i, n) {
                var a = this.demuxer
                  , s = this.remuxer;
                a && s && (a.resetInitSegment(t, e, r, i),
                s.resetInitSegment(t, e, r, n))
            }
            ,
            e.destroy = function() {
                this.demuxer && (this.demuxer.destroy(),
                this.demuxer = void 0),
                this.remuxer && (this.remuxer.destroy(),
                this.remuxer = void 0)
            }
            ,
            e.transmux = function(t, e, r, i, n) {
                return e && "SAMPLE-AES" === e.method ? this.transmuxSampleAes(t, e, r, i, n) : this.transmuxUnencrypted(t, r, i, n)
            }
            ,
            e.transmuxUnencrypted = function(t, e, r, i) {
                var n = this.demuxer.demux(t, e, !1, !this.config.progressive)
                  , a = n.audioTrack
                  , s = n.videoTrack
                  , o = n.id3Track
                  , l = n.textTrack;
                return {
                    remuxResult: this.remuxer.remux(a, s, o, l, e, r, !1, this.id),
                    chunkMeta: i
                }
            }
            ,
            e.transmuxSampleAes = function(t, e, r, i, n) {
                var a = this;
                return this.demuxer.demuxSampleAes(t, e, r).then((function(t) {
                    return {
                        remuxResult: a.remuxer.remux(t.audioTrack, t.videoTrack, t.id3Track, t.textTrack, r, i, !1, a.id),
                        chunkMeta: n
                    }
                }
                ))
            }
            ,
            e.configureTransmuxer = function(t) {
                for (var e, r = this.config, i = this.observer, n = this.typeSupported, a = this.vendor, s = 0, o = In.length; s < o; s++) {
                    var l;
                    if (null != (l = In[s].demux) && l.probe(t)) {
                        e = In[s];
                        break
                    }
                }
                if (!e)
                    return new Error("Failed to find demuxer by probing fragment data");
                var u = this.demuxer
                  , h = this.remuxer
                  , d = e.remux
                  , c = e.demux;
                h && h instanceof d || (this.remuxer = new d(i,r,n,a)),
                u && u instanceof c || (this.demuxer = new c(i,r,n),
                this.probe = c.probe)
            }
            ,
            e.needsProbing = function(t, e) {
                return !this.demuxer || !this.remuxer || t || e
            }
            ,
            e.getDecrypter = function() {
                var t = this.decrypter;
                return t || (t = this.decrypter = new hi(this.config)),
                t
            }
            ,
            t
        }()
          , Cn = function(t) {
            return {
                remuxResult: {},
                chunkMeta: t
            }
        };
        function _n(t) {
            return "then"in t && t.then instanceof Function
        }
        var xn = function(t, e, r, i, n) {
            this.audioCodec = void 0,
            this.videoCodec = void 0,
            this.initSegmentData = void 0,
            this.duration = void 0,
            this.defaultInitPts = void 0,
            this.audioCodec = t,
            this.videoCodec = e,
            this.initSegmentData = r,
            this.duration = i,
            this.defaultInitPts = n || null
        }
          , Pn = function(t, e, r, i, n, a) {
            this.discontinuity = void 0,
            this.contiguous = void 0,
            this.accurateTimeOffset = void 0,
            this.trackSwitch = void 0,
            this.timeOffset = void 0,
            this.initSegmentChange = void 0,
            this.discontinuity = t,
            this.contiguous = e,
            this.accurateTimeOffset = r,
            this.trackSwitch = i,
            this.timeOffset = n,
            this.initSegmentChange = a
        }
          , Fn = {
            exports: {}
        };
        !function(t) {
            var e = Object.prototype.hasOwnProperty
              , r = "~";
            function i() {}
            function n(t, e, r) {
                this.fn = t,
                this.context = e,
                this.once = r || !1
            }
            function a(t, e, i, a, s) {
                if ("function" != typeof i)
                    throw new TypeError("The listener must be a function");
                var o = new n(i,a || t,s)
                  , l = r ? r + e : e;
                return t._events[l] ? t._events[l].fn ? t._events[l] = [t._events[l], o] : t._events[l].push(o) : (t._events[l] = o,
                t._eventsCount++),
                t
            }
            function s(t, e) {
                0 == --t._eventsCount ? t._events = new i : delete t._events[e]
            }
            function o() {
                this._events = new i,
                this._eventsCount = 0
            }
            Object.create && (i.prototype = Object.create(null),
            (new i).__proto__ || (r = !1)),
            o.prototype.eventNames = function() {
                var t, i, n = [];
                if (0 === this._eventsCount)
                    return n;
                for (i in t = this._events)
                    e.call(t, i) && n.push(r ? i.slice(1) : i);
                return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(t)) : n
            }
            ,
            o.prototype.listeners = function(t) {
                var e = r ? r + t : t
                  , i = this._events[e];
                if (!i)
                    return [];
                if (i.fn)
                    return [i.fn];
                for (var n = 0, a = i.length, s = new Array(a); n < a; n++)
                    s[n] = i[n].fn;
                return s
            }
            ,
            o.prototype.listenerCount = function(t) {
                var e = r ? r + t : t
                  , i = this._events[e];
                return i ? i.fn ? 1 : i.length : 0
            }
            ,
            o.prototype.emit = function(t, e, i, n, a, s) {
                var o = r ? r + t : t;
                if (!this._events[o])
                    return !1;
                var l, u, h = this._events[o], d = arguments.length;
                if (h.fn) {
                    switch (h.once && this.removeListener(t, h.fn, void 0, !0),
                    d) {
                    case 1:
                        return h.fn.call(h.context),
                        !0;
                    case 2:
                        return h.fn.call(h.context, e),
                        !0;
                    case 3:
                        return h.fn.call(h.context, e, i),
                        !0;
                    case 4:
                        return h.fn.call(h.context, e, i, n),
                        !0;
                    case 5:
                        return h.fn.call(h.context, e, i, n, a),
                        !0;
                    case 6:
                        return h.fn.call(h.context, e, i, n, a, s),
                        !0
                    }
                    for (u = 1,
                    l = new Array(d - 1); u < d; u++)
                        l[u - 1] = arguments[u];
                    h.fn.apply(h.context, l)
                } else {
                    var c, f = h.length;
                    for (u = 0; u < f; u++)
                        switch (h[u].once && this.removeListener(t, h[u].fn, void 0, !0),
                        d) {
                        case 1:
                            h[u].fn.call(h[u].context);
                            break;
                        case 2:
                            h[u].fn.call(h[u].context, e);
                            break;
                        case 3:
                            h[u].fn.call(h[u].context, e, i);
                            break;
                        case 4:
                            h[u].fn.call(h[u].context, e, i, n);
                            break;
                        default:
                            if (!l)
                                for (c = 1,
                                l = new Array(d - 1); c < d; c++)
                                    l[c - 1] = arguments[c];
                            h[u].fn.apply(h[u].context, l)
                        }
                }
                return !0
            }
            ,
            o.prototype.on = function(t, e, r) {
                return a(this, t, e, r, !1)
            }
            ,
            o.prototype.once = function(t, e, r) {
                return a(this, t, e, r, !0)
            }
            ,
            o.prototype.removeListener = function(t, e, i, n) {
                var a = r ? r + t : t;
                if (!this._events[a])
                    return this;
                if (!e)
                    return s(this, a),
                    this;
                var o = this._events[a];
                if (o.fn)
                    o.fn !== e || n && !o.once || i && o.context !== i || s(this, a);
                else {
                    for (var l = 0, u = [], h = o.length; l < h; l++)
                        (o[l].fn !== e || n && !o[l].once || i && o[l].context !== i) && u.push(o[l]);
                    u.length ? this._events[a] = 1 === u.length ? u[0] : u : s(this, a)
                }
                return this
            }
            ,
            o.prototype.removeAllListeners = function(t) {
                var e;
                return t ? (e = r ? r + t : t,
                this._events[e] && s(this, e)) : (this._events = new i,
                this._eventsCount = 0),
                this
            }
            ,
            o.prototype.off = o.prototype.removeListener,
            o.prototype.addListener = o.prototype.on,
            o.prefixed = r,
            o.EventEmitter = o,
            t.exports = o
        }(Fn);
        var Mn = v(Fn.exports);
        function On(t, e) {
            if (!((r = e.remuxResult).audio || r.video || r.text || r.id3 || r.initSegment))
                return !1;
            var r, i = [], n = e.remuxResult, a = n.audio, s = n.video;
            return a && Nn(i, a),
            s && Nn(i, s),
            t.postMessage({
                event: "transmuxComplete",
                data: e
            }, i),
            !0
        }
        function Nn(t, e) {
            e.data1 && t.push(e.data1.buffer),
            e.data2 && t.push(e.data2.buffer)
        }
        function Un(t, e, r) {
            e.reduce((function(e, r) {
                return On(t, r) || e
            }
            ), !1) || t.postMessage({
                event: "transmuxComplete",
                data: e[0]
            }),
            t.postMessage({
                event: "flush",
                data: r
            })
        }
        void 0 !== e && e && function(t) {
            var e = new Mn
              , r = function(e, r) {
                t.postMessage({
                    event: e,
                    data: r
                })
            };
            e.on(S.FRAG_DECRYPTED, r),
            e.on(S.ERROR, r);
            var i = function() {
                var t = function(t) {
                    var e = function(e) {
                        r("workerLog", {
                            logType: t,
                            message: e
                        })
                    };
                    w[t] = e
                };
                for (var e in w)
                    t(e)
            };
            t.addEventListener("message", (function(n) {
                var a = n.data;
                switch (a.cmd) {
                case "init":
                    var s = JSON.parse(a.config);
                    t.transmuxer = new wn(e,a.typeSupported,s,a.vendor,a.id),
                    I(s.debug, a.id),
                    i(),
                    r("init", null);
                    break;
                case "configure":
                    t.transmuxer.configure(a.config);
                    break;
                case "demux":
                    var o = t.transmuxer.push(a.data, a.decryptdata, a.chunkMeta, a.state);
                    _n(o) ? (t.transmuxer.async = !0,
                    o.then((function(e) {
                        On(t, e)
                    }
                    )).catch((function(t) {
                        r(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            chunkMeta: a.chunkMeta,
                            fatal: !1,
                            error: t,
                            err: t,
                            reason: "transmuxer-worker push error"
                        })
                    }
                    ))) : (t.transmuxer.async = !1,
                    On(t, o));
                    break;
                case "flush":
                    var l = a.chunkMeta
                      , u = t.transmuxer.flush(l);
                    _n(u) || t.transmuxer.async ? (_n(u) || (u = Promise.resolve(u)),
                    u.then((function(e) {
                        Un(t, e, l)
                    }
                    )).catch((function(t) {
                        r(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_PARSING_ERROR,
                            chunkMeta: a.chunkMeta,
                            fatal: !1,
                            error: t,
                            err: t,
                            reason: "transmuxer-worker flush error"
                        })
                    }
                    ))) : Un(t, u, l)
                }
            }
            ))
        }(self);
        var Bn = function() {
            function e(e, r, i, n) {
                var a = this;
                this.error = null,
                this.hls = void 0,
                this.id = void 0,
                this.observer = void 0,
                this.frag = null,
                this.part = null,
                this.useWorker = void 0,
                this.workerContext = null,
                this.onwmsg = void 0,
                this.transmuxer = null,
                this.onTransmuxComplete = void 0,
                this.onFlush = void 0;
                var s = e.config;
                this.hls = e,
                this.id = r,
                this.useWorker = !!s.enableWorker,
                this.onTransmuxComplete = i,
                this.onFlush = n;
                var o = function(t, e) {
                    (e = e || {}).frag = a.frag,
                    e.id = a.id,
                    t === S.ERROR && (a.error = e.error),
                    a.hls.trigger(t, e)
                };
                this.observer = new Mn,
                this.observer.on(S.FRAG_DECRYPTED, o),
                this.observer.on(S.ERROR, o);
                var l, u, h, d, c = te(s.preferManagedMediaSource) || {
                    isTypeSupported: function() {
                        return !1
                    }
                }, f = {
                    mpeg: c.isTypeSupported("audio/mpeg"),
                    mp3: c.isTypeSupported('audio/mp4; codecs="mp3"'),
                    ac3: c.isTypeSupported('audio/mp4; codecs="ac-3"')
                }, g = navigator.vendor;
                if (!this.useWorker || "undefined" == typeof Worker || (s.workerPath,
                0))
                    this.transmuxer = new wn(this.observer,f,s,g,r);
                else
                    try {
                        s.workerPath ? (w.log("loading Web Worker " + s.workerPath + ' for "' + r + '"'),
                        this.workerContext = (h = s.workerPath,
                        d = new self.URL(h,self.location.href).href,
                        {
                            worker: new self.Worker(d),
                            scriptURL: d
                        })) : (w.log('injecting Web Worker for "' + r + '"'),
                        this.workerContext = (l = new self.Blob(["var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(" + t.toString() + ")(true);"],{
                            type: "text/javascript"
                        }),
                        u = self.URL.createObjectURL(l),
                        {
                            worker: new self.Worker(u),
                            objectURL: u
                        })),
                        this.onwmsg = function(t) {
                            return a.onWorkerMessage(t)
                        }
                        ;
                        var v = this.workerContext.worker;
                        v.addEventListener("message", this.onwmsg),
                        v.onerror = function(t) {
                            var e = new Error(t.message + "  (" + t.filename + ":" + t.lineno + ")");
                            s.enableWorker = !1,
                            w.warn('Error in "' + r + '" Web Worker, fallback to inline'),
                            a.hls.trigger(S.ERROR, {
                                type: L.OTHER_ERROR,
                                details: A.INTERNAL_EXCEPTION,
                                fatal: !1,
                                event: "demuxerWorker",
                                error: e
                            })
                        }
                        ,
                        v.postMessage({
                            cmd: "init",
                            typeSupported: f,
                            vendor: g,
                            id: r,
                            config: JSON.stringify(s)
                        })
                    } catch (t) {
                        w.warn('Error setting up "' + r + '" Web Worker, fallback to inline', t),
                        this.resetWorker(),
                        this.error = null,
                        this.transmuxer = new wn(this.observer,f,s,g,r)
                    }
            }
            var r = e.prototype;
            return r.resetWorker = function() {
                if (this.workerContext) {
                    var t = this.workerContext
                      , e = t.worker
                      , r = t.objectURL;
                    r && self.URL.revokeObjectURL(r),
                    e.removeEventListener("message", this.onwmsg),
                    e.onerror = null,
                    e.terminate(),
                    this.workerContext = null
                }
            }
            ,
            r.destroy = function() {
                if (this.workerContext)
                    this.resetWorker(),
                    this.onwmsg = void 0;
                else {
                    var t = this.transmuxer;
                    t && (t.destroy(),
                    this.transmuxer = null)
                }
                var e = this.observer;
                e && e.removeAllListeners(),
                this.frag = null,
                this.observer = null,
                this.hls = null
            }
            ,
            r.push = function(t, e, r, i, n, a, s, o, l, u) {
                var h, d, c = this;
                l.transmuxing.start = self.performance.now();
                var f = this.transmuxer
                  , g = a ? a.start : n.start
                  , v = n.decryptdata
                  , m = this.frag
                  , p = !(m && n.cc === m.cc)
                  , y = !(m && l.level === m.level)
                  , E = m ? l.sn - m.sn : -1
                  , T = this.part ? l.part - this.part.index : -1
                  , S = 0 === E && l.id > 1 && l.id === (null == m ? void 0 : m.stats.chunkCount)
                  , L = !y && (1 === E || 0 === E && (1 === T || S && T <= 0))
                  , A = self.performance.now();
                (y || E || 0 === n.stats.parsing.start) && (n.stats.parsing.start = A),
                !a || !T && L || (a.stats.parsing.start = A);
                var R = !(m && (null == (h = n.initSegment) ? void 0 : h.url) === (null == (d = m.initSegment) ? void 0 : d.url))
                  , k = new Pn(p,L,o,y,g,R);
                if (!L || p || R) {
                    w.log("[transmuxer-interface, " + n.type + "]: Starting new transmux session for sn: " + l.sn + " p: " + l.part + " level: " + l.level + " id: " + l.id + "\n        discontinuity: " + p + "\n        trackSwitch: " + y + "\n        contiguous: " + L + "\n        accurateTimeOffset: " + o + "\n        timeOffset: " + g + "\n        initSegmentChange: " + R);
                    var b = new xn(r,i,e,s,u);
                    this.configureTransmuxer(b)
                }
                if (this.frag = n,
                this.part = a,
                this.workerContext)
                    this.workerContext.worker.postMessage({
                        cmd: "demux",
                        data: t,
                        decryptdata: v,
                        chunkMeta: l,
                        state: k
                    }, t instanceof ArrayBuffer ? [t] : []);
                else if (f) {
                    var D = f.push(t, v, l, k);
                    _n(D) ? (f.async = !0,
                    D.then((function(t) {
                        c.handleTransmuxComplete(t)
                    }
                    )).catch((function(t) {
                        c.transmuxerError(t, l, "transmuxer-interface push error")
                    }
                    ))) : (f.async = !1,
                    this.handleTransmuxComplete(D))
                }
            }
            ,
            r.flush = function(t) {
                var e = this;
                t.transmuxing.start = self.performance.now();
                var r = this.transmuxer;
                if (this.workerContext)
                    this.workerContext.worker.postMessage({
                        cmd: "flush",
                        chunkMeta: t
                    });
                else if (r) {
                    var i = r.flush(t);
                    _n(i) || r.async ? (_n(i) || (i = Promise.resolve(i)),
                    i.then((function(r) {
                        e.handleFlushResult(r, t)
                    }
                    )).catch((function(r) {
                        e.transmuxerError(r, t, "transmuxer-interface flush error")
                    }
                    ))) : this.handleFlushResult(i, t)
                }
            }
            ,
            r.transmuxerError = function(t, e, r) {
                this.hls && (this.error = t,
                this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.FRAG_PARSING_ERROR,
                    chunkMeta: e,
                    fatal: !1,
                    error: t,
                    err: t,
                    reason: r
                }))
            }
            ,
            r.handleFlushResult = function(t, e) {
                var r = this;
                t.forEach((function(t) {
                    r.handleTransmuxComplete(t)
                }
                )),
                this.onFlush(e)
            }
            ,
            r.onWorkerMessage = function(t) {
                var e = t.data
                  , r = this.hls;
                switch (e.event) {
                case "init":
                    var i, n = null == (i = this.workerContext) ? void 0 : i.objectURL;
                    n && self.URL.revokeObjectURL(n);
                    break;
                case "transmuxComplete":
                    this.handleTransmuxComplete(e.data);
                    break;
                case "flush":
                    this.onFlush(e.data);
                    break;
                case "workerLog":
                    w[e.data.logType] && w[e.data.logType](e.data.message);
                    break;
                default:
                    e.data = e.data || {},
                    e.data.frag = this.frag,
                    e.data.id = this.id,
                    r.trigger(e.event, e.data)
                }
            }
            ,
            r.configureTransmuxer = function(t) {
                var e = this.transmuxer;
                this.workerContext ? this.workerContext.worker.postMessage({
                    cmd: "configure",
                    config: t
                }) : e && e.configure(t)
            }
            ,
            r.handleTransmuxComplete = function(t) {
                t.chunkMeta.transmuxing.end = self.performance.now(),
                this.onTransmuxComplete(t)
            }
            ,
            e
        }();
        function Gn(t, e) {
            if (t.length !== e.length)
                return !1;
            for (var r = 0; r < t.length; r++)
                if (!Kn(t[r].attrs, e[r].attrs))
                    return !1;
            return !0
        }
        function Kn(t, e, r) {
            var i = t["STABLE-RENDITION-ID"];
            return i && !r ? i === e["STABLE-RENDITION-ID"] : !(r || ["LANGUAGE", "NAME", "CHARACTERISTICS", "AUTOSELECT", "DEFAULT", "FORCED", "ASSOC-LANGUAGE"]).some((function(r) {
                return t[r] !== e[r]
            }
            ))
        }
        function Hn(t, e) {
            return e.label.toLowerCase() === t.name.toLowerCase() && (!e.language || e.language.toLowerCase() === (t.lang || "").toLowerCase())
        }
        var Vn = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e, r, i, "[audio-stream-controller]", we) || this).videoBuffer = null,
                n.videoTrackCC = -1,
                n.waitingVideoCC = -1,
                n.bufferedTrack = null,
                n.switchingTrack = null,
                n.trackId = -1,
                n.waitingData = null,
                n.mainDetails = null,
                n.flushing = !1,
                n.bufferFlushed = !1,
                n.cachedTrackLoadedData = null,
                n._registerListeners(),
                n
            }
            l(e, t);
            var r = e.prototype;
            return r.onHandlerDestroying = function() {
                this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this),
                this.mainDetails = null,
                this.bufferedTrack = null,
                this.switchingTrack = null
            }
            ,
            r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this),
                t.off(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r.onInitPtsFound = function(t, e) {
                var r = e.frag
                  , i = e.id
                  , n = e.initPTS
                  , a = e.timescale;
                if ("main" === i) {
                    var s = r.cc;
                    this.initPTS[r.cc] = {
                        baseTime: n,
                        timescale: a
                    },
                    this.log("InitPTS for cc: " + s + " found from main: " + n),
                    this.videoTrackCC = s,
                    this.state === Li && this.tick()
                }
            }
            ,
            r.startLoad = function(t) {
                if (!this.levels)
                    return this.startPosition = t,
                    void (this.state = ci);
                var e = this.lastCurrentTime;
                this.stopLoad(),
                this.setInterval(100),
                e > 0 && -1 === t ? (this.log("Override startPosition with lastCurrentTime @" + e.toFixed(3)),
                t = e,
                this.state = fi) : (this.loadedmetadata = !1,
                this.state = pi),
                this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t,
                this.tick()
            }
            ,
            r.doTick = function() {
                switch (this.state) {
                case fi:
                    this.doTickIdle();
                    break;
                case pi:
                    var e, r = this.levels, i = this.trackId, n = null == r || null == (e = r[i]) ? void 0 : e.details;
                    if (n) {
                        if (this.waitForCdnTuneIn(n))
                            break;
                        this.state = Li
                    }
                    break;
                case mi:
                    var a, s = performance.now(), o = this.retryDate;
                    if (!o || s >= o || null != (a = this.media) && a.seeking) {
                        var l = this.levels
                          , u = this.trackId;
                        this.log("RetryDate reached, switch back to IDLE state"),
                        this.resetStartWhenNotLoaded((null == l ? void 0 : l[u]) || null),
                        this.state = fi
                    }
                    break;
                case Li:
                    var h = this.waitingData;
                    if (h) {
                        var d = h.frag
                          , c = h.part
                          , f = h.cache
                          , g = h.complete;
                        if (void 0 !== this.initPTS[d.cc]) {
                            this.waitingData = null,
                            this.waitingVideoCC = -1,
                            this.state = vi;
                            var v = {
                                frag: d,
                                part: c,
                                payload: f.flush(),
                                networkDetails: null
                            };
                            this._handleFragmentLoadProgress(v),
                            g && t.prototype._handleFragmentLoadComplete.call(this, v)
                        } else if (this.videoTrackCC !== this.waitingVideoCC)
                            this.log("Waiting fragment cc (" + d.cc + ") cancelled because video is at cc " + this.videoTrackCC),
                            this.clearWaitingFragment();
                        else {
                            var m = this.getLoadPosition()
                              , p = zr.bufferInfo(this.mediaBuffer, m, this.config.maxBufferHole);
                            pr(p.end, this.config.maxFragLookUpTolerance, d) < 0 && (this.log("Waiting fragment cc (" + d.cc + ") @ " + d.start + " cancelled because another fragment at " + p.end + " is needed"),
                            this.clearWaitingFragment())
                        }
                    } else
                        this.state = fi
                }
                this.onTickEnd()
            }
            ,
            r.clearWaitingFragment = function() {
                var t = this.waitingData;
                t && (this.fragmentTracker.removeFragment(t.frag),
                this.waitingData = null,
                this.waitingVideoCC = -1,
                this.state = fi)
            }
            ,
            r.resetLoadingState = function() {
                this.clearWaitingFragment(),
                t.prototype.resetLoadingState.call(this)
            }
            ,
            r.onTickEnd = function() {
                var t = this.media;
                null != t && t.readyState && (this.lastCurrentTime = t.currentTime)
            }
            ,
            r.doTickIdle = function() {
                var t = this.hls
                  , e = this.levels
                  , r = this.media
                  , i = this.trackId
                  , n = t.config;
                if ((r || !this.startFragRequested && n.startFragPrefetch) && null != e && e[i]) {
                    var a = e[i]
                      , s = a.details;
                    if (!s || s.live && this.levelLastLoaded !== a || this.waitForCdnTuneIn(s))
                        this.state = pi;
                    else {
                        var o = this.mediaBuffer ? this.mediaBuffer : this.media;
                        this.bufferFlushed && o && (this.bufferFlushed = !1,
                        this.afterBufferFlushed(o, O, we));
                        var l = this.getFwdBufferInfo(o, we);
                        if (null !== l) {
                            var u = this.bufferedTrack
                              , h = this.switchingTrack;
                            if (!h && this._streamEnded(l, s))
                                return t.trigger(S.BUFFER_EOS, {
                                    type: "audio"
                                }),
                                void (this.state = Ti);
                            var d = this.getFwdBufferInfo(this.videoBuffer ? this.videoBuffer : this.media, Ie)
                              , c = l.len
                              , f = this.getMaxBufferLength(null == d ? void 0 : d.len)
                              , g = s.fragments
                              , v = g[0].start
                              , m = this.flushing ? this.getLoadPosition() : l.end;
                            if (h && r) {
                                var p = this.getLoadPosition();
                                u && !Kn(h.attrs, u.attrs) && (m = p),
                                s.PTSKnown && p < v && (l.end > v || l.nextStart) && (this.log("Alt audio track ahead of main track, seek to start of alt audio track"),
                                r.currentTime = v + .05)
                            }
                            if (!(c >= f && !h && m < g[g.length - 1].start)) {
                                var y = this.getNextFragment(m, s)
                                  , E = !1;
                                if (y && this.isLoopLoading(y, m) && (E = !!y.gap,
                                y = this.getNextFragmentLoopLoading(y, s, l, Ie, f)),
                                y) {
                                    var T = d && y.start > d.end + s.targetduration;
                                    if (T || (null == d || !d.len) && l.len) {
                                        var L = this.getAppendedFrag(y.start, Ie);
                                        if (null === L)
                                            return;
                                        if (E || (E = !!L.gap || !!T && 0 === d.len),
                                        T && !E || E && l.nextStart && l.nextStart < L.end)
                                            return
                                    }
                                    this.loadFragment(y, a, m)
                                } else
                                    this.bufferFlushed = !0
                            }
                        }
                    }
                }
            }
            ,
            r.getMaxBufferLength = function(e) {
                var r = t.prototype.getMaxBufferLength.call(this);
                return e ? Math.min(Math.max(r, e), this.config.maxMaxBufferLength) : r
            }
            ,
            r.onMediaDetaching = function() {
                this.videoBuffer = null,
                this.bufferFlushed = this.flushing = !1,
                t.prototype.onMediaDetaching.call(this)
            }
            ,
            r.onAudioTracksUpdated = function(t, e) {
                var r = e.audioTracks;
                this.resetTransmuxer(),
                this.levels = r.map((function(t) {
                    return new tr(t)
                }
                ))
            }
            ,
            r.onAudioTrackSwitching = function(t, e) {
                var r = !!e.url;
                this.trackId = e.id;
                var i = this.fragCurrent;
                i && (i.abortRequests(),
                this.removeUnbufferedFrags(i.start)),
                this.resetLoadingState(),
                r ? this.setInterval(100) : this.resetTransmuxer(),
                r ? (this.switchingTrack = e,
                this.state = fi,
                this.flushAudioIfNeeded(e)) : (this.switchingTrack = null,
                this.bufferedTrack = e,
                this.state = ci),
                this.tick()
            }
            ,
            r.onManifestLoading = function() {
                this.fragmentTracker.removeAllFragments(),
                this.startPosition = this.lastCurrentTime = 0,
                this.bufferFlushed = this.flushing = !1,
                this.levels = this.mainDetails = this.waitingData = this.bufferedTrack = this.cachedTrackLoadedData = this.switchingTrack = null,
                this.startFragRequested = !1,
                this.trackId = this.videoTrackCC = this.waitingVideoCC = -1
            }
            ,
            r.onLevelLoaded = function(t, e) {
                this.mainDetails = e.details,
                null !== this.cachedTrackLoadedData && (this.hls.trigger(S.AUDIO_TRACK_LOADED, this.cachedTrackLoadedData),
                this.cachedTrackLoadedData = null)
            }
            ,
            r.onAudioTrackLoaded = function(t, e) {
                var r;
                if (null != this.mainDetails) {
                    var i = this.levels
                      , n = e.details
                      , a = e.id;
                    if (i) {
                        this.log("Audio track " + a + " loaded [" + n.startSN + "," + n.endSN + "]" + (n.lastPartSn ? "[part-" + n.lastPartSn + "-" + n.lastPartIndex + "]" : "") + ",duration:" + n.totalduration);
                        var s = i[a]
                          , o = 0;
                        if (n.live || null != (r = s.details) && r.live) {
                            this.checkLiveUpdate(n);
                            var l, u = this.mainDetails;
                            if (n.deltaUpdateFailed || !u)
                                return;
                            !s.details && n.hasProgramDateTime && u.hasProgramDateTime ? (ei(n, u),
                            o = n.fragments[0].start) : o = this.alignPlaylists(n, s.details, null == (l = this.levelLastLoaded) ? void 0 : l.details)
                        }
                        s.details = n,
                        this.levelLastLoaded = s,
                        this.startFragRequested || !this.mainDetails && n.live || this.setStartPosition(s.details, o),
                        this.state !== pi || this.waitForCdnTuneIn(n) || (this.state = fi),
                        this.tick()
                    } else
                        this.warn("Audio tracks were reset while loading level " + a)
                } else
                    this.cachedTrackLoadedData = e
            }
            ,
            r._handleFragmentLoadProgress = function(t) {
                var e, r = t.frag, i = t.part, n = t.payload, a = this.config, s = this.trackId, o = this.levels;
                if (o) {
                    var l = o[s];
                    if (l) {
                        var u = l.details;
                        if (!u)
                            return this.warn("Audio track details undefined on fragment load progress"),
                            void this.removeUnbufferedFrags(r.start);
                        var h = a.defaultAudioCodec || l.audioCodec || "mp4a.40.2"
                          , d = this.transmuxer;
                        d || (d = this.transmuxer = new Bn(this.hls,we,this._handleTransmuxComplete.bind(this),this._handleTransmuxerFlush.bind(this)));
                        var c = this.initPTS[r.cc]
                          , f = null == (e = r.initSegment) ? void 0 : e.data;
                        if (void 0 !== c) {
                            var g = i ? i.index : -1
                              , v = -1 !== g
                              , m = new Qr(r.level,r.sn,r.stats.chunkCount,n.byteLength,g,v);
                            d.push(n, f, h, "", r, i, u.totalduration, !1, m, c)
                        } else
                            this.log("Unknown video PTS for cc " + r.cc + ", waiting for video PTS before demuxing audio frag " + r.sn + " of [" + u.startSN + " ," + u.endSN + "],track " + s),
                            (this.waitingData = this.waitingData || {
                                frag: r,
                                part: i,
                                cache: new ki,
                                complete: !1
                            }).cache.push(new Uint8Array(n)),
                            this.waitingVideoCC = this.videoTrackCC,
                            this.state = Li
                    } else
                        this.warn("Audio track is undefined on fragment load progress")
                } else
                    this.warn("Audio tracks were reset while fragment load was in progress. Fragment " + r.sn + " of level " + r.level + " will not be buffered")
            }
            ,
            r._handleFragmentLoadComplete = function(e) {
                this.waitingData ? this.waitingData.complete = !0 : t.prototype._handleFragmentLoadComplete.call(this, e)
            }
            ,
            r.onBufferReset = function() {
                this.mediaBuffer = this.videoBuffer = null,
                this.loadedmetadata = !1
            }
            ,
            r.onBufferCreated = function(t, e) {
                var r = e.tracks.audio;
                r && (this.mediaBuffer = r.buffer || null),
                e.tracks.video && (this.videoBuffer = e.tracks.video.buffer || null)
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r = e.frag
                  , n = e.part;
                if (r.type === we)
                    if (this.fragContextChanged(r))
                        this.warn("Fragment " + r.sn + (n ? " p: " + n.index : "") + " of level " + r.level + " finished buffering, but was aborted. state: " + this.state + ", audioSwitch: " + (this.switchingTrack ? this.switchingTrack.name : "false"));
                    else {
                        if ("initSegment" !== r.sn) {
                            this.fragPrevious = r;
                            var a = this.switchingTrack;
                            a && (this.bufferedTrack = a,
                            this.switchingTrack = null,
                            this.hls.trigger(S.AUDIO_TRACK_SWITCHED, i({}, a)))
                        }
                        this.fragBufferedComplete(r, n)
                    }
                else if (!this.loadedmetadata && r.type === Ie) {
                    var s = this.videoBuffer || this.media;
                    s && zr.getBuffered(s).length && (this.loadedmetadata = !0)
                }
            }
            ,
            r.onError = function(e, r) {
                var i;
                if (r.fatal)
                    this.state = Si;
                else
                    switch (r.details) {
                    case A.FRAG_GAP:
                    case A.FRAG_PARSING_ERROR:
                    case A.FRAG_DECRYPT_ERROR:
                    case A.FRAG_LOAD_ERROR:
                    case A.FRAG_LOAD_TIMEOUT:
                    case A.KEY_LOAD_ERROR:
                    case A.KEY_LOAD_TIMEOUT:
                        this.onFragmentOrKeyLoadError(we, r);
                        break;
                    case A.AUDIO_TRACK_LOAD_ERROR:
                    case A.AUDIO_TRACK_LOAD_TIMEOUT:
                    case A.LEVEL_PARSING_ERROR:
                        r.levelRetry || this.state !== pi || (null == (i = r.context) ? void 0 : i.type) !== be || (this.state = fi);
                        break;
                    case A.BUFFER_APPEND_ERROR:
                    case A.BUFFER_FULL_ERROR:
                        if (!r.parent || "audio" !== r.parent)
                            return;
                        if (r.details === A.BUFFER_APPEND_ERROR)
                            return void this.resetLoadingState();
                        this.reduceLengthAndFlushBuffer(r) && (this.bufferedTrack = null,
                        t.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio"));
                        break;
                    case A.INTERNAL_EXCEPTION:
                        this.recoverWorkerError(r)
                    }
            }
            ,
            r.onBufferFlushing = function(t, e) {
                e.type !== N && (this.flushing = !0)
            }
            ,
            r.onBufferFlushed = function(t, e) {
                var r = e.type;
                if (r !== N) {
                    this.flushing = !1,
                    this.bufferFlushed = !0,
                    this.state === Ti && (this.state = fi);
                    var i = this.mediaBuffer || this.media;
                    i && (this.afterBufferFlushed(i, r, we),
                    this.tick())
                }
            }
            ,
            r._handleTransmuxComplete = function(t) {
                var e, r = "audio", i = this.hls, n = t.remuxResult, a = t.chunkMeta, s = this.getCurrentContext(a);
                if (s) {
                    var l = s.frag
                      , u = s.part
                      , h = s.level
                      , d = h.details
                      , c = n.audio
                      , f = n.text
                      , g = n.id3
                      , v = n.initSegment;
                    if (!this.fragContextChanged(l) && d) {
                        if (this.state = yi,
                        this.switchingTrack && c && this.completeAudioSwitch(this.switchingTrack),
                        null != v && v.tracks) {
                            var m = l.initSegment || l;
                            this._bufferInitSegment(h, v.tracks, m, a),
                            i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                                frag: m,
                                id: r,
                                tracks: v.tracks
                            })
                        }
                        if (c) {
                            var p = c.startPTS
                              , y = c.endPTS
                              , E = c.startDTS
                              , T = c.endDTS;
                            u && (u.elementaryStreams[O] = {
                                startPTS: p,
                                endPTS: y,
                                startDTS: E,
                                endDTS: T
                            }),
                            l.setElementaryStreamInfo(O, p, y, E, T),
                            this.bufferFragmentData(c, l, u, a)
                        }
                        if (null != g && null != (e = g.samples) && e.length) {
                            var L = o({
                                id: r,
                                frag: l,
                                details: d
                            }, g);
                            i.trigger(S.FRAG_PARSING_METADATA, L)
                        }
                        if (f) {
                            var A = o({
                                id: r,
                                frag: l,
                                details: d
                            }, f);
                            i.trigger(S.FRAG_PARSING_USERDATA, A)
                        }
                    } else
                        this.fragmentTracker.removeFragment(l)
                } else
                    this.resetWhenMissingContext(a)
            }
            ,
            r._bufferInitSegment = function(t, e, r, i) {
                if (this.state === yi) {
                    e.video && delete e.video;
                    var n = e.audio;
                    if (n) {
                        n.id = "audio";
                        var a = t.audioCodec;
                        this.log("Init audio buffer, container:" + n.container + ", codecs[level/parsed]=[" + a + "/" + n.codec + "]"),
                        a && 1 === a.split(",").length && (n.levelCodec = a),
                        this.hls.trigger(S.BUFFER_CODECS, e);
                        var s = n.initSegment;
                        if (null != s && s.byteLength) {
                            var o = {
                                type: "audio",
                                frag: r,
                                part: null,
                                chunkMeta: i,
                                parent: r.type,
                                data: s
                            };
                            this.hls.trigger(S.BUFFER_APPENDING, o)
                        }
                        this.tickImmediate()
                    }
                }
            }
            ,
            r.loadFragment = function(e, r, i) {
                var n, a = this.fragmentTracker.getState(e);
                if (this.fragCurrent = e,
                this.switchingTrack || a === Kr || a === Vr)
                    if ("initSegment" === e.sn)
                        this._loadInitSegment(e, r);
                    else if (null != (n = r.details) && n.live && !this.initPTS[e.cc]) {
                        this.log("Waiting for video PTS in continuity counter " + e.cc + " of live stream before loading audio fragment " + e.sn + " of level " + this.trackId),
                        this.state = Li;
                        var s = this.mainDetails;
                        s && s.fragments[0].start !== r.details.fragments[0].start && ei(r.details, s)
                    } else
                        this.startFragRequested = !0,
                        t.prototype.loadFragment.call(this, e, r, i);
                else
                    this.clearTrackerIfNeeded(e)
            }
            ,
            r.flushAudioIfNeeded = function(e) {
                var r = this.media
                  , i = this.bufferedTrack
                  , n = null == i ? void 0 : i.attrs
                  , a = e.attrs;
                r && n && (n.CHANNELS !== a.CHANNELS || i.name !== e.name || i.lang !== e.lang) && (this.log("Switching audio track : flushing all audio"),
                t.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio"),
                this.bufferedTrack = null)
            }
            ,
            r.completeAudioSwitch = function(t) {
                var e = this.hls;
                this.flushAudioIfNeeded(t),
                this.bufferedTrack = t,
                this.switchingTrack = null,
                e.trigger(S.AUDIO_TRACK_SWITCHED, i({}, t))
            }
            ,
            e
        }(Ri)
          , Yn = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this, e, "[audio-track-controller]") || this).tracks = [],
                r.groupIds = null,
                r.tracksInGroup = [],
                r.trackId = -1,
                r.currentTrack = null,
                r.selectDefaultTrack = !0,
                r.registerListeners(),
                r
            }
            l(e, t);
            var r = e.prototype;
            return r.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            r.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this),
                t.off(S.ERROR, this.onError, this)
            }
            ,
            r.destroy = function() {
                this.unregisterListeners(),
                this.tracks.length = 0,
                this.tracksInGroup.length = 0,
                this.currentTrack = null,
                t.prototype.destroy.call(this)
            }
            ,
            r.onManifestLoading = function() {
                this.tracks = [],
                this.tracksInGroup = [],
                this.groupIds = null,
                this.currentTrack = null,
                this.trackId = -1,
                this.selectDefaultTrack = !0
            }
            ,
            r.onManifestParsed = function(t, e) {
                this.tracks = e.audioTracks || []
            }
            ,
            r.onAudioTrackLoaded = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.details
                  , a = this.tracksInGroup[r];
                if (a && a.groupId === i) {
                    var s = a.details;
                    a.details = e.details,
                    this.log("Audio track " + r + ' "' + a.name + '" lang:' + a.lang + " group:" + i + " loaded [" + n.startSN + "-" + n.endSN + "]"),
                    r === this.trackId && this.playlistLoaded(r, e, s)
                } else
                    this.warn("Audio track with id:" + r + " and group:" + i + " not found in active group " + (null == a ? void 0 : a.groupId))
            }
            ,
            r.onLevelLoading = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.onLevelSwitching = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.switchLevel = function(t) {
                var e = this.hls.levels[t];
                if (e) {
                    var r = e.audioGroups || null
                      , i = this.groupIds
                      , n = this.currentTrack;
                    if (!r || (null == i ? void 0 : i.length) !== (null == r ? void 0 : r.length) || null != r && r.some((function(t) {
                        return -1 === (null == i ? void 0 : i.indexOf(t))
                    }
                    ))) {
                        this.groupIds = r,
                        this.trackId = -1,
                        this.currentTrack = null;
                        var a = this.tracks.filter((function(t) {
                            return !r || -1 !== r.indexOf(t.groupId)
                        }
                        ));
                        if (a.length)
                            this.selectDefaultTrack && !a.some((function(t) {
                                return t.default
                            }
                            )) && (this.selectDefaultTrack = !1),
                            a.forEach((function(t, e) {
                                t.id = e
                            }
                            ));
                        else if (!n && !this.tracksInGroup.length)
                            return;
                        this.tracksInGroup = a;
                        var s = this.hls.config.audioPreference;
                        if (!n && s) {
                            var o = Mr(s, a, Nr);
                            if (o > -1)
                                n = a[o];
                            else {
                                var l = Mr(s, this.tracks);
                                n = this.tracks[l]
                            }
                        }
                        var u = this.findTrackId(n);
                        -1 === u && n && (u = this.findTrackId(null));
                        var h = {
                            audioTracks: a
                        };
                        this.log("Updating audio tracks, " + a.length + " track(s) found in group(s): " + (null == r ? void 0 : r.join(","))),
                        this.hls.trigger(S.AUDIO_TRACKS_UPDATED, h);
                        var d = this.trackId;
                        if (-1 !== u && -1 === d)
                            this.setAudioTrack(u);
                        else if (a.length && -1 === d) {
                            var c, f = new Error("No audio track selected for current audio group-ID(s): " + (null == (c = this.groupIds) ? void 0 : c.join(",")) + " track count: " + a.length);
                            this.warn(f.message),
                            this.hls.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.AUDIO_TRACK_LOAD_ERROR,
                                fatal: !0,
                                error: f
                            })
                        }
                    } else
                        this.shouldReloadPlaylist(n) && this.setAudioTrack(this.trackId)
                }
            }
            ,
            r.onError = function(t, e) {
                !e.fatal && e.context && (e.context.type !== be || e.context.id !== this.trackId || this.groupIds && -1 === this.groupIds.indexOf(e.context.groupId) || (this.requestScheduled = -1,
                this.checkRetry(e)))
            }
            ,
            r.setAudioOption = function(t) {
                var e = this.hls;
                if (e.config.audioPreference = t,
                t) {
                    var r = this.allAudioTracks;
                    if (this.selectDefaultTrack = !1,
                    r.length) {
                        var i = this.currentTrack;
                        if (i && Or(t, i, Nr))
                            return i;
                        var n = Mr(t, this.tracksInGroup, Nr);
                        if (n > -1) {
                            var a = this.tracksInGroup[n];
                            return this.setAudioTrack(n),
                            a
                        }
                        if (i) {
                            var s = e.loadLevel;
                            -1 === s && (s = e.firstAutoLevel);
                            var o = function(t, e, r, i, n) {
                                var a = e[i]
                                  , s = e.reduce((function(t, e, r) {
                                    var i = e.uri;
                                    return (t[i] || (t[i] = [])).push(r),
                                    t
                                }
                                ), {})[a.uri];
                                s.length > 1 && (i = Math.max.apply(Math, s));
                                var o = a.videoRange
                                  , l = a.frameRate
                                  , u = a.codecSet.substring(0, 4)
                                  , h = Ur(e, i, (function(e) {
                                    if (e.videoRange !== o || e.frameRate !== l || e.codecSet.substring(0, 4) !== u)
                                        return !1;
                                    var i = e.audioGroups
                                      , a = r.filter((function(t) {
                                        return !i || -1 !== i.indexOf(t.groupId)
                                    }
                                    ));
                                    return Mr(t, a, n) > -1
                                }
                                ));
                                return h > -1 ? h : Ur(e, i, (function(e) {
                                    var i = e.audioGroups
                                      , a = r.filter((function(t) {
                                        return !i || -1 !== i.indexOf(t.groupId)
                                    }
                                    ));
                                    return Mr(t, a, n) > -1
                                }
                                ))
                            }(t, e.levels, r, s, Nr);
                            if (-1 === o)
                                return null;
                            e.nextLoadLevel = o
                        }
                        if (t.channels || t.audioCodec) {
                            var l = Mr(t, r);
                            if (l > -1)
                                return r[l]
                        }
                    }
                }
                return null
            }
            ,
            r.setAudioTrack = function(t) {
                var e = this.tracksInGroup;
                if (t < 0 || t >= e.length)
                    this.warn("Invalid audio track id: " + t);
                else {
                    this.clearTimer(),
                    this.selectDefaultTrack = !1;
                    var r = this.currentTrack
                      , n = e[t]
                      , a = n.details && !n.details.live;
                    if (!(t === this.trackId && n === r && a || (this.log("Switching to audio-track " + t + ' "' + n.name + '" lang:' + n.lang + " group:" + n.groupId + " channels:" + n.channels),
                    this.trackId = t,
                    this.currentTrack = n,
                    this.hls.trigger(S.AUDIO_TRACK_SWITCHING, i({}, n)),
                    a))) {
                        var s = this.switchParams(n.url, null == r ? void 0 : r.details);
                        this.loadPlaylist(s)
                    }
                }
            }
            ,
            r.findTrackId = function(t) {
                for (var e = this.tracksInGroup, r = 0; r < e.length; r++) {
                    var i = e[r];
                    if ((!this.selectDefaultTrack || i.default) && (!t || Or(t, i, Nr)))
                        return r
                }
                if (t) {
                    for (var n = t.name, a = t.lang, s = t.assocLang, o = t.characteristics, l = t.audioCodec, u = t.channels, h = 0; h < e.length; h++)
                        if (Or({
                            name: n,
                            lang: a,
                            assocLang: s,
                            characteristics: o,
                            audioCodec: l,
                            channels: u
                        }, e[h], Nr))
                            return h;
                    for (var d = 0; d < e.length; d++) {
                        var c = e[d];
                        if (Kn(t.attrs, c.attrs, ["LANGUAGE", "ASSOC-LANGUAGE", "CHARACTERISTICS"]))
                            return d
                    }
                    for (var f = 0; f < e.length; f++) {
                        var g = e[f];
                        if (Kn(t.attrs, g.attrs, ["LANGUAGE"]))
                            return f
                    }
                }
                return -1
            }
            ,
            r.loadPlaylist = function(e) {
                var r = this.currentTrack;
                if (this.shouldLoadPlaylist(r) && r) {
                    t.prototype.loadPlaylist.call(this);
                    var i = r.id
                      , n = r.groupId
                      , a = r.url;
                    if (e)
                        try {
                            a = e.addDirectives(a)
                        } catch (t) {
                            this.warn("Could not construct new URL with HLS Delivery Directives: " + t)
                        }
                    this.log("loading audio-track playlist " + i + ' "' + r.name + '" lang:' + r.lang + " group:" + n),
                    this.clearTimer(),
                    this.hls.trigger(S.AUDIO_TRACK_LOADING, {
                        url: a,
                        id: i,
                        groupId: n,
                        deliveryDirectives: e || null
                    })
                }
            }
            ,
            s(e, [{
                key: "allAudioTracks",
                get: function() {
                    return this.tracks
                }
            }, {
                key: "audioTracks",
                get: function() {
                    return this.tracksInGroup
                }
            }, {
                key: "audioTrack",
                get: function() {
                    return this.trackId
                },
                set: function(t) {
                    this.selectDefaultTrack = !1,
                    this.setAudioTrack(t)
                }
            }]),
            e
        }(Dr)
          , Wn = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e, r, i, "[subtitle-stream-controller]", Ce) || this).currentTrackId = -1,
                n.tracksBuffered = [],
                n.mainDetails = null,
                n._registerListeners(),
                n
            }
            l(e, t);
            var r = e.prototype;
            return r.onHandlerDestroying = function() {
                this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this),
                this.mainDetails = null
            }
            ,
            r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.on(S.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(S.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.off(S.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this),
                t.off(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.off(S.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r.startLoad = function(t) {
                this.stopLoad(),
                this.state = fi,
                this.setInterval(500),
                this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t,
                this.tick()
            }
            ,
            r.onManifestLoading = function() {
                this.mainDetails = null,
                this.fragmentTracker.removeAllFragments()
            }
            ,
            r.onMediaDetaching = function() {
                this.tracksBuffered = [],
                t.prototype.onMediaDetaching.call(this)
            }
            ,
            r.onLevelLoaded = function(t, e) {
                this.mainDetails = e.details
            }
            ,
            r.onSubtitleFragProcessed = function(t, e) {
                var r = e.frag
                  , i = e.success;
                if (this.fragPrevious = r,
                this.state = fi,
                i) {
                    var n = this.tracksBuffered[this.currentTrackId];
                    if (n) {
                        for (var a, s = r.start, o = 0; o < n.length; o++)
                            if (s >= n[o].start && s <= n[o].end) {
                                a = n[o];
                                break
                            }
                        var l = r.start + r.duration;
                        a ? a.end = l : (a = {
                            start: s,
                            end: l
                        },
                        n.push(a)),
                        this.fragmentTracker.fragBuffered(r),
                        this.fragBufferedComplete(r, null)
                    }
                }
            }
            ,
            r.onBufferFlushing = function(t, e) {
                var r = e.startOffset
                  , i = e.endOffset;
                if (0 === r && i !== Number.POSITIVE_INFINITY) {
                    var n = i - 1;
                    if (n <= 0)
                        return;
                    e.endOffsetSubtitles = Math.max(0, n),
                    this.tracksBuffered.forEach((function(t) {
                        for (var e = 0; e < t.length; )
                            if (t[e].end <= n)
                                t.shift();
                            else {
                                if (!(t[e].start < n))
                                    break;
                                t[e].start = n,
                                e++
                            }
                    }
                    )),
                    this.fragmentTracker.removeFragmentsInRange(r, n, Ce)
                }
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r;
                this.loadedmetadata || e.frag.type !== Ie || null != (r = this.media) && r.buffered.length && (this.loadedmetadata = !0)
            }
            ,
            r.onError = function(t, e) {
                var r = e.frag;
                (null == r ? void 0 : r.type) === Ce && (this.fragCurrent && this.fragCurrent.abortRequests(),
                this.state !== ci && (this.state = fi))
            }
            ,
            r.onSubtitleTracksUpdated = function(t, e) {
                var r = this
                  , i = e.subtitleTracks;
                this.levels && !Gn(this.levels, i) ? (this.tracksBuffered = [],
                this.levels = i.map((function(t) {
                    var e = new tr(t);
                    return r.tracksBuffered[e.id] = [],
                    e
                }
                )),
                this.fragmentTracker.removeFragmentsInRange(0, Number.POSITIVE_INFINITY, Ce),
                this.fragPrevious = null,
                this.mediaBuffer = null) : this.levels = i.map((function(t) {
                    return new tr(t)
                }
                ))
            }
            ,
            r.onSubtitleTrackSwitch = function(t, e) {
                var r;
                if (this.currentTrackId = e.id,
                null != (r = this.levels) && r.length && -1 !== this.currentTrackId) {
                    var i = this.levels[this.currentTrackId];
                    null != i && i.details ? this.mediaBuffer = this.mediaBufferTimeRanges : this.mediaBuffer = null,
                    i && this.setInterval(500)
                } else
                    this.clearInterval()
            }
            ,
            r.onSubtitleTrackLoaded = function(t, e) {
                var r, i = this.currentTrackId, n = this.levels, a = e.details, s = e.id;
                if (n) {
                    var o = n[i];
                    if (!(s >= n.length || s !== i) && o) {
                        this.log("Subtitle track " + s + " loaded [" + a.startSN + "," + a.endSN + "]" + (a.lastPartSn ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]" : "") + ",duration:" + a.totalduration),
                        this.mediaBuffer = this.mediaBufferTimeRanges;
                        var l = 0;
                        if (a.live || null != (r = o.details) && r.live) {
                            var u = this.mainDetails;
                            if (a.deltaUpdateFailed || !u)
                                return;
                            var h, d = u.fragments[0];
                            o.details ? 0 === (l = this.alignPlaylists(a, o.details, null == (h = this.levelLastLoaded) ? void 0 : h.details)) && d && sr(a, l = d.start) : a.hasProgramDateTime && u.hasProgramDateTime ? (ei(a, u),
                            l = a.fragments[0].start) : d && sr(a, l = d.start)
                        }
                        o.details = a,
                        this.levelLastLoaded = o,
                        this.startFragRequested || !this.mainDetails && a.live || this.setStartPosition(o.details, l),
                        this.tick(),
                        a.live && !this.fragCurrent && this.media && this.state === fi && (mr(null, a.fragments, this.media.currentTime, 0) || (this.warn("Subtitle playlist not aligned with playback"),
                        o.details = void 0))
                    }
                } else
                    this.warn("Subtitle tracks were reset while loading level " + s)
            }
            ,
            r._handleFragmentLoadComplete = function(t) {
                var e = this
                  , r = t.frag
                  , i = t.payload
                  , n = r.decryptdata
                  , a = this.hls;
                if (!this.fragContextChanged(r) && i && i.byteLength > 0 && null != n && n.key && n.iv && "AES-128" === n.method) {
                    var s = performance.now();
                    this.decrypter.decrypt(new Uint8Array(i), n.key.buffer, n.iv.buffer).catch((function(t) {
                        throw a.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.FRAG_DECRYPT_ERROR,
                            fatal: !1,
                            error: t,
                            reason: t.message,
                            frag: r
                        }),
                        t
                    }
                    )).then((function(t) {
                        var e = performance.now();
                        a.trigger(S.FRAG_DECRYPTED, {
                            frag: r,
                            payload: t,
                            stats: {
                                tstart: s,
                                tdecrypt: e
                            }
                        })
                    }
                    )).catch((function(t) {
                        e.warn(t.name + ": " + t.message),
                        e.state = fi
                    }
                    ))
                }
            }
            ,
            r.doTick = function() {
                if (this.media) {
                    if (this.state === fi) {
                        var t = this.currentTrackId
                          , e = this.levels
                          , r = null == e ? void 0 : e[t];
                        if (!r || !e.length || !r.details)
                            return;
                        var i = this.config
                          , n = this.getLoadPosition()
                          , a = zr.bufferedInfo(this.tracksBuffered[this.currentTrackId] || [], n, i.maxBufferHole)
                          , s = a.end
                          , o = a.len
                          , l = this.getFwdBufferInfo(this.media, Ie)
                          , u = r.details;
                        if (o > this.getMaxBufferLength(null == l ? void 0 : l.len) + u.levelTargetDuration)
                            return;
                        var h = u.fragments
                          , d = h.length
                          , c = u.edge
                          , f = null
                          , g = this.fragPrevious;
                        if (s < c) {
                            var v = i.maxFragLookUpTolerance
                              , m = s > c - v ? 0 : v;
                            !(f = mr(g, h, Math.max(h[0].start, s), m)) && g && g.start < h[0].start && (f = h[0])
                        } else
                            f = h[d - 1];
                        if (!f)
                            return;
                        if ("initSegment" !== (f = this.mapToInitFragWhenRequired(f)).sn) {
                            var p = h[f.sn - u.startSN - 1];
                            p && p.cc === f.cc && this.fragmentTracker.getState(p) === Kr && (f = p)
                        }
                        this.fragmentTracker.getState(f) === Kr && this.loadFragment(f, r, s)
                    }
                } else
                    this.state = fi
            }
            ,
            r.getMaxBufferLength = function(e) {
                var r = t.prototype.getMaxBufferLength.call(this);
                return e ? Math.max(r, e) : r
            }
            ,
            r.loadFragment = function(e, r, i) {
                this.fragCurrent = e,
                "initSegment" === e.sn ? this._loadInitSegment(e, r) : (this.startFragRequested = !0,
                t.prototype.loadFragment.call(this, e, r, i))
            }
            ,
            s(e, [{
                key: "mediaBufferTimeRanges",
                get: function() {
                    return new jn(this.tracksBuffered[this.currentTrackId] || [])
                }
            }]),
            e
        }(Ri)
          , jn = function(t) {
            this.buffered = void 0;
            var e = function(e, r, i) {
                if ((r >>>= 0) > i - 1)
                    throw new DOMException("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + r + ") is greater than the maximum bound (" + i + ")");
                return t[r][e]
            };
            this.buffered = {
                get length() {
                    return t.length
                },
                end: function(r) {
                    return e("end", r, t.length)
                },
                start: function(r) {
                    return e("start", r, t.length)
                }
            }
        }
          , qn = function(t) {
            function e(e) {
                var r;
                return (r = t.call(this, e, "[subtitle-track-controller]") || this).media = null,
                r.tracks = [],
                r.groupIds = null,
                r.tracksInGroup = [],
                r.trackId = -1,
                r.currentTrack = null,
                r.selectDefaultTrack = !0,
                r.queuedDefaultTrack = -1,
                r.asyncPollTrackChange = function() {
                    return r.pollTrackChange(0)
                }
                ,
                r.useTextTrackPolling = !1,
                r.subtitlePollingInterval = -1,
                r._subtitleDisplay = !0,
                r.onTextTracksChanged = function() {
                    if (r.useTextTrackPolling || self.clearInterval(r.subtitlePollingInterval),
                    r.media && r.hls.config.renderTextTracksNatively) {
                        for (var t = null, e = Ue(r.media.textTracks), i = 0; i < e.length; i++)
                            if ("hidden" === e[i].mode)
                                t = e[i];
                            else if ("showing" === e[i].mode) {
                                t = e[i];
                                break
                            }
                        var n = r.findTrackForTextTrack(t);
                        r.subtitleTrack !== n && r.setSubtitleTrack(n)
                    }
                }
                ,
                r.registerListeners(),
                r
            }
            l(e, t);
            var r = e.prototype;
            return r.destroy = function() {
                this.unregisterListeners(),
                this.tracks.length = 0,
                this.tracksInGroup.length = 0,
                this.currentTrack = null,
                this.onTextTracksChanged = this.asyncPollTrackChange = null,
                t.prototype.destroy.call(this)
            }
            ,
            r.registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.on(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            r.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.off(S.LEVEL_SWITCHING, this.onLevelSwitching, this),
                t.off(S.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this),
                t.off(S.ERROR, this.onError, this)
            }
            ,
            r.onMediaAttached = function(t, e) {
                this.media = e.media,
                this.media && (this.queuedDefaultTrack > -1 && (this.subtitleTrack = this.queuedDefaultTrack,
                this.queuedDefaultTrack = -1),
                this.useTextTrackPolling = !(this.media.textTracks && "onchange"in this.media.textTracks),
                this.useTextTrackPolling ? this.pollTrackChange(500) : this.media.textTracks.addEventListener("change", this.asyncPollTrackChange))
            }
            ,
            r.pollTrackChange = function(t) {
                self.clearInterval(this.subtitlePollingInterval),
                this.subtitlePollingInterval = self.setInterval(this.onTextTracksChanged, t)
            }
            ,
            r.onMediaDetaching = function() {
                this.media && (self.clearInterval(this.subtitlePollingInterval),
                this.useTextTrackPolling || this.media.textTracks.removeEventListener("change", this.asyncPollTrackChange),
                this.trackId > -1 && (this.queuedDefaultTrack = this.trackId),
                Ue(this.media.textTracks).forEach((function(t) {
                    Oe(t)
                }
                )),
                this.subtitleTrack = -1,
                this.media = null)
            }
            ,
            r.onManifestLoading = function() {
                this.tracks = [],
                this.groupIds = null,
                this.tracksInGroup = [],
                this.trackId = -1,
                this.currentTrack = null,
                this.selectDefaultTrack = !0
            }
            ,
            r.onManifestParsed = function(t, e) {
                this.tracks = e.subtitleTracks
            }
            ,
            r.onSubtitleTrackLoaded = function(t, e) {
                var r = e.id
                  , i = e.groupId
                  , n = e.details
                  , a = this.tracksInGroup[r];
                if (a && a.groupId === i) {
                    var s = a.details;
                    a.details = e.details,
                    this.log("Subtitle track " + r + ' "' + a.name + '" lang:' + a.lang + " group:" + i + " loaded [" + n.startSN + "-" + n.endSN + "]"),
                    r === this.trackId && this.playlistLoaded(r, e, s)
                } else
                    this.warn("Subtitle track with id:" + r + " and group:" + i + " not found in active group " + (null == a ? void 0 : a.groupId))
            }
            ,
            r.onLevelLoading = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.onLevelSwitching = function(t, e) {
                this.switchLevel(e.level)
            }
            ,
            r.switchLevel = function(t) {
                var e = this.hls.levels[t];
                if (e) {
                    var r = e.subtitleGroups || null
                      , i = this.groupIds
                      , n = this.currentTrack;
                    if (!r || (null == i ? void 0 : i.length) !== (null == r ? void 0 : r.length) || null != r && r.some((function(t) {
                        return -1 === (null == i ? void 0 : i.indexOf(t))
                    }
                    ))) {
                        this.groupIds = r,
                        this.trackId = -1,
                        this.currentTrack = null;
                        var a = this.tracks.filter((function(t) {
                            return !r || -1 !== r.indexOf(t.groupId)
                        }
                        ));
                        if (a.length)
                            this.selectDefaultTrack && !a.some((function(t) {
                                return t.default
                            }
                            )) && (this.selectDefaultTrack = !1),
                            a.forEach((function(t, e) {
                                t.id = e
                            }
                            ));
                        else if (!n && !this.tracksInGroup.length)
                            return;
                        this.tracksInGroup = a;
                        var s = this.hls.config.subtitlePreference;
                        if (!n && s) {
                            this.selectDefaultTrack = !1;
                            var o = Mr(s, a);
                            if (o > -1)
                                n = a[o];
                            else {
                                var l = Mr(s, this.tracks);
                                n = this.tracks[l]
                            }
                        }
                        var u = this.findTrackId(n);
                        -1 === u && n && (u = this.findTrackId(null));
                        var h = {
                            subtitleTracks: a
                        };
                        this.log("Updating subtitle tracks, " + a.length + ' track(s) found in "' + (null == r ? void 0 : r.join(",")) + '" group-id'),
                        this.hls.trigger(S.SUBTITLE_TRACKS_UPDATED, h),
                        -1 !== u && -1 === this.trackId && this.setSubtitleTrack(u)
                    } else
                        this.shouldReloadPlaylist(n) && this.setSubtitleTrack(this.trackId)
                }
            }
            ,
            r.findTrackId = function(t) {
                for (var e = this.tracksInGroup, r = this.selectDefaultTrack, i = 0; i < e.length; i++) {
                    var n = e[i];
                    if ((!r || n.default) && (r || t) && (!t || Or(n, t)))
                        return i
                }
                if (t) {
                    for (var a = 0; a < e.length; a++) {
                        var s = e[a];
                        if (Kn(t.attrs, s.attrs, ["LANGUAGE", "ASSOC-LANGUAGE", "CHARACTERISTICS"]))
                            return a
                    }
                    for (var o = 0; o < e.length; o++) {
                        var l = e[o];
                        if (Kn(t.attrs, l.attrs, ["LANGUAGE"]))
                            return o
                    }
                }
                return -1
            }
            ,
            r.findTrackForTextTrack = function(t) {
                if (t)
                    for (var e = this.tracksInGroup, r = 0; r < e.length; r++)
                        if (Hn(e[r], t))
                            return r;
                return -1
            }
            ,
            r.onError = function(t, e) {
                !e.fatal && e.context && (e.context.type !== De || e.context.id !== this.trackId || this.groupIds && -1 === this.groupIds.indexOf(e.context.groupId) || this.checkRetry(e))
            }
            ,
            r.setSubtitleOption = function(t) {
                if (this.hls.config.subtitlePreference = t,
                t) {
                    var e = this.allSubtitleTracks;
                    if (this.selectDefaultTrack = !1,
                    e.length) {
                        var r = this.currentTrack;
                        if (r && Or(t, r))
                            return r;
                        var i = Mr(t, this.tracksInGroup);
                        if (i > -1) {
                            var n = this.tracksInGroup[i];
                            return this.setSubtitleTrack(i),
                            n
                        }
                        if (r)
                            return null;
                        var a = Mr(t, e);
                        if (a > -1)
                            return e[a]
                    }
                }
                return null
            }
            ,
            r.loadPlaylist = function(e) {
                t.prototype.loadPlaylist.call(this);
                var r = this.currentTrack;
                if (this.shouldLoadPlaylist(r) && r) {
                    var i = r.id
                      , n = r.groupId
                      , a = r.url;
                    if (e)
                        try {
                            a = e.addDirectives(a)
                        } catch (t) {
                            this.warn("Could not construct new URL with HLS Delivery Directives: " + t)
                        }
                    this.log("Loading subtitle playlist for id " + i),
                    this.hls.trigger(S.SUBTITLE_TRACK_LOADING, {
                        url: a,
                        id: i,
                        groupId: n,
                        deliveryDirectives: e || null
                    })
                }
            }
            ,
            r.toggleTrackModes = function() {
                var t = this.media;
                if (t) {
                    var e, r = Ue(t.textTracks), i = this.currentTrack;
                    if (i && ((e = r.filter((function(t) {
                        return Hn(i, t)
                    }
                    ))[0]) || this.warn('Unable to find subtitle TextTrack with name "' + i.name + '" and language "' + i.lang + '"')),
                    [].slice.call(r).forEach((function(t) {
                        "disabled" !== t.mode && t !== e && (t.mode = "disabled")
                    }
                    )),
                    e) {
                        var n = this.subtitleDisplay ? "showing" : "hidden";
                        e.mode !== n && (e.mode = n)
                    }
                }
            }
            ,
            r.setSubtitleTrack = function(t) {
                var e = this.tracksInGroup;
                if (this.media)
                    if (t < -1 || t >= e.length || !y(t))
                        this.warn("Invalid subtitle track id: " + t);
                    else {
                        this.clearTimer(),
                        this.selectDefaultTrack = !1;
                        var r = this.currentTrack
                          , i = e[t] || null;
                        if (this.trackId = t,
                        this.currentTrack = i,
                        this.toggleTrackModes(),
                        i) {
                            var n = !!i.details && !i.details.live;
                            if (t !== this.trackId || i !== r || !n) {
                                this.log("Switching to subtitle-track " + t + (i ? ' "' + i.name + '" lang:' + i.lang + " group:" + i.groupId : ""));
                                var a = i.id
                                  , s = i.groupId
                                  , o = void 0 === s ? "" : s
                                  , l = i.name
                                  , u = i.type
                                  , h = i.url;
                                this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, {
                                    id: a,
                                    groupId: o,
                                    name: l,
                                    type: u,
                                    url: h
                                });
                                var d = this.switchParams(i.url, null == r ? void 0 : r.details);
                                this.loadPlaylist(d)
                            }
                        } else
                            this.hls.trigger(S.SUBTITLE_TRACK_SWITCH, {
                                id: t
                            })
                    }
                else
                    this.queuedDefaultTrack = t
            }
            ,
            s(e, [{
                key: "subtitleDisplay",
                get: function() {
                    return this._subtitleDisplay
                },
                set: function(t) {
                    this._subtitleDisplay = t,
                    this.trackId > -1 && this.toggleTrackModes()
                }
            }, {
                key: "allSubtitleTracks",
                get: function() {
                    return this.tracks
                }
            }, {
                key: "subtitleTracks",
                get: function() {
                    return this.tracksInGroup
                }
            }, {
                key: "subtitleTrack",
                get: function() {
                    return this.trackId
                },
                set: function(t) {
                    this.selectDefaultTrack = !1,
                    this.setSubtitleTrack(t)
                }
            }]),
            e
        }(Dr)
          , Xn = function() {
            function t(t) {
                this.buffers = void 0,
                this.queues = {
                    video: [],
                    audio: [],
                    audiovideo: []
                },
                this.buffers = t
            }
            var e = t.prototype;
            return e.append = function(t, e, r) {
                var i = this.queues[e];
                i.push(t),
                1 !== i.length || r || this.executeNext(e)
            }
            ,
            e.insertAbort = function(t, e) {
                this.queues[e].unshift(t),
                this.executeNext(e)
            }
            ,
            e.appendBlocker = function(t) {
                var e, r = new Promise((function(t) {
                    e = t
                }
                )), i = {
                    execute: e,
                    onStart: function() {},
                    onComplete: function() {},
                    onError: function() {}
                };
                return this.append(i, t),
                r
            }
            ,
            e.executeNext = function(t) {
                var e = this.queues[t];
                if (e.length) {
                    var r = e[0];
                    try {
                        r.execute()
                    } catch (e) {
                        w.warn('[buffer-operation-queue]: Exception executing "' + t + '" SourceBuffer operation: ' + e),
                        r.onError(e);
                        var i = this.buffers[t];
                        null != i && i.updating || this.shiftAndExecuteNext(t)
                    }
                }
            }
            ,
            e.shiftAndExecuteNext = function(t) {
                this.queues[t].shift(),
                this.executeNext(t)
            }
            ,
            e.current = function(t) {
                return this.queues[t][0]
            }
            ,
            t
        }()
          , zn = /(avc[1234]|hvc1|hev1|dvh[1e]|vp09|av01)(?:\.[^.,]+)+/
          , Qn = function() {
            function t(t) {
                var e = this;
                this.details = null,
                this._objectUrl = null,
                this.operationQueue = void 0,
                this.listeners = void 0,
                this.hls = void 0,
                this.bufferCodecEventsExpected = 0,
                this._bufferCodecEventsTotal = 0,
                this.media = null,
                this.mediaSource = null,
                this.lastMpegAudioChunk = null,
                this.appendSource = void 0,
                this.appendErrors = {
                    audio: 0,
                    video: 0,
                    audiovideo: 0
                },
                this.tracks = {},
                this.pendingTracks = {},
                this.sourceBuffer = void 0,
                this.log = void 0,
                this.warn = void 0,
                this.error = void 0,
                this._onEndStreaming = function(t) {
                    e.hls && e.hls.pauseBuffering()
                }
                ,
                this._onStartStreaming = function(t) {
                    e.hls && e.hls.resumeBuffering()
                }
                ,
                this._onMediaSourceOpen = function() {
                    var t = e.media
                      , r = e.mediaSource;
                    e.log("Media source opened"),
                    t && (t.removeEventListener("emptied", e._onMediaEmptied),
                    e.updateMediaElementDuration(),
                    e.hls.trigger(S.MEDIA_ATTACHED, {
                        media: t,
                        mediaSource: r
                    })),
                    r && r.removeEventListener("sourceopen", e._onMediaSourceOpen),
                    e.checkPendingTracks()
                }
                ,
                this._onMediaSourceClose = function() {
                    e.log("Media source closed")
                }
                ,
                this._onMediaSourceEnded = function() {
                    e.log("Media source ended")
                }
                ,
                this._onMediaEmptied = function() {
                    var t = e.mediaSrc
                      , r = e._objectUrl;
                    t !== r && w.error("Media element src was set while attaching MediaSource (" + r + " > " + t + ")")
                }
                ,
                this.hls = t;
                var r = "[buffer-controller]";
                this.appendSource = t.config.preferManagedMediaSource,
                this.log = w.log.bind(w, r),
                this.warn = w.warn.bind(w, r),
                this.error = w.error.bind(w, r),
                this._initSourceBuffer(),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.hasSourceTypes = function() {
                return this.getSourceBufferTypes().length > 0 || Object.keys(this.pendingTracks).length > 0
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.details = null,
                this.lastMpegAudioChunk = null,
                this.hls = null
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.BUFFER_RESET, this.onBufferReset, this),
                t.on(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.BUFFER_EOS, this.onBufferEos, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.on(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.on(S.FRAG_PARSED, this.onFragParsed, this),
                t.on(S.FRAG_CHANGED, this.onFragChanged, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.BUFFER_RESET, this.onBufferReset, this),
                t.off(S.BUFFER_APPENDING, this.onBufferAppending, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.BUFFER_EOS, this.onBufferEos, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                t.off(S.LEVEL_UPDATED, this.onLevelUpdated, this),
                t.off(S.FRAG_PARSED, this.onFragParsed, this),
                t.off(S.FRAG_CHANGED, this.onFragChanged, this)
            }
            ,
            e._initSourceBuffer = function() {
                this.sourceBuffer = {},
                this.operationQueue = new Xn(this.sourceBuffer),
                this.listeners = {
                    audio: [],
                    video: [],
                    audiovideo: []
                },
                this.appendErrors = {
                    audio: 0,
                    video: 0,
                    audiovideo: 0
                },
                this.lastMpegAudioChunk = null
            }
            ,
            e.onManifestLoading = function() {
                this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = 0,
                this.details = null
            }
            ,
            e.onManifestParsed = function(t, e) {
                var r = 2;
                (e.audio && !e.video || !e.altAudio) && (r = 1),
                this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = r,
                this.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected")
            }
            ,
            e.onMediaAttaching = function(t, e) {
                var r = this.media = e.media
                  , i = te(this.appendSource);
                if (r && i) {
                    var n, a = this.mediaSource = new i;
                    this.log("created media source: " + (null == (n = a.constructor) ? void 0 : n.name)),
                    a.addEventListener("sourceopen", this._onMediaSourceOpen),
                    a.addEventListener("sourceended", this._onMediaSourceEnded),
                    a.addEventListener("sourceclose", this._onMediaSourceClose),
                    a.addEventListener("startstreaming", this._onStartStreaming),
                    a.addEventListener("endstreaming", this._onEndStreaming);
                    var s = this._objectUrl = self.URL.createObjectURL(a);
                    if (this.appendSource)
                        try {
                            r.removeAttribute("src");
                            var o = self.ManagedMediaSource;
                            r.disableRemotePlayback = r.disableRemotePlayback || o && a instanceof o,
                            Jn(r),
                            function(t, e) {
                                var r = self.document.createElement("source");
                                r.type = "video/mp4",
                                r.src = e,
                                t.appendChild(r)
                            }(r, s),
                            r.load()
                        } catch (t) {
                            r.src = s
                        }
                    else
                        r.src = s;
                    r.addEventListener("emptied", this._onMediaEmptied)
                }
            }
            ,
            e.onMediaDetaching = function() {
                var t = this.media
                  , e = this.mediaSource
                  , r = this._objectUrl;
                if (e) {
                    if (this.log("media source detaching"),
                    "open" === e.readyState)
                        try {
                            e.endOfStream()
                        } catch (t) {
                            this.warn("onMediaDetaching: " + t.message + " while calling endOfStream")
                        }
                    this.onBufferReset(),
                    e.removeEventListener("sourceopen", this._onMediaSourceOpen),
                    e.removeEventListener("sourceended", this._onMediaSourceEnded),
                    e.removeEventListener("sourceclose", this._onMediaSourceClose),
                    e.removeEventListener("startstreaming", this._onStartStreaming),
                    e.removeEventListener("endstreaming", this._onEndStreaming),
                    t && (t.removeEventListener("emptied", this._onMediaEmptied),
                    r && self.URL.revokeObjectURL(r),
                    this.mediaSrc === r ? (t.removeAttribute("src"),
                    this.appendSource && Jn(t),
                    t.load()) : this.warn("media|source.src was changed by a third party - skip cleanup")),
                    this.mediaSource = null,
                    this.media = null,
                    this._objectUrl = null,
                    this.bufferCodecEventsExpected = this._bufferCodecEventsTotal,
                    this.pendingTracks = {},
                    this.tracks = {}
                }
                this.hls.trigger(S.MEDIA_DETACHED, void 0)
            }
            ,
            e.onBufferReset = function() {
                var t = this;
                this.getSourceBufferTypes().forEach((function(e) {
                    t.resetBuffer(e)
                }
                )),
                this._initSourceBuffer()
            }
            ,
            e.resetBuffer = function(t) {
                var e = this.sourceBuffer[t];
                try {
                    var r;
                    e && (this.removeBufferListeners(t),
                    this.sourceBuffer[t] = void 0,
                    null != (r = this.mediaSource) && r.sourceBuffers.length && this.mediaSource.removeSourceBuffer(e))
                } catch (e) {
                    this.warn("onBufferReset " + t, e)
                }
            }
            ,
            e.onBufferCodecs = function(t, e) {
                var r = this
                  , i = this.getSourceBufferTypes().length
                  , n = Object.keys(e);
                if (n.forEach((function(t) {
                    if (i) {
                        var n = r.tracks[t];
                        if (n && "function" == typeof n.buffer.changeType) {
                            var a, s = e[t], o = s.id, l = s.codec, u = s.levelCodec, h = s.container, d = s.metadata, c = he(n.codec, n.levelCodec), f = null == c ? void 0 : c.replace(zn, "$1"), g = he(l, u), v = null == (a = g) ? void 0 : a.replace(zn, "$1");
                            if (g && f !== v) {
                                "audio" === t.slice(0, 5) && (g = ue(g, r.hls.config.preferManagedMediaSource));
                                var m = h + ";codecs=" + g;
                                r.appendChangeType(t, m),
                                r.log("switching codec " + c + " to " + g),
                                r.tracks[t] = {
                                    buffer: n.buffer,
                                    codec: l,
                                    container: h,
                                    levelCodec: u,
                                    metadata: d,
                                    id: o
                                }
                            }
                        }
                    } else
                        r.pendingTracks[t] = e[t]
                }
                )),
                !i) {
                    var a = Math.max(this.bufferCodecEventsExpected - 1, 0);
                    this.bufferCodecEventsExpected !== a && (this.log(a + " bufferCodec event(s) expected " + n.join(",")),
                    this.bufferCodecEventsExpected = a),
                    this.mediaSource && "open" === this.mediaSource.readyState && this.checkPendingTracks()
                }
            }
            ,
            e.appendChangeType = function(t, e) {
                var r = this
                  , i = this.operationQueue
                  , n = {
                    execute: function() {
                        var n = r.sourceBuffer[t];
                        n && (r.log("changing " + t + " sourceBuffer type to " + e),
                        n.changeType(e)),
                        i.shiftAndExecuteNext(t)
                    },
                    onStart: function() {},
                    onComplete: function() {},
                    onError: function(e) {
                        r.warn("Failed to change " + t + " SourceBuffer type", e)
                    }
                };
                i.append(n, t, !!this.pendingTracks[t])
            }
            ,
            e.onBufferAppending = function(t, e) {
                var r = this
                  , i = this.hls
                  , n = this.operationQueue
                  , a = this.tracks
                  , s = e.data
                  , o = e.type
                  , l = e.frag
                  , u = e.part
                  , h = e.chunkMeta
                  , d = h.buffering[o]
                  , c = self.performance.now();
                d.start = c;
                var f = l.stats.buffering
                  , g = u ? u.stats.buffering : null;
                0 === f.start && (f.start = c),
                g && 0 === g.start && (g.start = c);
                var v = a.audio
                  , m = !1;
                "audio" === o && "audio/mpeg" === (null == v ? void 0 : v.container) && (m = !this.lastMpegAudioChunk || 1 === h.id || this.lastMpegAudioChunk.sn !== h.sn,
                this.lastMpegAudioChunk = h);
                var p = l.start
                  , y = {
                    execute: function() {
                        if (d.executeStart = self.performance.now(),
                        m) {
                            var t = r.sourceBuffer[o];
                            if (t) {
                                var e = p - t.timestampOffset;
                                Math.abs(e) >= .1 && (r.log("Updating audio SourceBuffer timestampOffset to " + p + " (delta: " + e + ") sn: " + l.sn + ")"),
                                t.timestampOffset = p)
                            }
                        }
                        r.appendExecutor(s, o)
                    },
                    onStart: function() {},
                    onComplete: function() {
                        var t = self.performance.now();
                        d.executeEnd = d.end = t,
                        0 === f.first && (f.first = t),
                        g && 0 === g.first && (g.first = t);
                        var e = r.sourceBuffer
                          , i = {};
                        for (var n in e)
                            i[n] = zr.getBuffered(e[n]);
                        r.appendErrors[o] = 0,
                        "audio" === o || "video" === o ? r.appendErrors.audiovideo = 0 : (r.appendErrors.audio = 0,
                        r.appendErrors.video = 0),
                        r.hls.trigger(S.BUFFER_APPENDED, {
                            type: o,
                            frag: l,
                            part: u,
                            chunkMeta: h,
                            parent: l.type,
                            timeRanges: i
                        })
                    },
                    onError: function(t) {
                        var e = {
                            type: L.MEDIA_ERROR,
                            parent: l.type,
                            details: A.BUFFER_APPEND_ERROR,
                            sourceBufferName: o,
                            frag: l,
                            part: u,
                            chunkMeta: h,
                            error: t,
                            err: t,
                            fatal: !1
                        };
                        if (t.code === DOMException.QUOTA_EXCEEDED_ERR)
                            e.details = A.BUFFER_FULL_ERROR;
                        else {
                            var n = ++r.appendErrors[o];
                            e.details = A.BUFFER_APPEND_ERROR,
                            r.warn("Failed " + n + "/" + i.config.appendErrorMaxRetry + ' times to append segment in "' + o + '" sourceBuffer'),
                            n >= i.config.appendErrorMaxRetry && (e.fatal = !0)
                        }
                        i.trigger(S.ERROR, e)
                    }
                };
                n.append(y, o, !!this.pendingTracks[o])
            }
            ,
            e.onBufferFlushing = function(t, e) {
                var r = this
                  , i = this.operationQueue
                  , n = function(t) {
                    return {
                        execute: r.removeExecutor.bind(r, t, e.startOffset, e.endOffset),
                        onStart: function() {},
                        onComplete: function() {
                            r.hls.trigger(S.BUFFER_FLUSHED, {
                                type: t
                            })
                        },
                        onError: function(e) {
                            r.warn("Failed to remove from " + t + " SourceBuffer", e)
                        }
                    }
                };
                e.type ? i.append(n(e.type), e.type) : this.getSourceBufferTypes().forEach((function(t) {
                    i.append(n(t), t)
                }
                ))
            }
            ,
            e.onFragParsed = function(t, e) {
                var r = this
                  , i = e.frag
                  , n = e.part
                  , a = []
                  , s = n ? n.elementaryStreams : i.elementaryStreams;
                s[U] ? a.push("audiovideo") : (s[O] && a.push("audio"),
                s[N] && a.push("video")),
                0 === a.length && this.warn("Fragments must have at least one ElementaryStreamType set. type: " + i.type + " level: " + i.level + " sn: " + i.sn),
                this.blockBuffers((function() {
                    var t = self.performance.now();
                    i.stats.buffering.end = t,
                    n && (n.stats.buffering.end = t);
                    var e = n ? n.stats : i.stats;
                    r.hls.trigger(S.FRAG_BUFFERED, {
                        frag: i,
                        part: n,
                        stats: e,
                        id: i.type
                    })
                }
                ), a)
            }
            ,
            e.onFragChanged = function(t, e) {
                this.trimBuffers()
            }
            ,
            e.onBufferEos = function(t, e) {
                var r = this;
                this.getSourceBufferTypes().reduce((function(t, i) {
                    var n = r.sourceBuffer[i];
                    return !n || e.type && e.type !== i || (n.ending = !0,
                    n.ended || (n.ended = !0,
                    r.log(i + " sourceBuffer now EOS"))),
                    t && !(n && !n.ended)
                }
                ), !0) && (this.log("Queueing mediaSource.endOfStream()"),
                this.blockBuffers((function() {
                    r.getSourceBufferTypes().forEach((function(t) {
                        var e = r.sourceBuffer[t];
                        e && (e.ending = !1)
                    }
                    ));
                    var t = r.mediaSource;
                    t && "open" === t.readyState ? (r.log("Calling mediaSource.endOfStream()"),
                    t.endOfStream()) : t && r.log("Could not call mediaSource.endOfStream(). mediaSource.readyState: " + t.readyState)
                }
                )))
            }
            ,
            e.onLevelUpdated = function(t, e) {
                var r = e.details;
                r.fragments.length && (this.details = r,
                this.getSourceBufferTypes().length ? this.blockBuffers(this.updateMediaElementDuration.bind(this)) : this.updateMediaElementDuration())
            }
            ,
            e.trimBuffers = function() {
                var t = this.hls
                  , e = this.details
                  , r = this.media;
                if (r && null !== e && this.getSourceBufferTypes().length) {
                    var i = t.config
                      , n = r.currentTime
                      , a = e.levelTargetDuration
                      , s = e.live && null !== i.liveBackBufferLength ? i.liveBackBufferLength : i.backBufferLength;
                    if (y(s) && s > 0) {
                        var o = Math.max(s, a)
                          , l = Math.floor(n / a) * a - o;
                        this.flushBackBuffer(n, a, l)
                    }
                    if (y(i.frontBufferFlushThreshold) && i.frontBufferFlushThreshold > 0) {
                        var u = Math.max(i.maxBufferLength, i.frontBufferFlushThreshold)
                          , h = Math.max(u, a)
                          , d = Math.floor(n / a) * a + h;
                        this.flushFrontBuffer(n, a, d)
                    }
                }
            }
            ,
            e.flushBackBuffer = function(t, e, r) {
                var i = this
                  , n = this.details
                  , a = this.sourceBuffer;
                this.getSourceBufferTypes().forEach((function(s) {
                    var o = a[s];
                    if (o) {
                        var l = zr.getBuffered(o);
                        if (l.length > 0 && r > l.start(0)) {
                            if (i.hls.trigger(S.BACK_BUFFER_REACHED, {
                                bufferEnd: r
                            }),
                            null != n && n.live)
                                i.hls.trigger(S.LIVE_BACK_BUFFER_REACHED, {
                                    bufferEnd: r
                                });
                            else if (o.ended && l.end(l.length - 1) - t < 2 * e)
                                return void i.log("Cannot flush " + s + " back buffer while SourceBuffer is in ended state");
                            i.hls.trigger(S.BUFFER_FLUSHING, {
                                startOffset: 0,
                                endOffset: r,
                                type: s
                            })
                        }
                    }
                }
                ))
            }
            ,
            e.flushFrontBuffer = function(t, e, r) {
                var i = this
                  , n = this.sourceBuffer;
                this.getSourceBufferTypes().forEach((function(a) {
                    var s = n[a];
                    if (s) {
                        var o = zr.getBuffered(s)
                          , l = o.length;
                        if (l < 2)
                            return;
                        var u = o.start(l - 1)
                          , h = o.end(l - 1);
                        if (r > u || t >= u && t <= h)
                            return;
                        if (s.ended && t - h < 2 * e)
                            return void i.log("Cannot flush " + a + " front buffer while SourceBuffer is in ended state");
                        i.hls.trigger(S.BUFFER_FLUSHING, {
                            startOffset: u,
                            endOffset: 1 / 0,
                            type: a
                        })
                    }
                }
                ))
            }
            ,
            e.updateMediaElementDuration = function() {
                if (this.details && this.media && this.mediaSource && "open" === this.mediaSource.readyState) {
                    var t = this.details
                      , e = this.hls
                      , r = this.media
                      , i = this.mediaSource
                      , n = t.fragments[0].start + t.totalduration
                      , a = r.duration
                      , s = y(i.duration) ? i.duration : 0;
                    t.live && e.config.liveDurationInfinity ? (i.duration = 1 / 0,
                    this.updateSeekableRange(t)) : (n > s && n > a || !y(a)) && (this.log("Updating Media Source duration to " + n.toFixed(3)),
                    i.duration = n)
                }
            }
            ,
            e.updateSeekableRange = function(t) {
                var e = this.mediaSource
                  , r = t.fragments;
                if (r.length && t.live && null != e && e.setLiveSeekableRange) {
                    var i = Math.max(0, r[0].start)
                      , n = Math.max(i, i + t.totalduration);
                    this.log("Media Source duration is set to " + e.duration + ". Setting seekable range to " + i + "-" + n + "."),
                    e.setLiveSeekableRange(i, n)
                }
            }
            ,
            e.checkPendingTracks = function() {
                var t = this.bufferCodecEventsExpected
                  , e = this.operationQueue
                  , r = this.pendingTracks
                  , i = Object.keys(r).length;
                if (i && (!t || 2 === i || "audiovideo"in r)) {
                    this.createSourceBuffers(r),
                    this.pendingTracks = {};
                    var n = this.getSourceBufferTypes();
                    if (n.length)
                        this.hls.trigger(S.BUFFER_CREATED, {
                            tracks: this.tracks
                        }),
                        n.forEach((function(t) {
                            e.executeNext(t)
                        }
                        ));
                    else {
                        var a = new Error("could not create source buffer for media codec(s)");
                        this.hls.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.BUFFER_INCOMPATIBLE_CODECS_ERROR,
                            fatal: !0,
                            error: a,
                            reason: a.message
                        })
                    }
                }
            }
            ,
            e.createSourceBuffers = function(t) {
                var e = this
                  , r = this.sourceBuffer
                  , i = this.mediaSource;
                if (!i)
                    throw Error("createSourceBuffers called when mediaSource was null");
                var n = function(n) {
                    if (!r[n]) {
                        var a = t[n];
                        if (!a)
                            throw Error("source buffer exists for track " + n + ", however track does not");
                        var s = a.levelCodec || a.codec;
                        s && "audio" === n.slice(0, 5) && (s = ue(s, e.hls.config.preferManagedMediaSource));
                        var o = a.container + ";codecs=" + s;
                        e.log("creating sourceBuffer(" + o + ")");
                        try {
                            var l = r[n] = i.addSourceBuffer(o)
                              , u = n;
                            e.addBufferListener(u, "updatestart", e._onSBUpdateStart),
                            e.addBufferListener(u, "updateend", e._onSBUpdateEnd),
                            e.addBufferListener(u, "error", e._onSBUpdateError),
                            e.addBufferListener(u, "bufferedchange", (function(t, r) {
                                var i = r.removedRanges;
                                null != i && i.length && e.hls.trigger(S.BUFFER_FLUSHED, {
                                    type: n
                                })
                            }
                            )),
                            e.tracks[n] = {
                                buffer: l,
                                codec: s,
                                container: a.container,
                                levelCodec: a.levelCodec,
                                metadata: a.metadata,
                                id: a.id
                            }
                        } catch (t) {
                            e.error("error while trying to add sourceBuffer: " + t.message),
                            e.hls.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.BUFFER_ADD_CODEC_ERROR,
                                fatal: !1,
                                error: t,
                                sourceBufferName: n,
                                mimeType: o
                            })
                        }
                    }
                };
                for (var a in t)
                    n(a)
            }
            ,
            e._onSBUpdateStart = function(t) {
                this.operationQueue.current(t).onStart()
            }
            ,
            e._onSBUpdateEnd = function(t) {
                var e;
                if ("closed" !== (null == (e = this.mediaSource) ? void 0 : e.readyState)) {
                    var r = this.operationQueue;
                    r.current(t).onComplete(),
                    r.shiftAndExecuteNext(t)
                } else
                    this.resetBuffer(t)
            }
            ,
            e._onSBUpdateError = function(t, e) {
                var r, i = new Error(t + " SourceBuffer error. MediaSource readyState: " + (null == (r = this.mediaSource) ? void 0 : r.readyState));
                this.error("" + i, e),
                this.hls.trigger(S.ERROR, {
                    type: L.MEDIA_ERROR,
                    details: A.BUFFER_APPENDING_ERROR,
                    sourceBufferName: t,
                    error: i,
                    fatal: !1
                });
                var n = this.operationQueue.current(t);
                n && n.onError(i)
            }
            ,
            e.removeExecutor = function(t, e, r) {
                var i = this.media
                  , n = this.mediaSource
                  , a = this.operationQueue
                  , s = this.sourceBuffer[t];
                if (!i || !n || !s)
                    return this.warn("Attempting to remove from the " + t + " SourceBuffer, but it does not exist"),
                    void a.shiftAndExecuteNext(t);
                var o = y(i.duration) ? i.duration : 1 / 0
                  , l = y(n.duration) ? n.duration : 1 / 0
                  , u = Math.max(0, e)
                  , h = Math.min(r, o, l);
                h > u && (!s.ending || s.ended) ? (s.ended = !1,
                this.log("Removing [" + u + "," + h + "] from the " + t + " SourceBuffer"),
                s.remove(u, h)) : a.shiftAndExecuteNext(t)
            }
            ,
            e.appendExecutor = function(t, e) {
                var r = this.sourceBuffer[e];
                if (r)
                    r.ended = !1,
                    r.appendBuffer(t);
                else if (!this.pendingTracks[e])
                    throw new Error("Attempting to append to the " + e + " SourceBuffer, but it does not exist")
            }
            ,
            e.blockBuffers = function(t, e) {
                var r = this;
                if (void 0 === e && (e = this.getSourceBufferTypes()),
                !e.length)
                    return this.log("Blocking operation requested, but no SourceBuffers exist"),
                    void Promise.resolve().then(t);
                var i = this.operationQueue
                  , n = e.map((function(t) {
                    return i.appendBlocker(t)
                }
                ));
                Promise.all(n).then((function() {
                    t(),
                    e.forEach((function(t) {
                        var e = r.sourceBuffer[t];
                        null != e && e.updating || i.shiftAndExecuteNext(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.getSourceBufferTypes = function() {
                return Object.keys(this.sourceBuffer)
            }
            ,
            e.addBufferListener = function(t, e, r) {
                var i = this.sourceBuffer[t];
                if (i) {
                    var n = r.bind(this, t);
                    this.listeners[t].push({
                        event: e,
                        listener: n
                    }),
                    i.addEventListener(e, n)
                }
            }
            ,
            e.removeBufferListeners = function(t) {
                var e = this.sourceBuffer[t];
                e && this.listeners[t].forEach((function(t) {
                    e.removeEventListener(t.event, t.listener)
                }
                ))
            }
            ,
            s(t, [{
                key: "mediaSrc",
                get: function() {
                    var t, e = (null == (t = this.media) ? void 0 : t.firstChild) || this.media;
                    return null == e ? void 0 : e.src
                }
            }]),
            t
        }();
        function Jn(t) {
            var e = t.querySelectorAll("source");
            [].slice.call(e).forEach((function(e) {
                t.removeChild(e)
            }
            ))
        }
        var $n = {
            42: 225,
            92: 233,
            94: 237,
            95: 243,
            96: 250,
            123: 231,
            124: 247,
            125: 209,
            126: 241,
            127: 9608,
            128: 174,
            129: 176,
            130: 189,
            131: 191,
            132: 8482,
            133: 162,
            134: 163,
            135: 9834,
            136: 224,
            137: 32,
            138: 232,
            139: 226,
            140: 234,
            141: 238,
            142: 244,
            143: 251,
            144: 193,
            145: 201,
            146: 211,
            147: 218,
            148: 220,
            149: 252,
            150: 8216,
            151: 161,
            152: 42,
            153: 8217,
            154: 9473,
            155: 169,
            156: 8480,
            157: 8226,
            158: 8220,
            159: 8221,
            160: 192,
            161: 194,
            162: 199,
            163: 200,
            164: 202,
            165: 203,
            166: 235,
            167: 206,
            168: 207,
            169: 239,
            170: 212,
            171: 217,
            172: 249,
            173: 219,
            174: 171,
            175: 187,
            176: 195,
            177: 227,
            178: 205,
            179: 204,
            180: 236,
            181: 210,
            182: 242,
            183: 213,
            184: 245,
            185: 123,
            186: 125,
            187: 92,
            188: 94,
            189: 95,
            190: 124,
            191: 8764,
            192: 196,
            193: 228,
            194: 214,
            195: 246,
            196: 223,
            197: 165,
            198: 164,
            199: 9475,
            200: 197,
            201: 229,
            202: 216,
            203: 248,
            204: 9487,
            205: 9491,
            206: 9495,
            207: 9499
        }
          , Zn = function(t) {
            var e = t;
            return $n.hasOwnProperty(t) && (e = $n[t]),
            String.fromCharCode(e)
        }
          , ta = 15
          , ea = 100
          , ra = {
            17: 1,
            18: 3,
            21: 5,
            22: 7,
            23: 9,
            16: 11,
            19: 12,
            20: 14
        }
          , ia = {
            17: 2,
            18: 4,
            21: 6,
            22: 8,
            23: 10,
            19: 13,
            20: 15
        }
          , na = {
            25: 1,
            26: 3,
            29: 5,
            30: 7,
            31: 9,
            24: 11,
            27: 12,
            28: 14
        }
          , aa = {
            25: 2,
            26: 4,
            29: 6,
            30: 8,
            31: 10,
            27: 13,
            28: 15
        }
          , sa = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"]
          , oa = function() {
            function t() {
                this.time = null,
                this.verboseLevel = 0
            }
            return t.prototype.log = function(t, e) {
                if (this.verboseLevel >= t) {
                    var r = "function" == typeof e ? e() : e;
                    w.log(this.time + " [" + t + "] " + r)
                }
            }
            ,
            t
        }()
          , la = function(t) {
            for (var e = [], r = 0; r < t.length; r++)
                e.push(t[r].toString(16));
            return e
        }
          , ua = function() {
            function t() {
                this.foreground = "white",
                this.underline = !1,
                this.italics = !1,
                this.background = "black",
                this.flash = !1
            }
            var e = t.prototype;
            return e.reset = function() {
                this.foreground = "white",
                this.underline = !1,
                this.italics = !1,
                this.background = "black",
                this.flash = !1
            }
            ,
            e.setStyles = function(t) {
                for (var e = ["foreground", "underline", "italics", "background", "flash"], r = 0; r < e.length; r++) {
                    var i = e[r];
                    t.hasOwnProperty(i) && (this[i] = t[i])
                }
            }
            ,
            e.isDefault = function() {
                return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
            }
            ,
            e.equals = function(t) {
                return this.foreground === t.foreground && this.underline === t.underline && this.italics === t.italics && this.background === t.background && this.flash === t.flash
            }
            ,
            e.copy = function(t) {
                this.foreground = t.foreground,
                this.underline = t.underline,
                this.italics = t.italics,
                this.background = t.background,
                this.flash = t.flash
            }
            ,
            e.toString = function() {
                return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
            }
            ,
            t
        }()
          , ha = function() {
            function t() {
                this.uchar = " ",
                this.penState = new ua
            }
            var e = t.prototype;
            return e.reset = function() {
                this.uchar = " ",
                this.penState.reset()
            }
            ,
            e.setChar = function(t, e) {
                this.uchar = t,
                this.penState.copy(e)
            }
            ,
            e.setPenState = function(t) {
                this.penState.copy(t)
            }
            ,
            e.equals = function(t) {
                return this.uchar === t.uchar && this.penState.equals(t.penState)
            }
            ,
            e.copy = function(t) {
                this.uchar = t.uchar,
                this.penState.copy(t.penState)
            }
            ,
            e.isEmpty = function() {
                return " " === this.uchar && this.penState.isDefault()
            }
            ,
            t
        }()
          , da = function() {
            function t(t) {
                this.chars = [],
                this.pos = 0,
                this.currPenState = new ua,
                this.cueStartTime = null,
                this.logger = void 0;
                for (var e = 0; e < ea; e++)
                    this.chars.push(new ha);
                this.logger = t
            }
            var e = t.prototype;
            return e.equals = function(t) {
                for (var e = 0; e < ea; e++)
                    if (!this.chars[e].equals(t.chars[e]))
                        return !1;
                return !0
            }
            ,
            e.copy = function(t) {
                for (var e = 0; e < ea; e++)
                    this.chars[e].copy(t.chars[e])
            }
            ,
            e.isEmpty = function() {
                for (var t = !0, e = 0; e < ea; e++)
                    if (!this.chars[e].isEmpty()) {
                        t = !1;
                        break
                    }
                return t
            }
            ,
            e.setCursor = function(t) {
                this.pos !== t && (this.pos = t),
                this.pos < 0 ? (this.logger.log(3, "Negative cursor position " + this.pos),
                this.pos = 0) : this.pos > ea && (this.logger.log(3, "Too large cursor position " + this.pos),
                this.pos = ea)
            }
            ,
            e.moveCursor = function(t) {
                var e = this.pos + t;
                if (t > 1)
                    for (var r = this.pos + 1; r < e + 1; r++)
                        this.chars[r].setPenState(this.currPenState);
                this.setCursor(e)
            }
            ,
            e.backSpace = function() {
                this.moveCursor(-1),
                this.chars[this.pos].setChar(" ", this.currPenState)
            }
            ,
            e.insertChar = function(t) {
                var e = this;
                t >= 144 && this.backSpace();
                var r = Zn(t);
                this.pos >= ea ? this.logger.log(0, (function() {
                    return "Cannot insert " + t.toString(16) + " (" + r + ") at position " + e.pos + ". Skipping it!"
                }
                )) : (this.chars[this.pos].setChar(r, this.currPenState),
                this.moveCursor(1))
            }
            ,
            e.clearFromPos = function(t) {
                var e;
                for (e = t; e < ea; e++)
                    this.chars[e].reset()
            }
            ,
            e.clear = function() {
                this.clearFromPos(0),
                this.pos = 0,
                this.currPenState.reset()
            }
            ,
            e.clearToEndOfRow = function() {
                this.clearFromPos(this.pos)
            }
            ,
            e.getTextString = function() {
                for (var t = [], e = !0, r = 0; r < ea; r++) {
                    var i = this.chars[r].uchar;
                    " " !== i && (e = !1),
                    t.push(i)
                }
                return e ? "" : t.join("")
            }
            ,
            e.setPenStyles = function(t) {
                this.currPenState.setStyles(t),
                this.chars[this.pos].setPenState(this.currPenState)
            }
            ,
            t
        }()
          , ca = function() {
            function t(t) {
                this.rows = [],
                this.currRow = 14,
                this.nrRollUpRows = null,
                this.lastOutputScreen = null,
                this.logger = void 0;
                for (var e = 0; e < ta; e++)
                    this.rows.push(new da(t));
                this.logger = t
            }
            var e = t.prototype;
            return e.reset = function() {
                for (var t = 0; t < ta; t++)
                    this.rows[t].clear();
                this.currRow = 14
            }
            ,
            e.equals = function(t) {
                for (var e = !0, r = 0; r < ta; r++)
                    if (!this.rows[r].equals(t.rows[r])) {
                        e = !1;
                        break
                    }
                return e
            }
            ,
            e.copy = function(t) {
                for (var e = 0; e < ta; e++)
                    this.rows[e].copy(t.rows[e])
            }
            ,
            e.isEmpty = function() {
                for (var t = !0, e = 0; e < ta; e++)
                    if (!this.rows[e].isEmpty()) {
                        t = !1;
                        break
                    }
                return t
            }
            ,
            e.backSpace = function() {
                this.rows[this.currRow].backSpace()
            }
            ,
            e.clearToEndOfRow = function() {
                this.rows[this.currRow].clearToEndOfRow()
            }
            ,
            e.insertChar = function(t) {
                this.rows[this.currRow].insertChar(t)
            }
            ,
            e.setPen = function(t) {
                this.rows[this.currRow].setPenStyles(t)
            }
            ,
            e.moveCursor = function(t) {
                this.rows[this.currRow].moveCursor(t)
            }
            ,
            e.setCursor = function(t) {
                this.logger.log(2, "setCursor: " + t),
                this.rows[this.currRow].setCursor(t)
            }
            ,
            e.setPAC = function(t) {
                this.logger.log(2, (function() {
                    return "pacData = " + JSON.stringify(t)
                }
                ));
                var e = t.row - 1;
                if (this.nrRollUpRows && e < this.nrRollUpRows - 1 && (e = this.nrRollUpRows - 1),
                this.nrRollUpRows && this.currRow !== e) {
                    for (var r = 0; r < ta; r++)
                        this.rows[r].clear();
                    var i = this.currRow + 1 - this.nrRollUpRows
                      , n = this.lastOutputScreen;
                    if (n) {
                        var a = n.rows[i].cueStartTime
                          , s = this.logger.time;
                        if (null !== a && null !== s && a < s)
                            for (var o = 0; o < this.nrRollUpRows; o++)
                                this.rows[e - this.nrRollUpRows + o + 1].copy(n.rows[i + o])
                    }
                }
                this.currRow = e;
                var l = this.rows[this.currRow];
                if (null !== t.indent) {
                    var u = t.indent
                      , h = Math.max(u - 1, 0);
                    l.setCursor(t.indent),
                    t.color = l.chars[h].penState.foreground
                }
                var d = {
                    foreground: t.color,
                    underline: t.underline,
                    italics: t.italics,
                    background: "black",
                    flash: !1
                };
                this.setPen(d)
            }
            ,
            e.setBkgData = function(t) {
                this.logger.log(2, (function() {
                    return "bkgData = " + JSON.stringify(t)
                }
                )),
                this.backSpace(),
                this.setPen(t),
                this.insertChar(32)
            }
            ,
            e.setRollUpRows = function(t) {
                this.nrRollUpRows = t
            }
            ,
            e.rollUp = function() {
                var t = this;
                if (null !== this.nrRollUpRows) {
                    this.logger.log(1, (function() {
                        return t.getDisplayText()
                    }
                    ));
                    var e = this.currRow + 1 - this.nrRollUpRows
                      , r = this.rows.splice(e, 1)[0];
                    r.clear(),
                    this.rows.splice(this.currRow, 0, r),
                    this.logger.log(2, "Rolling up")
                } else
                    this.logger.log(3, "roll_up but nrRollUpRows not set yet")
            }
            ,
            e.getDisplayText = function(t) {
                t = t || !1;
                for (var e = [], r = "", i = -1, n = 0; n < ta; n++) {
                    var a = this.rows[n].getTextString();
                    a && (i = n + 1,
                    t ? e.push("Row " + i + ": '" + a + "'") : e.push(a.trim()))
                }
                return e.length > 0 && (r = t ? "[" + e.join(" | ") + "]" : e.join("\n")),
                r
            }
            ,
            e.getTextAndFormat = function() {
                return this.rows
            }
            ,
            t
        }()
          , fa = function() {
            function t(t, e, r) {
                this.chNr = void 0,
                this.outputFilter = void 0,
                this.mode = void 0,
                this.verbose = void 0,
                this.displayedMemory = void 0,
                this.nonDisplayedMemory = void 0,
                this.lastOutputScreen = void 0,
                this.currRollUpRow = void 0,
                this.writeScreen = void 0,
                this.cueStartTime = void 0,
                this.logger = void 0,
                this.chNr = t,
                this.outputFilter = e,
                this.mode = null,
                this.verbose = 0,
                this.displayedMemory = new ca(r),
                this.nonDisplayedMemory = new ca(r),
                this.lastOutputScreen = new ca(r),
                this.currRollUpRow = this.displayedMemory.rows[14],
                this.writeScreen = this.displayedMemory,
                this.mode = null,
                this.cueStartTime = null,
                this.logger = r
            }
            var e = t.prototype;
            return e.reset = function() {
                this.mode = null,
                this.displayedMemory.reset(),
                this.nonDisplayedMemory.reset(),
                this.lastOutputScreen.reset(),
                this.outputFilter.reset(),
                this.currRollUpRow = this.displayedMemory.rows[14],
                this.writeScreen = this.displayedMemory,
                this.mode = null,
                this.cueStartTime = null
            }
            ,
            e.getHandler = function() {
                return this.outputFilter
            }
            ,
            e.setHandler = function(t) {
                this.outputFilter = t
            }
            ,
            e.setPAC = function(t) {
                this.writeScreen.setPAC(t)
            }
            ,
            e.setBkgData = function(t) {
                this.writeScreen.setBkgData(t)
            }
            ,
            e.setMode = function(t) {
                t !== this.mode && (this.mode = t,
                this.logger.log(2, (function() {
                    return "MODE=" + t
                }
                )),
                "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory,
                this.writeScreen.reset()),
                "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null,
                this.nonDisplayedMemory.nrRollUpRows = null),
                this.mode = t)
            }
            ,
            e.insertChars = function(t) {
                for (var e = this, r = 0; r < t.length; r++)
                    this.writeScreen.insertChar(t[r]);
                var i = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                this.logger.log(2, (function() {
                    return i + ": " + e.writeScreen.getDisplayText(!0)
                }
                )),
                "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (this.logger.log(1, (function() {
                    return "DISPLAYED: " + e.displayedMemory.getDisplayText(!0)
                }
                )),
                this.outputDataUpdate())
            }
            ,
            e.ccRCL = function() {
                this.logger.log(2, "RCL - Resume Caption Loading"),
                this.setMode("MODE_POP-ON")
            }
            ,
            e.ccBS = function() {
                this.logger.log(2, "BS - BackSpace"),
                "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(),
                this.writeScreen === this.displayedMemory && this.outputDataUpdate())
            }
            ,
            e.ccAOF = function() {}
            ,
            e.ccAON = function() {}
            ,
            e.ccDER = function() {
                this.logger.log(2, "DER- Delete to End of Row"),
                this.writeScreen.clearToEndOfRow(),
                this.outputDataUpdate()
            }
            ,
            e.ccRU = function(t) {
                this.logger.log(2, "RU(" + t + ") - Roll Up"),
                this.writeScreen = this.displayedMemory,
                this.setMode("MODE_ROLL-UP"),
                this.writeScreen.setRollUpRows(t)
            }
            ,
            e.ccFON = function() {
                this.logger.log(2, "FON - Flash On"),
                this.writeScreen.setPen({
                    flash: !0
                })
            }
            ,
            e.ccRDC = function() {
                this.logger.log(2, "RDC - Resume Direct Captioning"),
                this.setMode("MODE_PAINT-ON")
            }
            ,
            e.ccTR = function() {
                this.logger.log(2, "TR"),
                this.setMode("MODE_TEXT")
            }
            ,
            e.ccRTD = function() {
                this.logger.log(2, "RTD"),
                this.setMode("MODE_TEXT")
            }
            ,
            e.ccEDM = function() {
                this.logger.log(2, "EDM - Erase Displayed Memory"),
                this.displayedMemory.reset(),
                this.outputDataUpdate(!0)
            }
            ,
            e.ccCR = function() {
                this.logger.log(2, "CR - Carriage Return"),
                this.writeScreen.rollUp(),
                this.outputDataUpdate(!0)
            }
            ,
            e.ccENM = function() {
                this.logger.log(2, "ENM - Erase Non-displayed Memory"),
                this.nonDisplayedMemory.reset()
            }
            ,
            e.ccEOC = function() {
                var t = this;
                if (this.logger.log(2, "EOC - End Of Caption"),
                "MODE_POP-ON" === this.mode) {
                    var e = this.displayedMemory;
                    this.displayedMemory = this.nonDisplayedMemory,
                    this.nonDisplayedMemory = e,
                    this.writeScreen = this.nonDisplayedMemory,
                    this.logger.log(1, (function() {
                        return "DISP: " + t.displayedMemory.getDisplayText()
                    }
                    ))
                }
                this.outputDataUpdate(!0)
            }
            ,
            e.ccTO = function(t) {
                this.logger.log(2, "TO(" + t + ") - Tab Offset"),
                this.writeScreen.moveCursor(t)
            }
            ,
            e.ccMIDROW = function(t) {
                var e = {
                    flash: !1
                };
                if (e.underline = t % 2 == 1,
                e.italics = t >= 46,
                e.italics)
                    e.foreground = "white";
                else {
                    var r = Math.floor(t / 2) - 16;
                    e.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][r]
                }
                this.logger.log(2, "MIDROW: " + JSON.stringify(e)),
                this.writeScreen.setPen(e)
            }
            ,
            e.outputDataUpdate = function(t) {
                void 0 === t && (t = !1);
                var e = this.logger.time;
                null !== e && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue(this.cueStartTime, e, this.lastOutputScreen),
                t && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(),
                this.cueStartTime = this.displayedMemory.isEmpty() ? null : e) : this.cueStartTime = e,
                this.lastOutputScreen.copy(this.displayedMemory))
            }
            ,
            e.cueSplitAtTime = function(t) {
                this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory),
                this.cueStartTime = t))
            }
            ,
            t
        }()
          , ga = function() {
            function t(t, e, r) {
                this.channels = void 0,
                this.currentChannel = 0,
                this.cmdHistory = {
                    a: null,
                    b: null
                },
                this.logger = void 0;
                var i = this.logger = new oa;
                this.channels = [null, new fa(t,e,i), new fa(t + 1,r,i)]
            }
            var e = t.prototype;
            return e.getHandler = function(t) {
                return this.channels[t].getHandler()
            }
            ,
            e.setHandler = function(t, e) {
                this.channels[t].setHandler(e)
            }
            ,
            e.addData = function(t, e) {
                var r, i, n, a = !1;
                this.logger.time = t;
                for (var s = 0; s < e.length; s += 2)
                    if (i = 127 & e[s],
                    n = 127 & e[s + 1],
                    0 !== i || 0 !== n) {
                        if (this.logger.log(3, "[" + la([e[s], e[s + 1]]) + "] -> (" + la([i, n]) + ")"),
                        (r = this.parseCmd(i, n)) || (r = this.parseMidrow(i, n)),
                        r || (r = this.parsePAC(i, n)),
                        r || (r = this.parseBackgroundAttributes(i, n)),
                        !r && (a = this.parseChars(i, n))) {
                            var o = this.currentChannel;
                            o && o > 0 ? this.channels[o].insertChars(a) : this.logger.log(2, "No channel found yet. TEXT-MODE?")
                        }
                        r || a || this.logger.log(2, "Couldn't parse cleaned data " + la([i, n]) + " orig: " + la([e[s], e[s + 1]]))
                    }
            }
            ,
            e.parseCmd = function(t, e) {
                var r = this.cmdHistory;
                if (!((20 === t || 28 === t || 21 === t || 29 === t) && e >= 32 && e <= 47 || (23 === t || 31 === t) && e >= 33 && e <= 35))
                    return !1;
                if (ma(t, e, r))
                    return va(null, null, r),
                    this.logger.log(3, "Repeated command (" + la([t, e]) + ") is dropped"),
                    !0;
                var i = 20 === t || 21 === t || 23 === t ? 1 : 2
                  , n = this.channels[i];
                return 20 === t || 21 === t || 28 === t || 29 === t ? 32 === e ? n.ccRCL() : 33 === e ? n.ccBS() : 34 === e ? n.ccAOF() : 35 === e ? n.ccAON() : 36 === e ? n.ccDER() : 37 === e ? n.ccRU(2) : 38 === e ? n.ccRU(3) : 39 === e ? n.ccRU(4) : 40 === e ? n.ccFON() : 41 === e ? n.ccRDC() : 42 === e ? n.ccTR() : 43 === e ? n.ccRTD() : 44 === e ? n.ccEDM() : 45 === e ? n.ccCR() : 46 === e ? n.ccENM() : 47 === e && n.ccEOC() : n.ccTO(e - 32),
                va(t, e, r),
                this.currentChannel = i,
                !0
            }
            ,
            e.parseMidrow = function(t, e) {
                var r = 0;
                if ((17 === t || 25 === t) && e >= 32 && e <= 47) {
                    if ((r = 17 === t ? 1 : 2) !== this.currentChannel)
                        return this.logger.log(0, "Mismatch channel in midrow parsing"),
                        !1;
                    var i = this.channels[r];
                    return !!i && (i.ccMIDROW(e),
                    this.logger.log(3, "MIDROW (" + la([t, e]) + ")"),
                    !0)
                }
                return !1
            }
            ,
            e.parsePAC = function(t, e) {
                var r, i = this.cmdHistory;
                if (!((t >= 17 && t <= 23 || t >= 25 && t <= 31) && e >= 64 && e <= 127 || (16 === t || 24 === t) && e >= 64 && e <= 95))
                    return !1;
                if (ma(t, e, i))
                    return va(null, null, i),
                    !0;
                var n = t <= 23 ? 1 : 2;
                r = e >= 64 && e <= 95 ? 1 === n ? ra[t] : na[t] : 1 === n ? ia[t] : aa[t];
                var a = this.channels[n];
                return !!a && (a.setPAC(this.interpretPAC(r, e)),
                va(t, e, i),
                this.currentChannel = n,
                !0)
            }
            ,
            e.interpretPAC = function(t, e) {
                var r, i = {
                    color: null,
                    italics: !1,
                    indent: null,
                    underline: !1,
                    row: t
                };
                return r = e > 95 ? e - 96 : e - 64,
                i.underline = 1 == (1 & r),
                r <= 13 ? i.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(r / 2)] : r <= 15 ? (i.italics = !0,
                i.color = "white") : i.indent = 4 * Math.floor((r - 16) / 2),
                i
            }
            ,
            e.parseChars = function(t, e) {
                var r, i, n = null, a = null;
                if (t >= 25 ? (r = 2,
                a = t - 8) : (r = 1,
                a = t),
                a >= 17 && a <= 19 ? (i = 17 === a ? e + 80 : 18 === a ? e + 112 : e + 144,
                this.logger.log(2, "Special char '" + Zn(i) + "' in channel " + r),
                n = [i]) : t >= 32 && t <= 127 && (n = 0 === e ? [t] : [t, e]),
                n) {
                    var s = la(n);
                    this.logger.log(3, "Char codes =  " + s.join(",")),
                    va(t, e, this.cmdHistory)
                }
                return n
            }
            ,
            e.parseBackgroundAttributes = function(t, e) {
                var r;
                if (!((16 === t || 24 === t) && e >= 32 && e <= 47 || (23 === t || 31 === t) && e >= 45 && e <= 47))
                    return !1;
                var i = {};
                16 === t || 24 === t ? (r = Math.floor((e - 32) / 2),
                i.background = sa[r],
                e % 2 == 1 && (i.background = i.background + "_semi")) : 45 === e ? i.background = "transparent" : (i.foreground = "black",
                47 === e && (i.underline = !0));
                var n = t <= 23 ? 1 : 2;
                return this.channels[n].setBkgData(i),
                va(t, e, this.cmdHistory),
                !0
            }
            ,
            e.reset = function() {
                for (var t = 0; t < Object.keys(this.channels).length; t++) {
                    var e = this.channels[t];
                    e && e.reset()
                }
                this.cmdHistory = {
                    a: null,
                    b: null
                }
            }
            ,
            e.cueSplitAtTime = function(t) {
                for (var e = 0; e < this.channels.length; e++) {
                    var r = this.channels[e];
                    r && r.cueSplitAtTime(t)
                }
            }
            ,
            t
        }();
        function va(t, e, r) {
            r.a = t,
            r.b = e
        }
        function ma(t, e, r) {
            return r.a === t && r.b === e
        }
        var pa = function() {
            function t(t, e) {
                this.timelineController = void 0,
                this.cueRanges = [],
                this.trackName = void 0,
                this.startTime = null,
                this.endTime = null,
                this.screen = null,
                this.timelineController = t,
                this.trackName = e
            }
            var e = t.prototype;
            return e.dispatchCue = function() {
                null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen, this.cueRanges),
                this.startTime = null)
            }
            ,
            e.newCue = function(t, e, r) {
                (null === this.startTime || this.startTime > t) && (this.startTime = t),
                this.endTime = e,
                this.screen = r,
                this.timelineController.createCaptionsTrack(this.trackName)
            }
            ,
            e.reset = function() {
                this.cueRanges = [],
                this.startTime = null
            }
            ,
            t
        }()
          , ya = function() {
            if (null != j && j.VTTCue)
                return self.VTTCue;
            var t = ["", "lr", "rl"]
              , e = ["start", "middle", "end", "left", "right"];
            function r(t, e) {
                if ("string" != typeof e)
                    return !1;
                if (!Array.isArray(t))
                    return !1;
                var r = e.toLowerCase();
                return !!~t.indexOf(r) && r
            }
            function i(t) {
                return r(e, t)
            }
            function n(t) {
                for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), i = 1; i < e; i++)
                    r[i - 1] = arguments[i];
                for (var n = 1; n < arguments.length; n++) {
                    var a = arguments[n];
                    for (var s in a)
                        t[s] = a[s]
                }
                return t
            }
            function a(e, a, s) {
                var o = this
                  , l = {
                    enumerable: !0
                };
                o.hasBeenReset = !1;
                var u = ""
                  , h = !1
                  , d = e
                  , c = a
                  , f = s
                  , g = null
                  , v = ""
                  , m = !0
                  , p = "auto"
                  , y = "start"
                  , E = 50
                  , T = "middle"
                  , S = 50
                  , L = "middle";
                Object.defineProperty(o, "id", n({}, l, {
                    get: function() {
                        return u
                    },
                    set: function(t) {
                        u = "" + t
                    }
                })),
                Object.defineProperty(o, "pauseOnExit", n({}, l, {
                    get: function() {
                        return h
                    },
                    set: function(t) {
                        h = !!t
                    }
                })),
                Object.defineProperty(o, "startTime", n({}, l, {
                    get: function() {
                        return d
                    },
                    set: function(t) {
                        if ("number" != typeof t)
                            throw new TypeError("Start time must be set to a number.");
                        d = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "endTime", n({}, l, {
                    get: function() {
                        return c
                    },
                    set: function(t) {
                        if ("number" != typeof t)
                            throw new TypeError("End time must be set to a number.");
                        c = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "text", n({}, l, {
                    get: function() {
                        return f
                    },
                    set: function(t) {
                        f = "" + t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "region", n({}, l, {
                    get: function() {
                        return g
                    },
                    set: function(t) {
                        g = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "vertical", n({}, l, {
                    get: function() {
                        return v
                    },
                    set: function(e) {
                        var i = function(e) {
                            return r(t, e)
                        }(e);
                        if (!1 === i)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        v = i,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "snapToLines", n({}, l, {
                    get: function() {
                        return m
                    },
                    set: function(t) {
                        m = !!t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "line", n({}, l, {
                    get: function() {
                        return p
                    },
                    set: function(t) {
                        if ("number" != typeof t && "auto" !== t)
                            throw new SyntaxError("An invalid number or illegal string was specified.");
                        p = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "lineAlign", n({}, l, {
                    get: function() {
                        return y
                    },
                    set: function(t) {
                        var e = i(t);
                        if (!e)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        y = e,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "position", n({}, l, {
                    get: function() {
                        return E
                    },
                    set: function(t) {
                        if (t < 0 || t > 100)
                            throw new Error("Position must be between 0 and 100.");
                        E = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "positionAlign", n({}, l, {
                    get: function() {
                        return T
                    },
                    set: function(t) {
                        var e = i(t);
                        if (!e)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        T = e,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "size", n({}, l, {
                    get: function() {
                        return S
                    },
                    set: function(t) {
                        if (t < 0 || t > 100)
                            throw new Error("Size must be between 0 and 100.");
                        S = t,
                        this.hasBeenReset = !0
                    }
                })),
                Object.defineProperty(o, "align", n({}, l, {
                    get: function() {
                        return L
                    },
                    set: function(t) {
                        var e = i(t);
                        if (!e)
                            throw new SyntaxError("An invalid or illegal string was specified.");
                        L = e,
                        this.hasBeenReset = !0
                    }
                })),
                o.displayState = void 0
            }
            return a.prototype.getCueAsHTML = function() {
                return self.WebVTT.convertCueToDOMTree(self, this.text)
            }
            ,
            a
        }()
          , Ea = function() {
            function t() {}
            return t.prototype.decode = function(t, e) {
                if (!t)
                    return "";
                if ("string" != typeof t)
                    throw new Error("Error - expected string data.");
                return decodeURIComponent(encodeURIComponent(t))
            }
            ,
            t
        }();
        function Ta(t) {
            function e(t, e, r, i) {
                return 3600 * (0 | t) + 60 * (0 | e) + (0 | r) + parseFloat(i || 0)
            }
            var r = t.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);
            return r ? parseFloat(r[2]) > 59 ? e(r[2], r[3], 0, r[4]) : e(r[1], r[2], r[3], r[4]) : null
        }
        var Sa = function() {
            function t() {
                this.values = Object.create(null)
            }
            var e = t.prototype;
            return e.set = function(t, e) {
                this.get(t) || "" === e || (this.values[t] = e)
            }
            ,
            e.get = function(t, e, r) {
                return r ? this.has(t) ? this.values[t] : e[r] : this.has(t) ? this.values[t] : e
            }
            ,
            e.has = function(t) {
                return t in this.values
            }
            ,
            e.alt = function(t, e, r) {
                for (var i = 0; i < r.length; ++i)
                    if (e === r[i]) {
                        this.set(t, e);
                        break
                    }
            }
            ,
            e.integer = function(t, e) {
                /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10))
            }
            ,
            e.percent = function(t, e) {
                if (/^([\d]{1,3})(\.[\d]*)?%$/.test(e)) {
                    var r = parseFloat(e);
                    if (r >= 0 && r <= 100)
                        return this.set(t, r),
                        !0
                }
                return !1
            }
            ,
            t
        }();
        function La(t, e, r, i) {
            var n = i ? t.split(i) : [t];
            for (var a in n)
                if ("string" == typeof n[a]) {
                    var s = n[a].split(r);
                    2 === s.length && e(s[0], s[1])
                }
        }
        var Aa = new ya(0,0,"")
          , Ra = "middle" === Aa.align ? "middle" : "center";
        function ka(t, e, r) {
            var i = t;
            function n() {
                var e = Ta(t);
                if (null === e)
                    throw new Error("Malformed timestamp: " + i);
                return t = t.replace(/^[^\sa-zA-Z-]+/, ""),
                e
            }
            function a() {
                t = t.replace(/^\s+/, "")
            }
            if (a(),
            e.startTime = n(),
            a(),
            "--\x3e" !== t.slice(0, 3))
                throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + i);
            t = t.slice(3),
            a(),
            e.endTime = n(),
            a(),
            function(t, e) {
                var i = new Sa;
                La(t, (function(t, e) {
                    var n;
                    switch (t) {
                    case "region":
                        for (var a = r.length - 1; a >= 0; a--)
                            if (r[a].id === e) {
                                i.set(t, r[a].region);
                                break
                            }
                        break;
                    case "vertical":
                        i.alt(t, e, ["rl", "lr"]);
                        break;
                    case "line":
                        n = e.split(","),
                        i.integer(t, n[0]),
                        i.percent(t, n[0]) && i.set("snapToLines", !1),
                        i.alt(t, n[0], ["auto"]),
                        2 === n.length && i.alt("lineAlign", n[1], ["start", Ra, "end"]);
                        break;
                    case "position":
                        n = e.split(","),
                        i.percent(t, n[0]),
                        2 === n.length && i.alt("positionAlign", n[1], ["start", Ra, "end", "line-left", "line-right", "auto"]);
                        break;
                    case "size":
                        i.percent(t, e);
                        break;
                    case "align":
                        i.alt(t, e, ["start", Ra, "end", "left", "right"])
                    }
                }
                ), /:/, /\s/),
                e.region = i.get("region", null),
                e.vertical = i.get("vertical", "");
                var n = i.get("line", "auto");
                "auto" === n && -1 === Aa.line && (n = -1),
                e.line = n,
                e.lineAlign = i.get("lineAlign", "start"),
                e.snapToLines = i.get("snapToLines", !0),
                e.size = i.get("size", 100),
                e.align = i.get("align", Ra);
                var a = i.get("position", "auto");
                "auto" === a && 50 === Aa.position && (a = "start" === e.align || "left" === e.align ? 0 : "end" === e.align || "right" === e.align ? 100 : 50),
                e.position = a
            }(t, e)
        }
        function ba(t) {
            return t.replace(/<br(?: \/)?>/gi, "\n")
        }
        var Da = function() {
            function t() {
                this.state = "INITIAL",
                this.buffer = "",
                this.decoder = new Ea,
                this.regionList = [],
                this.cue = null,
                this.oncue = void 0,
                this.onparsingerror = void 0,
                this.onflush = void 0
            }
            var e = t.prototype;
            return e.parse = function(t) {
                var e = this;
                function r() {
                    var t = e.buffer
                      , r = 0;
                    for (t = ba(t); r < t.length && "\r" !== t[r] && "\n" !== t[r]; )
                        ++r;
                    var i = t.slice(0, r);
                    return "\r" === t[r] && ++r,
                    "\n" === t[r] && ++r,
                    e.buffer = t.slice(r),
                    i
                }
                t && (e.buffer += e.decoder.decode(t, {
                    stream: !0
                }));
                try {
                    var i = "";
                    if ("INITIAL" === e.state) {
                        if (!/\r\n|\n/.test(e.buffer))
                            return this;
                        var n = (i = r()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/);
                        if (null == n || !n[0])
                            throw new Error("Malformed WebVTT signature.");
                        e.state = "HEADER"
                    }
                    for (var a = !1; e.buffer; ) {
                        if (!/\r\n|\n/.test(e.buffer))
                            return this;
                        switch (a ? a = !1 : i = r(),
                        e.state) {
                        case "HEADER":
                            /:/.test(i) ? La(i, (function(t, e) {}
                            ), /:/) : i || (e.state = "ID");
                            continue;
                        case "NOTE":
                            i || (e.state = "ID");
                            continue;
                        case "ID":
                            if (/^NOTE($|[ \t])/.test(i)) {
                                e.state = "NOTE";
                                break
                            }
                            if (!i)
                                continue;
                            if (e.cue = new ya(0,0,""),
                            e.state = "CUE",
                            -1 === i.indexOf("--\x3e")) {
                                e.cue.id = i;
                                continue
                            }
                        case "CUE":
                            if (!e.cue) {
                                e.state = "BADCUE";
                                continue
                            }
                            try {
                                ka(i, e.cue, e.regionList)
                            } catch (t) {
                                e.cue = null,
                                e.state = "BADCUE";
                                continue
                            }
                            e.state = "CUETEXT";
                            continue;
                        case "CUETEXT":
                            var s = -1 !== i.indexOf("--\x3e");
                            if (!i || s && (a = !0)) {
                                e.oncue && e.cue && e.oncue(e.cue),
                                e.cue = null,
                                e.state = "ID";
                                continue
                            }
                            if (null === e.cue)
                                continue;
                            e.cue.text && (e.cue.text += "\n"),
                            e.cue.text += i;
                            continue;
                        case "BADCUE":
                            i || (e.state = "ID")
                        }
                    }
                } catch (t) {
                    "CUETEXT" === e.state && e.cue && e.oncue && e.oncue(e.cue),
                    e.cue = null,
                    e.state = "INITIAL" === e.state ? "BADWEBVTT" : "BADCUE"
                }
                return this
            }
            ,
            e.flush = function() {
                var t = this;
                try {
                    if ((t.cue || "HEADER" === t.state) && (t.buffer += "\n\n",
                    t.parse()),
                    "INITIAL" === t.state || "BADWEBVTT" === t.state)
                        throw new Error("Malformed WebVTT signature.")
                } catch (e) {
                    t.onparsingerror && t.onparsingerror(e)
                }
                return t.onflush && t.onflush(),
                this
            }
            ,
            t
        }()
          , Ia = /\r\n|\n\r|\n|\r/g
          , wa = function(t, e, r) {
            return void 0 === r && (r = 0),
            t.slice(r, r + e.length) === e
        }
          , Ca = function(t) {
            for (var e = 5381, r = t.length; r; )
                e = 33 * e ^ t.charCodeAt(--r);
            return (e >>> 0).toString()
        };
        function _a(t, e, r) {
            return Ca(t.toString()) + Ca(e.toString()) + Ca(r)
        }
        function xa(t, e, r, i, n, a, s) {
            var o, l, u, h = new Da, d = Tt(new Uint8Array(t)).trim().replace(Ia, "\n").split("\n"), c = [], f = e ? (o = e.baseTime,
            void 0 === (l = e.timescale) && (l = 1),
            mn(o, vn, 1 / l)) : 0, g = "00:00.000", v = 0, m = 0, p = !0;
            h.oncue = function(t) {
                var a = r[i]
                  , s = r.ccOffset
                  , o = (v - f) / 9e4;
                if (null != a && a.new && (void 0 !== m ? s = r.ccOffset = a.start : function(t, e, r) {
                    var i = t[e]
                      , n = t[i.prevCC];
                    if (!n || !n.new && i.new)
                        return t.ccOffset = t.presentationOffset = i.start,
                        void (i.new = !1);
                    for (; null != (a = n) && a.new; ) {
                        var a;
                        t.ccOffset += i.start - n.start,
                        i.new = !1,
                        n = t[(i = n).prevCC]
                    }
                    t.presentationOffset = r
                }(r, i, o)),
                o) {
                    if (!e)
                        return void (u = new Error("Missing initPTS for VTT MPEGTS"));
                    s = o - r.presentationOffset
                }
                var l = t.endTime - t.startTime
                  , h = Sn(9e4 * (t.startTime + s - m), 9e4 * n) / 9e4;
                t.startTime = Math.max(h, 0),
                t.endTime = Math.max(h + l, 0);
                var d = t.text.trim();
                t.text = decodeURIComponent(encodeURIComponent(d)),
                t.id || (t.id = _a(t.startTime, t.endTime, d)),
                t.endTime > 0 && c.push(t)
            }
            ,
            h.onparsingerror = function(t) {
                u = t
            }
            ,
            h.onflush = function() {
                u ? s(u) : a(c)
            }
            ,
            d.forEach((function(t) {
                if (p) {
                    if (wa(t, "X-TIMESTAMP-MAP=")) {
                        p = !1,
                        t.slice(16).split(",").forEach((function(t) {
                            wa(t, "LOCAL:") ? g = t.slice(6) : wa(t, "MPEGTS:") && (v = parseInt(t.slice(7)))
                        }
                        ));
                        try {
                            m = function(t) {
                                var e = parseInt(t.slice(-3))
                                  , r = parseInt(t.slice(-6, -4))
                                  , i = parseInt(t.slice(-9, -7))
                                  , n = t.length > 9 ? parseInt(t.substring(0, t.indexOf(":"))) : 0;
                                if (!(y(e) && y(r) && y(i) && y(n)))
                                    throw Error("Malformed X-TIMESTAMP-MAP: Local:" + t);
                                return e += 1e3 * r,
                                (e += 6e4 * i) + 36e5 * n
                            }(g) / 1e3
                        } catch (t) {
                            u = t
                        }
                        return
                    }
                    "" === t && (p = !1)
                }
                h.parse(t + "\n")
            }
            )),
            h.flush()
        }
        var Pa = "stpp.ttml.im1t"
          , Fa = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/
          , Ma = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/
          , Oa = {
            left: "start",
            center: "center",
            right: "end",
            start: "start",
            end: "end"
        };
        function Na(t, e, r, i) {
            var n = _t(new Uint8Array(t), ["mdat"]);
            if (0 !== n.length) {
                var a, s, l, u, h = n.map((function(t) {
                    return Tt(t)
                }
                )), d = (a = e.baseTime,
                s = 1,
                void 0 === (l = e.timescale) && (l = 1),
                void 0 === u && (u = !1),
                mn(a, s, 1 / l, u));
                try {
                    h.forEach((function(t) {
                        return r(function(t, e) {
                            var r = (new DOMParser).parseFromString(t, "text/xml")
                              , i = r.getElementsByTagName("tt")[0];
                            if (!i)
                                throw new Error("Invalid ttml");
                            var n = {
                                frameRate: 30,
                                subFrameRate: 1,
                                frameRateMultiplier: 0,
                                tickRate: 0
                            }
                              , a = Object.keys(n).reduce((function(t, e) {
                                return t[e] = i.getAttribute("ttp:" + e) || n[e],
                                t
                            }
                            ), {})
                              , s = "preserve" !== i.getAttribute("xml:space")
                              , l = Ba(Ua(i, "styling", "style"))
                              , u = Ba(Ua(i, "layout", "region"))
                              , h = Ua(i, "body", "[begin]");
                            return [].map.call(h, (function(t) {
                                var r = Ga(t, s);
                                if (!r || !t.hasAttribute("begin"))
                                    return null;
                                var i = Va(t.getAttribute("begin"), a)
                                  , n = Va(t.getAttribute("dur"), a)
                                  , h = Va(t.getAttribute("end"), a);
                                if (null === i)
                                    throw Ha(t);
                                if (null === h) {
                                    if (null === n)
                                        throw Ha(t);
                                    h = i + n
                                }
                                var d = new ya(i - e,h - e,r);
                                d.id = _a(d.startTime, d.endTime, d.text);
                                var c = function(t, e, r) {
                                    var i = "http://www.w3.org/ns/ttml#styling"
                                      , n = null
                                      , a = ["displayAlign", "textAlign", "color", "backgroundColor", "fontSize", "fontFamily"]
                                      , s = null != t && t.hasAttribute("style") ? t.getAttribute("style") : null;
                                    return s && r.hasOwnProperty(s) && (n = r[s]),
                                    a.reduce((function(r, a) {
                                        var s = Ka(e, i, a) || Ka(t, i, a) || Ka(n, i, a);
                                        return s && (r[a] = s),
                                        r
                                    }
                                    ), {})
                                }(u[t.getAttribute("region")], l[t.getAttribute("style")], l)
                                  , f = c.textAlign;
                                if (f) {
                                    var g = Oa[f];
                                    g && (d.lineAlign = g),
                                    d.align = f
                                }
                                return o(d, c),
                                d
                            }
                            )).filter((function(t) {
                                return null !== t
                            }
                            ))
                        }(t, d))
                    }
                    ))
                } catch (t) {
                    i(t)
                }
            } else
                i(new Error("Could not parse IMSC1 mdat"))
        }
        function Ua(t, e, r) {
            var i = t.getElementsByTagName(e)[0];
            return i ? [].slice.call(i.querySelectorAll(r)) : []
        }
        function Ba(t) {
            return t.reduce((function(t, e) {
                var r = e.getAttribute("xml:id");
                return r && (t[r] = e),
                t
            }
            ), {})
        }
        function Ga(t, e) {
            return [].slice.call(t.childNodes).reduce((function(t, r, i) {
                var n;
                return "br" === r.nodeName && i ? t + "\n" : null != (n = r.childNodes) && n.length ? Ga(r, e) : e ? t + r.textContent.trim().replace(/\s+/g, " ") : t + r.textContent
            }
            ), "")
        }
        function Ka(t, e, r) {
            return t && t.hasAttributeNS(e, r) ? t.getAttributeNS(e, r) : null
        }
        function Ha(t) {
            return new Error("Could not parse ttml timestamp " + t)
        }
        function Va(t, e) {
            if (!t)
                return null;
            var r = Ta(t);
            return null === r && (Fa.test(t) ? r = function(t, e) {
                var r = Fa.exec(t)
                  , i = (0 | r[4]) + (0 | r[5]) / e.subFrameRate;
                return 3600 * (0 | r[1]) + 60 * (0 | r[2]) + (0 | r[3]) + i / e.frameRate
            }(t, e) : Ma.test(t) && (r = function(t, e) {
                var r = Ma.exec(t)
                  , i = Number(r[1]);
                switch (r[2]) {
                case "h":
                    return 3600 * i;
                case "m":
                    return 60 * i;
                case "ms":
                    return 1e3 * i;
                case "f":
                    return i / e.frameRate;
                case "t":
                    return i / e.tickRate
                }
                return i
            }(t, e))),
            r
        }
        var Ya = function() {
            function t(t) {
                this.hls = void 0,
                this.media = null,
                this.config = void 0,
                this.enabled = !0,
                this.Cues = void 0,
                this.textTracks = [],
                this.tracks = [],
                this.initPTS = [],
                this.unparsedVttFrags = [],
                this.captionsTracks = {},
                this.nonNativeCaptionsTracks = {},
                this.cea608Parser1 = void 0,
                this.cea608Parser2 = void 0,
                this.lastCc = -1,
                this.lastSn = -1,
                this.lastPartIndex = -1,
                this.prevCC = -1,
                this.vttCCs = {
                    ccOffset: 0,
                    presentationOffset: 0,
                    0: {
                        start: 0,
                        prevCC: -1,
                        new: !0
                    }
                },
                this.captionsProperties = void 0,
                this.hls = t,
                this.config = t.config,
                this.Cues = t.config.cueHandler,
                this.captionsProperties = {
                    textTrack1: {
                        label: this.config.captionsTextTrack1Label,
                        languageCode: this.config.captionsTextTrack1LanguageCode
                    },
                    textTrack2: {
                        label: this.config.captionsTextTrack2Label,
                        languageCode: this.config.captionsTextTrack2LanguageCode
                    },
                    textTrack3: {
                        label: this.config.captionsTextTrack3Label,
                        languageCode: this.config.captionsTextTrack3LanguageCode
                    },
                    textTrack4: {
                        label: this.config.captionsTextTrack4Label,
                        languageCode: this.config.captionsTextTrack4LanguageCode
                    }
                },
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.on(S.FRAG_LOADING, this.onFragLoading, this),
                t.on(S.FRAG_LOADED, this.onFragLoaded, this),
                t.on(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
                t.on(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
                t.on(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.on(S.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
                t.on(S.BUFFER_FLUSHING, this.onBufferFlushing, this)
            }
            var e = t.prototype;
            return e.destroy = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this),
                t.off(S.FRAG_LOADING, this.onFragLoading, this),
                t.off(S.FRAG_LOADED, this.onFragLoaded, this),
                t.off(S.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this),
                t.off(S.FRAG_DECRYPTED, this.onFragDecrypted, this),
                t.off(S.INIT_PTS_FOUND, this.onInitPtsFound, this),
                t.off(S.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this),
                t.off(S.BUFFER_FLUSHING, this.onBufferFlushing, this),
                this.hls = this.config = null,
                this.cea608Parser1 = this.cea608Parser2 = void 0
            }
            ,
            e.initCea608Parsers = function() {
                if (this.config.enableCEA708Captions && (!this.cea608Parser1 || !this.cea608Parser2)) {
                    var t = new pa(this,"textTrack1")
                      , e = new pa(this,"textTrack2")
                      , r = new pa(this,"textTrack3")
                      , i = new pa(this,"textTrack4");
                    this.cea608Parser1 = new ga(1,t,e),
                    this.cea608Parser2 = new ga(3,r,i)
                }
            }
            ,
            e.addCues = function(t, e, r, i, n) {
                for (var a, s, o, l, u = !1, h = n.length; h--; ) {
                    var d = n[h]
                      , c = (a = d[0],
                    s = d[1],
                    o = e,
                    l = r,
                    Math.min(s, l) - Math.max(a, o));
                    if (c >= 0 && (d[0] = Math.min(d[0], e),
                    d[1] = Math.max(d[1], r),
                    u = !0,
                    c / (r - e) > .5))
                        return
                }
                if (u || n.push([e, r]),
                this.config.renderTextTracksNatively) {
                    var f = this.captionsTracks[t];
                    this.Cues.newCue(f, e, r, i)
                } else {
                    var g = this.Cues.newCue(null, e, r, i);
                    this.hls.trigger(S.CUES_PARSED, {
                        type: "captions",
                        cues: g,
                        track: t
                    })
                }
            }
            ,
            e.onInitPtsFound = function(t, e) {
                var r = this
                  , i = e.frag
                  , n = e.id
                  , a = e.initPTS
                  , s = e.timescale
                  , o = this.unparsedVttFrags;
                "main" === n && (this.initPTS[i.cc] = {
                    baseTime: a,
                    timescale: s
                }),
                o.length && (this.unparsedVttFrags = [],
                o.forEach((function(t) {
                    r.onFragLoaded(S.FRAG_LOADED, t)
                }
                )))
            }
            ,
            e.getExistingTrack = function(t, e) {
                var r = this.media;
                if (r)
                    for (var i = 0; i < r.textTracks.length; i++) {
                        var n = r.textTracks[i];
                        if (ja(n, {
                            name: t,
                            lang: e,
                            attrs: {}
                        }))
                            return n
                    }
                return null
            }
            ,
            e.createCaptionsTrack = function(t) {
                this.config.renderTextTracksNatively ? this.createNativeTrack(t) : this.createNonNativeTrack(t)
            }
            ,
            e.createNativeTrack = function(t) {
                if (!this.captionsTracks[t]) {
                    var e = this.captionsProperties
                      , r = this.captionsTracks
                      , i = this.media
                      , n = e[t]
                      , a = n.label
                      , s = n.languageCode
                      , o = this.getExistingTrack(a, s);
                    if (o)
                        r[t] = o,
                        Oe(r[t]),
                        Fe(r[t], i);
                    else {
                        var l = this.createTextTrack("captions", a, s);
                        l && (l[t] = !0,
                        r[t] = l)
                    }
                }
            }
            ,
            e.createNonNativeTrack = function(t) {
                if (!this.nonNativeCaptionsTracks[t]) {
                    var e = this.captionsProperties[t];
                    if (e) {
                        var r = {
                            _id: t,
                            label: e.label,
                            kind: "captions",
                            default: !!e.media && !!e.media.default,
                            closedCaptions: e.media
                        };
                        this.nonNativeCaptionsTracks[t] = r,
                        this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, {
                            tracks: [r]
                        })
                    }
                }
            }
            ,
            e.createTextTrack = function(t, e, r) {
                var i = this.media;
                if (i)
                    return i.addTextTrack(t, e, r)
            }
            ,
            e.onMediaAttaching = function(t, e) {
                this.media = e.media,
                this._cleanTracks()
            }
            ,
            e.onMediaDetaching = function() {
                var t = this.captionsTracks;
                Object.keys(t).forEach((function(e) {
                    Oe(t[e]),
                    delete t[e]
                }
                )),
                this.nonNativeCaptionsTracks = {}
            }
            ,
            e.onManifestLoading = function() {
                this.lastCc = -1,
                this.lastSn = -1,
                this.lastPartIndex = -1,
                this.prevCC = -1,
                this.vttCCs = {
                    ccOffset: 0,
                    presentationOffset: 0,
                    0: {
                        start: 0,
                        prevCC: -1,
                        new: !0
                    }
                },
                this._cleanTracks(),
                this.tracks = [],
                this.captionsTracks = {},
                this.nonNativeCaptionsTracks = {},
                this.textTracks = [],
                this.unparsedVttFrags = [],
                this.initPTS = [],
                this.cea608Parser1 && this.cea608Parser2 && (this.cea608Parser1.reset(),
                this.cea608Parser2.reset())
            }
            ,
            e._cleanTracks = function() {
                var t = this.media;
                if (t) {
                    var e = t.textTracks;
                    if (e)
                        for (var r = 0; r < e.length; r++)
                            Oe(e[r])
                }
            }
            ,
            e.onSubtitleTracksUpdated = function(t, e) {
                var r = this
                  , i = e.subtitleTracks || []
                  , n = i.some((function(t) {
                    return t.textCodec === Pa
                }
                ));
                if (this.config.enableWebVTT || n && this.config.enableIMSC1) {
                    if (Gn(this.tracks, i))
                        return void (this.tracks = i);
                    if (this.textTracks = [],
                    this.tracks = i,
                    this.config.renderTextTracksNatively) {
                        var a = this.media
                          , s = a ? Ue(a.textTracks) : null;
                        if (this.tracks.forEach((function(t, e) {
                            var i;
                            if (s) {
                                for (var n = null, a = 0; a < s.length; a++)
                                    if (s[a] && ja(s[a], t)) {
                                        n = s[a],
                                        s[a] = null;
                                        break
                                    }
                                n && (i = n)
                            }
                            if (i)
                                Oe(i);
                            else {
                                var o = Wa(t);
                                (i = r.createTextTrack(o, t.name, t.lang)) && (i.mode = "disabled")
                            }
                            i && r.textTracks.push(i)
                        }
                        )),
                        null != s && s.length) {
                            var o = s.filter((function(t) {
                                return null !== t
                            }
                            )).map((function(t) {
                                return t.label
                            }
                            ));
                            o.length && w.warn("Media element contains unused subtitle tracks: " + o.join(", ") + ". Replace media element for each source to clear TextTracks and captions menu.")
                        }
                    } else if (this.tracks.length) {
                        var l = this.tracks.map((function(t) {
                            return {
                                label: t.name,
                                kind: t.type.toLowerCase(),
                                default: t.default,
                                subtitleTrack: t
                            }
                        }
                        ));
                        this.hls.trigger(S.NON_NATIVE_TEXT_TRACKS_FOUND, {
                            tracks: l
                        })
                    }
                }
            }
            ,
            e.onManifestLoaded = function(t, e) {
                var r = this;
                this.config.enableCEA708Captions && e.captions && e.captions.forEach((function(t) {
                    var e = /(?:CC|SERVICE)([1-4])/.exec(t.instreamId);
                    if (e) {
                        var i = "textTrack" + e[1]
                          , n = r.captionsProperties[i];
                        n && (n.label = t.name,
                        t.lang && (n.languageCode = t.lang),
                        n.media = t)
                    }
                }
                ))
            }
            ,
            e.closedCaptionsForLevel = function(t) {
                var e = this.hls.levels[t.level];
                return null == e ? void 0 : e.attrs["CLOSED-CAPTIONS"]
            }
            ,
            e.onFragLoading = function(t, e) {
                this.initCea608Parsers();
                var r = this.cea608Parser1
                  , i = this.cea608Parser2
                  , n = this.lastCc
                  , a = this.lastSn
                  , s = this.lastPartIndex;
                if (this.enabled && r && i && e.frag.type === Ie) {
                    var o, l, u = e.frag, h = u.cc, d = u.sn, c = null != (o = null == e || null == (l = e.part) ? void 0 : l.index) ? o : -1;
                    d === a + 1 || d === a && c === s + 1 || h === n || (r.reset(),
                    i.reset()),
                    this.lastCc = h,
                    this.lastSn = d,
                    this.lastPartIndex = c
                }
            }
            ,
            e.onFragLoaded = function(t, e) {
                var r = e.frag
                  , i = e.payload;
                if (r.type === Ce)
                    if (i.byteLength) {
                        var n = r.decryptdata
                          , a = "stats"in e;
                        if (null == n || !n.encrypted || a) {
                            var s = this.tracks[r.level]
                              , o = this.vttCCs;
                            o[r.cc] || (o[r.cc] = {
                                start: r.start,
                                prevCC: this.prevCC,
                                new: !0
                            },
                            this.prevCC = r.cc),
                            s && s.textCodec === Pa ? this._parseIMSC1(r, i) : this._parseVTTs(e)
                        }
                    } else
                        this.hls.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: r,
                            error: new Error("Empty subtitle payload")
                        })
            }
            ,
            e._parseIMSC1 = function(t, e) {
                var r = this
                  , i = this.hls;
                Na(e, this.initPTS[t.cc], (function(e) {
                    r._appendCues(e, t.level),
                    i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                        success: !0,
                        frag: t
                    })
                }
                ), (function(e) {
                    w.log("Failed to parse IMSC1: " + e),
                    i.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                        success: !1,
                        frag: t,
                        error: e
                    })
                }
                ))
            }
            ,
            e._parseVTTs = function(t) {
                var e, r = this, i = t.frag, n = t.payload, a = this.initPTS, s = this.unparsedVttFrags, o = a.length - 1;
                if (a[i.cc] || -1 !== o) {
                    var l = this.hls;
                    xa(null != (e = i.initSegment) && e.data ? Gt(i.initSegment.data, new Uint8Array(n)) : n, this.initPTS[i.cc], this.vttCCs, i.cc, i.start, (function(t) {
                        r._appendCues(t, i.level),
                        l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                            success: !0,
                            frag: i
                        })
                    }
                    ), (function(e) {
                        var a = "Missing initPTS for VTT MPEGTS" === e.message;
                        a ? s.push(t) : r._fallbackToIMSC1(i, n),
                        w.log("Failed to parse VTT cue: " + e),
                        a && o > i.cc || l.trigger(S.SUBTITLE_FRAG_PROCESSED, {
                            success: !1,
                            frag: i,
                            error: e
                        })
                    }
                    ))
                } else
                    s.push(t)
            }
            ,
            e._fallbackToIMSC1 = function(t, e) {
                var r = this
                  , i = this.tracks[t.level];
                i.textCodec || Na(e, this.initPTS[t.cc], (function() {
                    i.textCodec = Pa,
                    r._parseIMSC1(t, e)
                }
                ), (function() {
                    i.textCodec = "wvtt"
                }
                ))
            }
            ,
            e._appendCues = function(t, e) {
                var r = this.hls;
                if (this.config.renderTextTracksNatively) {
                    var i = this.textTracks[e];
                    if (!i || "disabled" === i.mode)
                        return;
                    t.forEach((function(t) {
                        return Me(i, t)
                    }
                    ))
                } else {
                    var n = this.tracks[e];
                    if (!n)
                        return;
                    var a = n.default ? "default" : "subtitles" + e;
                    r.trigger(S.CUES_PARSED, {
                        type: "subtitles",
                        cues: t,
                        track: a
                    })
                }
            }
            ,
            e.onFragDecrypted = function(t, e) {
                e.frag.type === Ce && this.onFragLoaded(S.FRAG_LOADED, e)
            }
            ,
            e.onSubtitleTracksCleared = function() {
                this.tracks = [],
                this.captionsTracks = {}
            }
            ,
            e.onFragParsingUserdata = function(t, e) {
                this.initCea608Parsers();
                var r = this.cea608Parser1
                  , i = this.cea608Parser2;
                if (this.enabled && r && i) {
                    var n = e.frag
                      , a = e.samples;
                    if (n.type !== Ie || "NONE" !== this.closedCaptionsForLevel(n))
                        for (var s = 0; s < a.length; s++) {
                            var o = a[s].bytes;
                            if (o) {
                                var l = this.extractCea608Data(o);
                                r.addData(a[s].pts, l[0]),
                                i.addData(a[s].pts, l[1])
                            }
                        }
                }
            }
            ,
            e.onBufferFlushing = function(t, e) {
                var r = e.startOffset
                  , i = e.endOffset
                  , n = e.endOffsetSubtitles
                  , a = e.type
                  , s = this.media;
                if (s && !(s.currentTime < i)) {
                    if (!a || "video" === a) {
                        var o = this.captionsTracks;
                        Object.keys(o).forEach((function(t) {
                            return Ne(o[t], r, i)
                        }
                        ))
                    }
                    if (this.config.renderTextTracksNatively && 0 === r && void 0 !== n) {
                        var l = this.textTracks;
                        Object.keys(l).forEach((function(t) {
                            return Ne(l[t], r, n)
                        }
                        ))
                    }
                }
            }
            ,
            e.extractCea608Data = function(t) {
                for (var e = [[], []], r = 31 & t[0], i = 2, n = 0; n < r; n++) {
                    var a = t[i++]
                      , s = 127 & t[i++]
                      , o = 127 & t[i++];
                    if ((0 !== s || 0 !== o) && 0 != (4 & a)) {
                        var l = 3 & a;
                        0 !== l && 1 !== l || (e[l].push(s),
                        e[l].push(o))
                    }
                }
                return e
            }
            ,
            t
        }();
        function Wa(t) {
            return t.characteristics && /transcribes-spoken-dialog/gi.test(t.characteristics) && /describes-music-and-sound/gi.test(t.characteristics) ? "captions" : "subtitles"
        }
        function ja(t, e) {
            return !!t && t.kind === Wa(e) && Hn(e, t)
        }
        var qa = function() {
            function t(t) {
                this.hls = void 0,
                this.autoLevelCapping = void 0,
                this.firstLevel = void 0,
                this.media = void 0,
                this.restrictedLevels = void 0,
                this.timer = void 0,
                this.clientRect = void 0,
                this.streamController = void 0,
                this.hls = t,
                this.autoLevelCapping = Number.POSITIVE_INFINITY,
                this.firstLevel = -1,
                this.media = null,
                this.restrictedLevels = [],
                this.timer = void 0,
                this.clientRect = null,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.setStreamController = function(t) {
                this.streamController = t
            }
            ,
            e.destroy = function() {
                this.hls && this.unregisterListener(),
                this.timer && this.stopCapping(),
                this.media = null,
                this.clientRect = null,
                this.hls = this.streamController = null
            }
            ,
            e.registerListeners = function() {
                var t = this.hls;
                t.on(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this)
            }
            ,
            e.unregisterListener = function() {
                var t = this.hls;
                t.off(S.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this),
                t.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.BUFFER_CODECS, this.onBufferCodecs, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this)
            }
            ,
            e.onFpsDropLevelCapping = function(t, e) {
                var r = this.hls.levels[e.droppedLevel];
                this.isLevelAllowed(r) && this.restrictedLevels.push({
                    bitrate: r.bitrate,
                    height: r.height,
                    width: r.width
                })
            }
            ,
            e.onMediaAttaching = function(t, e) {
                this.media = e.media instanceof HTMLVideoElement ? e.media : null,
                this.clientRect = null,
                this.timer && this.hls.levels.length && this.detectPlayerSize()
            }
            ,
            e.onManifestParsed = function(t, e) {
                var r = this.hls;
                this.restrictedLevels = [],
                this.firstLevel = e.firstLevel,
                r.config.capLevelToPlayerSize && e.video && this.startCapping()
            }
            ,
            e.onLevelsUpdated = function(t, e) {
                this.timer && y(this.autoLevelCapping) && this.detectPlayerSize()
            }
            ,
            e.onBufferCodecs = function(t, e) {
                this.hls.config.capLevelToPlayerSize && e.video && this.startCapping()
            }
            ,
            e.onMediaDetaching = function() {
                this.stopCapping()
            }
            ,
            e.detectPlayerSize = function() {
                if (this.media) {
                    if (this.mediaHeight <= 0 || this.mediaWidth <= 0)
                        return void (this.clientRect = null);
                    var t = this.hls.levels;
                    if (t.length) {
                        var e = this.hls
                          , r = this.getMaxLevel(t.length - 1);
                        r !== this.autoLevelCapping && w.log("Setting autoLevelCapping to " + r + ": " + t[r].height + "p@" + t[r].bitrate + " for media " + this.mediaWidth + "x" + this.mediaHeight),
                        e.autoLevelCapping = r,
                        e.autoLevelCapping > this.autoLevelCapping && this.streamController && this.streamController.nextLevelSwitch(),
                        this.autoLevelCapping = e.autoLevelCapping
                    }
                }
            }
            ,
            e.getMaxLevel = function(e) {
                var r = this
                  , i = this.hls.levels;
                if (!i.length)
                    return -1;
                var n = i.filter((function(t, i) {
                    return r.isLevelAllowed(t) && i <= e
                }
                ));
                return this.clientRect = null,
                t.getMaxLevelByMediaSize(n, this.mediaWidth, this.mediaHeight)
            }
            ,
            e.startCapping = function() {
                this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY,
                self.clearInterval(this.timer),
                this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1e3),
                this.detectPlayerSize())
            }
            ,
            e.stopCapping = function() {
                this.restrictedLevels = [],
                this.firstLevel = -1,
                this.autoLevelCapping = Number.POSITIVE_INFINITY,
                this.timer && (self.clearInterval(this.timer),
                this.timer = void 0)
            }
            ,
            e.getDimensions = function() {
                if (this.clientRect)
                    return this.clientRect;
                var t = this.media
                  , e = {
                    width: 0,
                    height: 0
                };
                if (t) {
                    var r = t.getBoundingClientRect();
                    e.width = r.width,
                    e.height = r.height,
                    e.width || e.height || (e.width = r.right - r.left || t.width || 0,
                    e.height = r.bottom - r.top || t.height || 0)
                }
                return this.clientRect = e,
                e
            }
            ,
            e.isLevelAllowed = function(t) {
                return !this.restrictedLevels.some((function(e) {
                    return t.bitrate === e.bitrate && t.width === e.width && t.height === e.height
                }
                ))
            }
            ,
            t.getMaxLevelByMediaSize = function(t, e, r) {
                if (null == t || !t.length)
                    return -1;
                for (var i, n, a = t.length - 1, s = Math.max(e, r), o = 0; o < t.length; o += 1) {
                    var l = t[o];
                    if ((l.width >= s || l.height >= s) && (i = l,
                    !(n = t[o + 1]) || i.width !== n.width || i.height !== n.height)) {
                        a = o;
                        break
                    }
                }
                return a
            }
            ,
            s(t, [{
                key: "mediaWidth",
                get: function() {
                    return this.getDimensions().width * this.contentScaleFactor
                }
            }, {
                key: "mediaHeight",
                get: function() {
                    return this.getDimensions().height * this.contentScaleFactor
                }
            }, {
                key: "contentScaleFactor",
                get: function() {
                    var t = 1;
                    if (!this.hls.config.ignoreDevicePixelRatio)
                        try {
                            t = self.devicePixelRatio
                        } catch (t) {}
                    return t
                }
            }]),
            t
        }()
          , Xa = function() {
            function t(t) {
                this.hls = void 0,
                this.isVideoPlaybackQualityAvailable = !1,
                this.timer = void 0,
                this.media = null,
                this.lastTime = void 0,
                this.lastDroppedFrames = 0,
                this.lastDecodedFrames = 0,
                this.streamController = void 0,
                this.hls = t,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.setStreamController = function(t) {
                this.streamController = t
            }
            ,
            e.registerListeners = function() {
                this.hls.on(S.MEDIA_ATTACHING, this.onMediaAttaching, this)
            }
            ,
            e.unregisterListeners = function() {
                this.hls.off(S.MEDIA_ATTACHING, this.onMediaAttaching, this)
            }
            ,
            e.destroy = function() {
                this.timer && clearInterval(this.timer),
                this.unregisterListeners(),
                this.isVideoPlaybackQualityAvailable = !1,
                this.media = null
            }
            ,
            e.onMediaAttaching = function(t, e) {
                var r = this.hls.config;
                if (r.capLevelOnFPSDrop) {
                    var i = e.media instanceof self.HTMLVideoElement ? e.media : null;
                    this.media = i,
                    i && "function" == typeof i.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0),
                    self.clearInterval(this.timer),
                    this.timer = self.setInterval(this.checkFPSInterval.bind(this), r.fpsDroppedMonitoringPeriod)
                }
            }
            ,
            e.checkFPS = function(t, e, r) {
                var i = performance.now();
                if (e) {
                    if (this.lastTime) {
                        var n = i - this.lastTime
                          , a = r - this.lastDroppedFrames
                          , s = e - this.lastDecodedFrames
                          , o = 1e3 * a / n
                          , l = this.hls;
                        if (l.trigger(S.FPS_DROP, {
                            currentDropped: a,
                            currentDecoded: s,
                            totalDroppedFrames: r
                        }),
                        o > 0 && a > l.config.fpsDroppedMonitoringThreshold * s) {
                            var u = l.currentLevel;
                            w.warn("drop FPS ratio greater than max allowed value for currentLevel: " + u),
                            u > 0 && (-1 === l.autoLevelCapping || l.autoLevelCapping >= u) && (u -= 1,
                            l.trigger(S.FPS_DROP_LEVEL_CAPPING, {
                                level: u,
                                droppedLevel: l.currentLevel
                            }),
                            l.autoLevelCapping = u,
                            this.streamController.nextLevelSwitch())
                        }
                    }
                    this.lastTime = i,
                    this.lastDroppedFrames = r,
                    this.lastDecodedFrames = e
                }
            }
            ,
            e.checkFPSInterval = function() {
                var t = this.media;
                if (t)
                    if (this.isVideoPlaybackQualityAvailable) {
                        var e = t.getVideoPlaybackQuality();
                        this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames)
                    } else
                        this.checkFPS(t, t.webkitDecodedFrameCount, t.webkitDroppedFrameCount)
            }
            ,
            t
        }()
          , za = "[eme]"
          , Qa = function() {
            function t(e) {
                this.hls = void 0,
                this.config = void 0,
                this.media = null,
                this.keyFormatPromise = null,
                this.keySystemAccessPromises = {},
                this._requestLicenseFailureCount = 0,
                this.mediaKeySessions = [],
                this.keyIdToKeySessionPromise = {},
                this.setMediaKeysQueue = t.CDMCleanupPromise ? [t.CDMCleanupPromise] : [],
                this.onMediaEncrypted = this._onMediaEncrypted.bind(this),
                this.onWaitingForKey = this._onWaitingForKey.bind(this),
                this.debug = w.debug.bind(w, za),
                this.log = w.log.bind(w, za),
                this.warn = w.warn.bind(w, za),
                this.error = w.error.bind(w, za),
                this.hls = e,
                this.config = e.config,
                this.registerListeners()
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.unregisterListeners(),
                this.onMediaDetached();
                var t = this.config;
                t.requestMediaKeySystemAccessFunc = null,
                t.licenseXhrSetup = t.licenseResponseCallback = void 0,
                t.drmSystems = t.drmSystemOptions = {},
                this.hls = this.onMediaEncrypted = this.onWaitingForKey = this.keyIdToKeySessionPromise = null,
                this.config = null
            }
            ,
            e.registerListeners = function() {
                this.hls.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.on(S.MANIFEST_LOADED, this.onManifestLoaded, this)
            }
            ,
            e.unregisterListeners = function() {
                this.hls.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                this.hls.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                this.hls.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                this.hls.off(S.MANIFEST_LOADED, this.onManifestLoaded, this)
            }
            ,
            e.getLicenseServerUrl = function(t) {
                var e = this.config
                  , r = e.drmSystems
                  , i = e.widevineLicenseUrl
                  , n = r[t];
                if (n)
                    return n.licenseUrl;
                if (t === q.WIDEVINE && i)
                    return i;
                throw new Error('no license server URL configured for key-system "' + t + '"')
            }
            ,
            e.getServerCertificateUrl = function(t) {
                var e = this.config.drmSystems[t];
                if (e)
                    return e.serverCertificateUrl;
                this.log('No Server Certificate in config.drmSystems["' + t + '"]')
            }
            ,
            e.attemptKeySystemAccess = function(t) {
                var e = this
                  , r = this.hls.levels
                  , i = function(t, e, r) {
                    return !!t && r.indexOf(t) === e
                }
                  , n = r.map((function(t) {
                    return t.audioCodec
                }
                )).filter(i)
                  , a = r.map((function(t) {
                    return t.videoCodec
                }
                )).filter(i);
                return n.length + a.length === 0 && a.push("avc1.42e01e"),
                new Promise((function(r, i) {
                    !function t(s) {
                        var o = s.shift();
                        e.getMediaKeysPromise(o, n, a).then((function(t) {
                            return r({
                                keySystem: o,
                                mediaKeys: t
                            })
                        }
                        )).catch((function(e) {
                            s.length ? t(s) : i(e instanceof es ? e : new es({
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_NO_ACCESS,
                                error: e,
                                fatal: !0
                            },e.message))
                        }
                        ))
                    }(t)
                }
                ))
            }
            ,
            e.requestMediaKeySystemAccess = function(t, e) {
                var r = this.config.requestMediaKeySystemAccessFunc;
                if ("function" != typeof r) {
                    var i = "Configured requestMediaKeySystemAccess is not a function " + r;
                    return null === it && "http:" === self.location.protocol && (i = "navigator.requestMediaKeySystemAccess is not available over insecure protocol " + location.protocol),
                    Promise.reject(new Error(i))
                }
                return r(t, e)
            }
            ,
            e.getMediaKeysPromise = function(t, e, r) {
                var i = this
                  , n = function(t, e, r, i) {
                    var n;
                    switch (t) {
                    case q.FAIRPLAY:
                        n = ["cenc", "sinf"];
                        break;
                    case q.WIDEVINE:
                    case q.PLAYREADY:
                        n = ["cenc"];
                        break;
                    case q.CLEARKEY:
                        n = ["cenc", "keyids"];
                        break;
                    default:
                        throw new Error("Unknown key-system: " + t)
                    }
                    return function(t, e, r, i) {
                        return [{
                            initDataTypes: t,
                            persistentState: i.persistentState || "optional",
                            distinctiveIdentifier: i.distinctiveIdentifier || "optional",
                            sessionTypes: i.sessionTypes || [i.sessionType || "temporary"],
                            audioCapabilities: e.map((function(t) {
                                return {
                                    contentType: 'audio/mp4; codecs="' + t + '"',
                                    robustness: i.audioRobustness || "",
                                    encryptionScheme: i.audioEncryptionScheme || null
                                }
                            }
                            )),
                            videoCapabilities: r.map((function(t) {
                                return {
                                    contentType: 'video/mp4; codecs="' + t + '"',
                                    robustness: i.videoRobustness || "",
                                    encryptionScheme: i.videoEncryptionScheme || null
                                }
                            }
                            ))
                        }]
                    }(n, e, r, i)
                }(t, e, r, this.config.drmSystemOptions)
                  , a = this.keySystemAccessPromises[t]
                  , s = null == a ? void 0 : a.keySystemAccess;
                if (!s) {
                    this.log('Requesting encrypted media "' + t + '" key-system access with config: ' + JSON.stringify(n)),
                    s = this.requestMediaKeySystemAccess(t, n);
                    var o = this.keySystemAccessPromises[t] = {
                        keySystemAccess: s
                    };
                    return s.catch((function(e) {
                        i.log('Failed to obtain access to key-system "' + t + '": ' + e)
                    }
                    )),
                    s.then((function(e) {
                        i.log('Access for key-system "' + e.keySystem + '" obtained');
                        var r = i.fetchServerCertificate(t);
                        return i.log('Create media-keys for "' + t + '"'),
                        o.mediaKeys = e.createMediaKeys().then((function(e) {
                            return i.log('Media-keys created for "' + t + '"'),
                            r.then((function(r) {
                                return r ? i.setMediaKeysServerCertificate(e, t, r) : e
                            }
                            ))
                        }
                        )),
                        o.mediaKeys.catch((function(e) {
                            i.error('Failed to create media-keys for "' + t + '"}: ' + e)
                        }
                        )),
                        o.mediaKeys
                    }
                    ))
                }
                return s.then((function() {
                    return a.mediaKeys
                }
                ))
            }
            ,
            e.createMediaKeySessionContext = function(t) {
                var e = t.decryptdata
                  , r = t.keySystem
                  , i = t.mediaKeys;
                this.log('Creating key-system session "' + r + '" keyId: ' + Lt(e.keyId || []));
                var n = i.createSession()
                  , a = {
                    decryptdata: e,
                    keySystem: r,
                    mediaKeys: i,
                    mediaKeysSession: n,
                    keyStatus: "status-pending"
                };
                return this.mediaKeySessions.push(a),
                a
            }
            ,
            e.renewKeySession = function(t) {
                var e = t.decryptdata;
                if (e.pssh) {
                    var r = this.createMediaKeySessionContext(t)
                      , i = this.getKeyIdString(e);
                    this.keyIdToKeySessionPromise[i] = this.generateRequestWithPreferredKeySession(r, "cenc", e.pssh, "expired")
                } else
                    this.warn("Could not renew expired session. Missing pssh initData.");
                this.removeSession(t)
            }
            ,
            e.getKeyIdString = function(t) {
                if (!t)
                    throw new Error("Could not read keyId of undefined decryptdata");
                if (null === t.keyId)
                    throw new Error("keyId is null");
                return Lt(t.keyId)
            }
            ,
            e.updateKeySession = function(t, e) {
                var r, i = t.mediaKeysSession;
                return this.log('Updating key-session "' + i.sessionId + '" for keyID ' + Lt((null == (r = t.decryptdata) ? void 0 : r.keyId) || []) + "\n      } (data length: " + (e ? e.byteLength : e) + ")"),
                i.update(e)
            }
            ,
            e.selectKeySystemFormat = function(t) {
                var e = Object.keys(t.levelkeys || {});
                return this.keyFormatPromise || (this.log("Selecting key-system from fragment (sn: " + t.sn + " " + t.type + ": " + t.level + ") key formats " + e.join(", ")),
                this.keyFormatPromise = this.getKeyFormatPromise(e)),
                this.keyFormatPromise
            }
            ,
            e.getKeyFormatPromise = function(t) {
                var e = this;
                return new Promise((function(r, i) {
                    var n = et(e.config)
                      , a = t.map($).filter((function(t) {
                        return !!t && -1 !== n.indexOf(t)
                    }
                    ));
                    return e.getKeySystemSelectionPromise(a).then((function(t) {
                        var e = t.keySystem
                          , n = tt(e);
                        n ? r(n) : i(new Error('Unable to find format for key-system "' + e + '"'))
                    }
                    )).catch(i)
                }
                ))
            }
            ,
            e.loadKey = function(t) {
                var e = this
                  , r = t.keyInfo.decryptdata
                  , i = this.getKeyIdString(r)
                  , n = "(keyId: " + i + ' format: "' + r.keyFormat + '" method: ' + r.method + " uri: " + r.uri + ")";
                this.log("Starting session for key " + n);
                var a = this.keyIdToKeySessionPromise[i];
                return a || (a = this.keyIdToKeySessionPromise[i] = this.getKeySystemForKeyPromise(r).then((function(i) {
                    var a = i.keySystem
                      , s = i.mediaKeys;
                    return e.throwIfDestroyed(),
                    e.log("Handle encrypted media sn: " + t.frag.sn + " " + t.frag.type + ": " + t.frag.level + " using key " + n),
                    e.attemptSetMediaKeys(a, s).then((function() {
                        e.throwIfDestroyed();
                        var t = e.createMediaKeySessionContext({
                            keySystem: a,
                            mediaKeys: s,
                            decryptdata: r
                        });
                        return e.generateRequestWithPreferredKeySession(t, "cenc", r.pssh, "playlist-key")
                    }
                    ))
                }
                ))).catch((function(t) {
                    return e.handleError(t)
                }
                )),
                a
            }
            ,
            e.throwIfDestroyed = function(t) {
                if (!this.hls)
                    throw new Error("invalid state")
            }
            ,
            e.handleError = function(t) {
                this.hls && (this.error(t.message),
                t instanceof es ? this.hls.trigger(S.ERROR, t.data) : this.hls.trigger(S.ERROR, {
                    type: L.KEY_SYSTEM_ERROR,
                    details: A.KEY_SYSTEM_NO_KEYS,
                    error: t,
                    fatal: !0
                }))
            }
            ,
            e.getKeySystemForKeyPromise = function(t) {
                var e = this.getKeyIdString(t)
                  , r = this.keyIdToKeySessionPromise[e];
                if (!r) {
                    var i = $(t.keyFormat)
                      , n = i ? [i] : et(this.config);
                    return this.attemptKeySystemAccess(n)
                }
                return r
            }
            ,
            e.getKeySystemSelectionPromise = function(t) {
                if (t.length || (t = et(this.config)),
                0 === t.length)
                    throw new es({
                        type: L.KEY_SYSTEM_ERROR,
                        details: A.KEY_SYSTEM_NO_CONFIGURED_LICENSE,
                        fatal: !0
                    },"Missing key-system license configuration options " + JSON.stringify({
                        drmSystems: this.config.drmSystems
                    }));
                return this.attemptKeySystemAccess(t)
            }
            ,
            e._onMediaEncrypted = function(t) {
                var e = this
                  , r = t.initDataType
                  , i = t.initData;
                if (this.debug('"' + t.type + '" event: init data type: "' + r + '"'),
                null !== i) {
                    var n, a;
                    if ("sinf" === r && this.config.drmSystems[q.FAIRPLAY]) {
                        var s = bt(new Uint8Array(i));
                        try {
                            var o = V(JSON.parse(s).sinf)
                              , l = Ut(new Uint8Array(o));
                            if (!l)
                                return;
                            n = l.subarray(8, 24),
                            a = q.FAIRPLAY
                        } catch (t) {
                            return void this.warn('Failed to parse sinf "encrypted" event message initData')
                        }
                    } else {
                        var u = function(t) {
                            if (!(t instanceof ArrayBuffer) || t.byteLength < 32)
                                return null;
                            var e = {
                                version: 0,
                                systemId: "",
                                kids: null,
                                data: null
                            }
                              , r = new DataView(t)
                              , i = r.getUint32(0);
                            if (t.byteLength !== i && i > 44)
                                return null;
                            if (1886614376 !== r.getUint32(4))
                                return null;
                            if (e.version = r.getUint32(8) >>> 24,
                            e.version > 1)
                                return null;
                            e.systemId = Lt(new Uint8Array(t,12,16));
                            var n = r.getUint32(28);
                            if (0 === e.version) {
                                if (i - 32 < n)
                                    return null;
                                e.data = new Uint8Array(t,32,n)
                            } else if (1 === e.version) {
                                e.kids = [];
                                for (var a = 0; a < n; a++)
                                    e.kids.push(new Uint8Array(t,32 + 16 * a,16))
                            }
                            return e
                        }(i);
                        if (null === u)
                            return;
                        0 === u.version && u.systemId === Z && u.data && (n = u.data.subarray(8, 24)),
                        a = function(t) {
                            if (t === Z)
                                return q.WIDEVINE
                        }(u.systemId)
                    }
                    if (a && n) {
                        for (var h, d = Lt(n), c = this.keyIdToKeySessionPromise, f = this.mediaKeySessions, g = c[d], v = function() {
                            var t = f[m]
                              , a = t.decryptdata;
                            if (a.pssh || !a.keyId)
                                return 0;
                            var s = Lt(a.keyId);
                            return d === s || -1 !== a.uri.replace(/-/g, "").indexOf(d) ? (g = c[s],
                            delete c[s],
                            a.pssh = new Uint8Array(i),
                            a.keyId = n,
                            g = c[d] = g.then((function() {
                                return e.generateRequestWithPreferredKeySession(t, r, i, "encrypted-event-key-match")
                            }
                            )),
                            1) : void 0
                        }, m = 0; m < f.length && (0 === (h = v()) || 1 !== h); m++)
                            ;
                        g || (g = c[d] = this.getKeySystemSelectionPromise([a]).then((function(t) {
                            var a, s = t.keySystem, o = t.mediaKeys;
                            e.throwIfDestroyed();
                            var l = new qt("ISO-23001-7",d,null != (a = tt(s)) ? a : "");
                            return l.pssh = new Uint8Array(i),
                            l.keyId = n,
                            e.attemptSetMediaKeys(s, o).then((function() {
                                e.throwIfDestroyed();
                                var t = e.createMediaKeySessionContext({
                                    decryptdata: l,
                                    keySystem: s,
                                    mediaKeys: o
                                });
                                return e.generateRequestWithPreferredKeySession(t, r, i, "encrypted-event-no-match")
                            }
                            ))
                        }
                        ))),
                        g.catch((function(t) {
                            return e.handleError(t)
                        }
                        ))
                    }
                }
            }
            ,
            e._onWaitingForKey = function(t) {
                this.log('"' + t.type + '" event')
            }
            ,
            e.attemptSetMediaKeys = function(t, e) {
                var r = this
                  , i = this.setMediaKeysQueue.slice();
                this.log('Setting media-keys for "' + t + '"');
                var n = Promise.all(i).then((function() {
                    if (!r.media)
                        throw new Error("Attempted to set mediaKeys without media element attached");
                    return r.media.setMediaKeys(e)
                }
                ));
                return this.setMediaKeysQueue.push(n),
                n.then((function() {
                    r.log('Media-keys set for "' + t + '"'),
                    i.push(n),
                    r.setMediaKeysQueue = r.setMediaKeysQueue.filter((function(t) {
                        return -1 === i.indexOf(t)
                    }
                    ))
                }
                ))
            }
            ,
            e.generateRequestWithPreferredKeySession = function(t, e, r, i) {
                var n, a, s = this, o = null == (n = this.config.drmSystems) || null == (a = n[t.keySystem]) ? void 0 : a.generateRequest;
                if (o)
                    try {
                        var l = o.call(this.hls, e, r, t);
                        if (!l)
                            throw new Error("Invalid response from configured generateRequest filter");
                        e = l.initDataType,
                        r = t.decryptdata.pssh = l.initData ? new Uint8Array(l.initData) : null
                    } catch (t) {
                        var u;
                        if (this.warn(t.message),
                        null != (u = this.hls) && u.config.debug)
                            throw t
                    }
                if (null === r)
                    return this.log('Skipping key-session request for "' + i + '" (no initData)'),
                    Promise.resolve(t);
                var h = this.getKeyIdString(t.decryptdata);
                this.log('Generating key-session request for "' + i + '": ' + h + " (init data type: " + e + " length: " + (r ? r.byteLength : null) + ")");
                var d = new Mn
                  , c = t._onmessage = function(e) {
                    var r = t.mediaKeysSession;
                    if (r) {
                        var i = e.messageType
                          , n = e.message;
                        s.log('"' + i + '" message event for session "' + r.sessionId + '" message size: ' + n.byteLength),
                        "license-request" === i || "license-renewal" === i ? s.renewLicense(t, n).catch((function(t) {
                            s.handleError(t),
                            d.emit("error", t)
                        }
                        )) : "license-release" === i ? t.keySystem === q.FAIRPLAY && (s.updateKeySession(t, W("acknowledged")),
                        s.removeSession(t)) : s.warn('unhandled media key message type "' + i + '"')
                    } else
                        d.emit("error", new Error("invalid state"))
                }
                  , f = t._onkeystatuseschange = function(e) {
                    if (t.mediaKeysSession) {
                        s.onKeyStatusChange(t);
                        var r = t.keyStatus;
                        d.emit("keyStatus", r),
                        "expired" === r && (s.warn(t.keySystem + " expired for key " + h),
                        s.renewKeySession(t))
                    } else
                        d.emit("error", new Error("invalid state"))
                }
                ;
                t.mediaKeysSession.addEventListener("message", c),
                t.mediaKeysSession.addEventListener("keystatuseschange", f);
                var g = new Promise((function(t, e) {
                    d.on("error", e),
                    d.on("keyStatus", (function(r) {
                        r.startsWith("usable") ? t() : "output-restricted" === r ? e(new es({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,
                            fatal: !1
                        },"HDCP level output restricted")) : "internal-error" === r ? e(new es({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_STATUS_INTERNAL_ERROR,
                            fatal: !0
                        },'key status changed to "' + r + '"')) : "expired" === r ? e(new Error("key expired while generating request")) : s.warn('unhandled key status change "' + r + '"')
                    }
                    ))
                }
                ));
                return t.mediaKeysSession.generateRequest(e, r).then((function() {
                    var e;
                    s.log('Request generated for key-session "' + (null == (e = t.mediaKeysSession) ? void 0 : e.sessionId) + '" keyId: ' + h)
                }
                )).catch((function(t) {
                    throw new es({
                        type: L.KEY_SYSTEM_ERROR,
                        details: A.KEY_SYSTEM_NO_SESSION,
                        error: t,
                        fatal: !1
                    },"Error generating key-session request: " + t)
                }
                )).then((function() {
                    return g
                }
                )).catch((function(e) {
                    throw d.removeAllListeners(),
                    s.removeSession(t),
                    e
                }
                )).then((function() {
                    return d.removeAllListeners(),
                    t
                }
                ))
            }
            ,
            e.onKeyStatusChange = function(t) {
                var e = this;
                t.mediaKeysSession.keyStatuses.forEach((function(r, i) {
                    e.log('key status change "' + r + '" for keyStatuses keyId: ' + Lt("buffer"in i ? new Uint8Array(i.buffer,i.byteOffset,i.byteLength) : new Uint8Array(i)) + " session keyId: " + Lt(new Uint8Array(t.decryptdata.keyId || [])) + " uri: " + t.decryptdata.uri),
                    t.keyStatus = r
                }
                ))
            }
            ,
            e.fetchServerCertificate = function(t) {
                var e = this.config
                  , r = new (0,
                e.loader)(e)
                  , n = this.getServerCertificateUrl(t);
                return n ? (this.log('Fetching server certificate for "' + t + '"'),
                new Promise((function(a, s) {
                    var o = {
                        responseType: "arraybuffer",
                        url: n
                    }
                      , l = e.certLoadPolicy.default
                      , u = {
                        loadPolicy: l,
                        timeout: l.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0
                    }
                      , h = {
                        onSuccess: function(t, e, r, i) {
                            a(t.data)
                        },
                        onError: function(e, r, a, l) {
                            s(new es({
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: a,
                                response: i({
                                    url: o.url,
                                    data: void 0
                                }, e)
                            },'"' + t + '" certificate request failed (' + n + "). Status: " + e.code + " (" + e.text + ")"))
                        },
                        onTimeout: function(e, r, i) {
                            s(new es({
                                type: L.KEY_SYSTEM_ERROR,
                                details: A.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,
                                fatal: !0,
                                networkDetails: i,
                                response: {
                                    url: o.url,
                                    data: void 0
                                }
                            },'"' + t + '" certificate request timed out (' + n + ")"))
                        },
                        onAbort: function(t, e, r) {
                            s(new Error("aborted"))
                        }
                    };
                    r.load(o, u, h)
                }
                ))) : Promise.resolve()
            }
            ,
            e.setMediaKeysServerCertificate = function(t, e, r) {
                var i = this;
                return new Promise((function(n, a) {
                    t.setServerCertificate(r).then((function(a) {
                        i.log("setServerCertificate " + (a ? "success" : "not supported by CDM") + " (" + (null == r ? void 0 : r.byteLength) + ') on "' + e + '"'),
                        n(t)
                    }
                    )).catch((function(t) {
                        a(new es({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,
                            error: t,
                            fatal: !0
                        },t.message))
                    }
                    ))
                }
                ))
            }
            ,
            e.renewLicense = function(t, e) {
                var r = this;
                return this.requestLicense(t, new Uint8Array(e)).then((function(e) {
                    return r.updateKeySession(t, new Uint8Array(e)).catch((function(t) {
                        throw new es({
                            type: L.KEY_SYSTEM_ERROR,
                            details: A.KEY_SYSTEM_SESSION_UPDATE_FAILED,
                            error: t,
                            fatal: !0
                        },t.message)
                    }
                    ))
                }
                ))
            }
            ,
            e.unpackPlayReadyKeyMessage = function(t, e) {
                var r = String.fromCharCode.apply(null, new Uint16Array(e.buffer));
                if (!r.includes("PlayReadyKeyMessage"))
                    return t.setRequestHeader("Content-Type", "text/xml; charset=utf-8"),
                    e;
                var i = (new DOMParser).parseFromString(r, "application/xml")
                  , n = i.querySelectorAll("HttpHeader");
                if (n.length > 0)
                    for (var a, s = 0, o = n.length; s < o; s++) {
                        var l, u, h = null == (l = (a = n[s]).querySelector("name")) ? void 0 : l.textContent, d = null == (u = a.querySelector("value")) ? void 0 : u.textContent;
                        h && d && t.setRequestHeader(h, d)
                    }
                var c = i.querySelector("Challenge")
                  , f = null == c ? void 0 : c.textContent;
                if (!f)
                    throw new Error("Cannot find <Challenge> in key message");
                return W(atob(f))
            }
            ,
            e.setupLicenseXHR = function(t, e, r, i) {
                var n = this
                  , a = this.config.licenseXhrSetup;
                return a ? Promise.resolve().then((function() {
                    if (!r.decryptdata)
                        throw new Error("Key removed");
                    return a.call(n.hls, t, e, r, i)
                }
                )).catch((function(s) {
                    if (!r.decryptdata)
                        throw s;
                    return t.open("POST", e, !0),
                    a.call(n.hls, t, e, r, i)
                }
                )).then((function(r) {
                    return t.readyState || t.open("POST", e, !0),
                    {
                        xhr: t,
                        licenseChallenge: r || i
                    }
                }
                )) : (t.open("POST", e, !0),
                Promise.resolve({
                    xhr: t,
                    licenseChallenge: i
                }))
            }
            ,
            e.requestLicense = function(t, e) {
                var r = this
                  , i = this.config.keyLoadPolicy.default;
                return new Promise((function(n, a) {
                    var s = r.getLicenseServerUrl(t.keySystem);
                    r.log("Sending license request to URL: " + s);
                    var o = new XMLHttpRequest;
                    o.responseType = "arraybuffer",
                    o.onreadystatechange = function() {
                        if (!r.hls || !t.mediaKeysSession)
                            return a(new Error("invalid state"));
                        if (4 === o.readyState)
                            if (200 === o.status) {
                                r._requestLicenseFailureCount = 0;
                                var l = o.response;
                                r.log("License received " + (l instanceof ArrayBuffer ? l.byteLength : l));
                                var u = r.config.licenseResponseCallback;
                                if (u)
                                    try {
                                        l = u.call(r.hls, o, s, t)
                                    } catch (t) {
                                        r.error(t)
                                    }
                                n(l)
                            } else {
                                var h = i.errorRetry
                                  , d = h ? h.maxNumRetry : 0;
                                if (r._requestLicenseFailureCount++,
                                r._requestLicenseFailureCount > d || o.status >= 400 && o.status < 500)
                                    a(new es({
                                        type: L.KEY_SYSTEM_ERROR,
                                        details: A.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0,
                                        networkDetails: o,
                                        response: {
                                            url: s,
                                            data: void 0,
                                            code: o.status,
                                            text: o.statusText
                                        }
                                    },"License Request XHR failed (" + s + "). Status: " + o.status + " (" + o.statusText + ")"));
                                else {
                                    var c = d - r._requestLicenseFailureCount + 1;
                                    r.warn("Retrying license request, " + c + " attempts left"),
                                    r.requestLicense(t, e).then(n, a)
                                }
                            }
                    }
                    ,
                    t.licenseXhr && t.licenseXhr.readyState !== XMLHttpRequest.DONE && t.licenseXhr.abort(),
                    t.licenseXhr = o,
                    r.setupLicenseXHR(o, s, t, e).then((function(e) {
                        var i = e.xhr
                          , n = e.licenseChallenge;
                        t.keySystem == q.PLAYREADY && (n = r.unpackPlayReadyKeyMessage(i, n)),
                        i.send(n)
                    }
                    ))
                }
                ))
            }
            ,
            e.onMediaAttached = function(t, e) {
                if (this.config.emeEnabled) {
                    var r = e.media;
                    this.media = r,
                    r.addEventListener("encrypted", this.onMediaEncrypted),
                    r.addEventListener("waitingforkey", this.onWaitingForKey)
                }
            }
            ,
            e.onMediaDetached = function() {
                var e = this
                  , r = this.media
                  , i = this.mediaKeySessions;
                r && (r.removeEventListener("encrypted", this.onMediaEncrypted),
                r.removeEventListener("waitingforkey", this.onWaitingForKey),
                this.media = null),
                this._requestLicenseFailureCount = 0,
                this.setMediaKeysQueue = [],
                this.mediaKeySessions = [],
                this.keyIdToKeySessionPromise = {},
                qt.clearKeyUriToKeyIdMap();
                var n = i.length;
                t.CDMCleanupPromise = Promise.all(i.map((function(t) {
                    return e.removeSession(t)
                }
                )).concat(null == r ? void 0 : r.setMediaKeys(null).catch((function(t) {
                    e.log("Could not clear media keys: " + t)
                }
                )))).then((function() {
                    n && (e.log("finished closing key sessions and clearing media keys"),
                    i.length = 0)
                }
                )).catch((function(t) {
                    e.log("Could not close sessions and clear media keys: " + t)
                }
                ))
            }
            ,
            e.onManifestLoading = function() {
                this.keyFormatPromise = null
            }
            ,
            e.onManifestLoaded = function(t, e) {
                var r = e.sessionKeys;
                if (r && this.config.emeEnabled && !this.keyFormatPromise) {
                    var i = r.reduce((function(t, e) {
                        return -1 === t.indexOf(e.keyFormat) && t.push(e.keyFormat),
                        t
                    }
                    ), []);
                    this.log("Selecting key-system from session-keys " + i.join(", ")),
                    this.keyFormatPromise = this.getKeyFormatPromise(i)
                }
            }
            ,
            e.removeSession = function(t) {
                var e = this
                  , r = t.mediaKeysSession
                  , i = t.licenseXhr;
                if (r) {
                    this.log("Remove licenses and keys and close session " + r.sessionId),
                    t._onmessage && (r.removeEventListener("message", t._onmessage),
                    t._onmessage = void 0),
                    t._onkeystatuseschange && (r.removeEventListener("keystatuseschange", t._onkeystatuseschange),
                    t._onkeystatuseschange = void 0),
                    i && i.readyState !== XMLHttpRequest.DONE && i.abort(),
                    t.mediaKeysSession = t.decryptdata = t.licenseXhr = void 0;
                    var n = this.mediaKeySessions.indexOf(t);
                    return n > -1 && this.mediaKeySessions.splice(n, 1),
                    r.remove().catch((function(t) {
                        e.log("Could not remove session: " + t)
                    }
                    )).then((function() {
                        return r.close()
                    }
                    )).catch((function(t) {
                        e.log("Could not close session: " + t)
                    }
                    ))
                }
            }
            ,
            t
        }();
        Qa.CDMCleanupPromise = void 0;
        var Ja, $a, Za, ts, es = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this, r) || this).data = void 0,
                e.error || (e.error = new Error(r)),
                i.data = e,
                e.err = e.error,
                i
            }
            return l(e, t),
            e
        }(c(Error));
        !function(t) {
            t.MANIFEST = "m",
            t.AUDIO = "a",
            t.VIDEO = "v",
            t.MUXED = "av",
            t.INIT = "i",
            t.CAPTION = "c",
            t.TIMED_TEXT = "tt",
            t.KEY = "k",
            t.OTHER = "o"
        }(Ja || (Ja = {})),
        function(t) {
            t.DASH = "d",
            t.HLS = "h",
            t.SMOOTH = "s",
            t.OTHER = "o"
        }($a || ($a = {})),
        function(t) {
            t.OBJECT = "CMCD-Object",
            t.REQUEST = "CMCD-Request",
            t.SESSION = "CMCD-Session",
            t.STATUS = "CMCD-Status"
        }(Za || (Za = {}));
        var rs = ((ts = {})[Za.OBJECT] = ["br", "d", "ot", "tb"],
        ts[Za.REQUEST] = ["bl", "dl", "mtp", "nor", "nrr", "su"],
        ts[Za.SESSION] = ["cid", "pr", "sf", "sid", "st", "v"],
        ts[Za.STATUS] = ["bs", "rtp"],
        ts)
          , is = function t(e, r) {
            this.value = void 0,
            this.params = void 0,
            Array.isArray(e) && (e = e.map((function(e) {
                return e instanceof t ? e : new t(e)
            }
            ))),
            this.value = e,
            this.params = r
        }
          , ns = function(t) {
            this.description = void 0,
            this.description = t
        }
          , as = "Dict";
        function ss(t, e, r, i) {
            return new Error("failed to " + t + ' "' + (n = e,
            (Array.isArray(n) ? JSON.stringify(n) : n instanceof Map ? "Map{}" : n instanceof Set ? "Set{}" : "object" == typeof n ? JSON.stringify(n) : String(n)) + '" as ') + r,{
                cause: i
            });
            var n
        }
        var os = "Bare Item"
          , ls = "Boolean"
          , us = "Byte Sequence"
          , hs = "Decimal"
          , ds = "Integer"
          , cs = /[\x00-\x1f\x7f]+/
          , fs = "Token"
          , gs = "Key";
        function vs(t, e, r) {
            return ss("serialize", t, e, r)
        }
        function ms(t) {
            if (!1 === ArrayBuffer.isView(t))
                throw vs(t, us);
            return ":" + (e = t,
            btoa(String.fromCharCode.apply(String, e)) + ":");
            var e
        }
        function ps(t) {
            if (function(t) {
                return t < -999999999999999 || 999999999999999 < t
            }(t))
                throw vs(t, ds);
            return t.toString()
        }
        function ys(t, e) {
            if (t < 0)
                return -ys(-t, e);
            var r = Math.pow(10, e);
            if (Math.abs(t * r % 1 - .5) < Number.EPSILON) {
                var i = Math.floor(t * r);
                return (i % 2 == 0 ? i : i + 1) / r
            }
            return Math.round(t * r) / r
        }
        function Es(t) {
            var e = ys(t, 3);
            if (Math.floor(Math.abs(e)).toString().length > 12)
                throw vs(t, hs);
            var r = e.toString();
            return r.includes(".") ? r : r + ".0"
        }
        var Ts = "String";
        function Ss(t) {
            var e, r = (e = t).description || e.toString().slice(7, -1);
            if (!1 === /^([a-zA-Z*])([!#$%&'*+\-.^_`|~\w:/]*)$/.test(r))
                throw vs(r, fs);
            return r
        }
        function Ls(t) {
            switch (typeof t) {
            case "number":
                if (!y(t))
                    throw vs(t, os);
                return Number.isInteger(t) ? ps(t) : Es(t);
            case "string":
                return function(t) {
                    if (cs.test(t))
                        throw vs(t, Ts);
                    return '"' + t.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'
                }(t);
            case "symbol":
                return Ss(t);
            case "boolean":
                return function(t) {
                    if ("boolean" != typeof t)
                        throw vs(t, ls);
                    return t ? "?1" : "?0"
                }(t);
            case "object":
                if (t instanceof Date)
                    return function(t) {
                        return "@" + ps(t.getTime() / 1e3)
                    }(t);
                if (t instanceof Uint8Array)
                    return ms(t);
                if (t instanceof ns)
                    return Ss(t);
            default:
                throw vs(t, os)
            }
        }
        function As(t) {
            if (!1 === /^[a-z*][a-z0-9\-_.*]*$/.test(t))
                throw vs(t, gs);
            return t
        }
        function Rs(t) {
            return null == t ? "" : Object.entries(t).map((function(t) {
                var e = t[0]
                  , r = t[1];
                return !0 === r ? ";" + As(e) : ";" + As(e) + "=" + Ls(r)
            }
            )).join("")
        }
        function ks(t) {
            return t instanceof is ? "" + Ls(t.value) + Rs(t.params) : Ls(t)
        }
        function bs(t, e) {
            var r;
            if (void 0 === e && (e = {
                whitespace: !0
            }),
            "object" != typeof t)
                throw vs(t, as);
            var i = t instanceof Map ? t.entries() : Object.entries(t)
              , n = null != (r = e) && r.whitespace ? " " : "";
            return Array.from(i).map((function(t) {
                var e = t[0]
                  , r = t[1];
                r instanceof is == 0 && (r = new is(r));
                var i, n = As(e);
                return !0 === r.value ? n += Rs(r.params) : (n += "=",
                Array.isArray(r.value) ? n += "(" + (i = r).value.map(ks).join(" ") + ")" + Rs(i.params) : n += ks(r)),
                n
            }
            )).join("," + n)
        }
        var Ds = function(t) {
            return "ot" === t || "sf" === t || "st" === t
        }
          , Is = function(t) {
            return "number" == typeof t ? y(t) : null != t && "" !== t && !1 !== t
        }
          , ws = function(t) {
            return Math.round(t)
        }
          , Cs = function(t) {
            return 100 * ws(t / 100)
        }
          , _s = {
            br: ws,
            d: ws,
            bl: Cs,
            dl: Cs,
            mtp: Cs,
            nor: function(t, e) {
                return null != e && e.baseUrl && (t = function(t, e) {
                    var r = new URL(t)
                      , i = new URL(e);
                    if (r.origin !== i.origin)
                        return t;
                    for (var n = r.pathname.split("/").slice(1), a = i.pathname.split("/").slice(1, -1); n[0] === a[0]; )
                        n.shift(),
                        a.shift();
                    for (; a.length; )
                        a.shift(),
                        n.unshift("..");
                    return n.join("/")
                }(t, e.baseUrl)),
                encodeURIComponent(t)
            },
            rtp: Cs,
            tb: ws
        };
        function xs(t, e) {
            return void 0 === e && (e = {}),
            t ? function(t, e) {
                return bs(t, e)
            }(function(t, e) {
                var r = {};
                if (null == t || "object" != typeof t)
                    return r;
                var i = Object.keys(t).sort()
                  , n = o({}, _s, null == e ? void 0 : e.formatters)
                  , a = null == e ? void 0 : e.filter;
                return i.forEach((function(i) {
                    if (null == a || !a(i)) {
                        var s = t[i]
                          , o = n[i];
                        o && (s = o(s, e)),
                        "v" === i && 1 === s || "pr" == i && 1 === s || Is(s) && (Ds(i) && "string" == typeof s && (s = new ns(s)),
                        r[i] = s)
                    }
                }
                )),
                r
            }(t, e), o({
                whitespace: !1
            }, e)) : ""
        }
        function Ps(t, e, r) {
            return o(t, function(t, e) {
                var r;
                if (void 0 === e && (e = {}),
                !t)
                    return {};
                var i = Object.entries(t)
                  , n = Object.entries(rs).concat(Object.entries((null == (r = e) ? void 0 : r.customHeaderMap) || {}))
                  , a = i.reduce((function(t, e) {
                    var r, i = e[0], a = e[1], s = (null == (r = n.find((function(t) {
                        return t[1].includes(i)
                    }
                    ))) ? void 0 : r[0]) || Za.REQUEST;
                    return null != t[s] || (t[s] = {}),
                    t[s][i] = a,
                    t
                }
                ), {});
                return Object.entries(a).reduce((function(t, r) {
                    var i = r[0]
                      , n = r[1];
                    return t[i] = xs(n, e),
                    t
                }
                ), {})
            }(e, r))
        }
        var Fs = "CMCD"
          , Ms = /CMCD=[^&#]+/;
        function Os(t, e, r) {
            var i = function(t, e) {
                if (void 0 === e && (e = {}),
                !t)
                    return "";
                var r = xs(t, e);
                return Fs + "=" + encodeURIComponent(r)
            }(e, r);
            if (!i)
                return t;
            if (Ms.test(t))
                return t.replace(Ms, i);
            var n = t.includes("?") ? "&" : "?";
            return "" + t + n + i
        }
        var Ns = function() {
            function t(t) {
                var e = this;
                this.hls = void 0,
                this.config = void 0,
                this.media = void 0,
                this.sid = void 0,
                this.cid = void 0,
                this.useHeaders = !1,
                this.includeKeys = void 0,
                this.initialized = !1,
                this.starved = !1,
                this.buffering = !0,
                this.audioBuffer = void 0,
                this.videoBuffer = void 0,
                this.onWaiting = function() {
                    e.initialized && (e.starved = !0),
                    e.buffering = !0
                }
                ,
                this.onPlaying = function() {
                    e.initialized || (e.initialized = !0),
                    e.buffering = !1
                }
                ,
                this.applyPlaylistData = function(t) {
                    try {
                        e.apply(t, {
                            ot: Ja.MANIFEST,
                            su: !e.initialized
                        })
                    } catch (t) {
                        w.warn("Could not generate manifest CMCD data.", t)
                    }
                }
                ,
                this.applyFragmentData = function(t) {
                    try {
                        var r = t.frag
                          , i = e.hls.levels[r.level]
                          , n = e.getObjectType(r)
                          , a = {
                            d: 1e3 * r.duration,
                            ot: n
                        };
                        n !== Ja.VIDEO && n !== Ja.AUDIO && n != Ja.MUXED || (a.br = i.bitrate / 1e3,
                        a.tb = e.getTopBandwidth(n) / 1e3,
                        a.bl = e.getBufferLength(n)),
                        e.apply(t, a)
                    } catch (t) {
                        w.warn("Could not generate segment CMCD data.", t)
                    }
                }
                ,
                this.hls = t;
                var r = this.config = t.config
                  , i = r.cmcd;
                null != i && (r.pLoader = this.createPlaylistLoader(),
                r.fLoader = this.createFragmentLoader(),
                this.sid = i.sessionId || function() {
                    try {
                        return crypto.randomUUID()
                    } catch (i) {
                        try {
                            var t = URL.createObjectURL(new Blob)
                              , e = t.toString();
                            return URL.revokeObjectURL(t),
                            e.slice(e.lastIndexOf("/") + 1)
                        } catch (t) {
                            var r = (new Date).getTime();
                            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
                                var e = (r + 16 * Math.random()) % 16 | 0;
                                return r = Math.floor(r / 16),
                                ("x" == t ? e : 3 & e | 8).toString(16)
                            }
                            ))
                        }
                    }
                }(),
                this.cid = i.contentId,
                this.useHeaders = !0 === i.useHeaders,
                this.includeKeys = i.includeKeys,
                this.registerListeners())
            }
            var e = t.prototype;
            return e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHED, this.onMediaDetached, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this)
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.onMediaDetached(),
                this.hls = this.config = this.audioBuffer = this.videoBuffer = null,
                this.onWaiting = this.onPlaying = null
            }
            ,
            e.onMediaAttached = function(t, e) {
                this.media = e.media,
                this.media.addEventListener("waiting", this.onWaiting),
                this.media.addEventListener("playing", this.onPlaying)
            }
            ,
            e.onMediaDetached = function() {
                this.media && (this.media.removeEventListener("waiting", this.onWaiting),
                this.media.removeEventListener("playing", this.onPlaying),
                this.media = null)
            }
            ,
            e.onBufferCreated = function(t, e) {
                var r, i;
                this.audioBuffer = null == (r = e.tracks.audio) ? void 0 : r.buffer,
                this.videoBuffer = null == (i = e.tracks.video) ? void 0 : i.buffer
            }
            ,
            e.createData = function() {
                var t;
                return {
                    v: 1,
                    sf: $a.HLS,
                    sid: this.sid,
                    cid: this.cid,
                    pr: null == (t = this.media) ? void 0 : t.playbackRate,
                    mtp: this.hls.bandwidthEstimate / 1e3
                }
            }
            ,
            e.apply = function(t, e) {
                void 0 === e && (e = {}),
                o(e, this.createData());
                var r = e.ot === Ja.INIT || e.ot === Ja.VIDEO || e.ot === Ja.MUXED;
                this.starved && r && (e.bs = !0,
                e.su = !0,
                this.starved = !1),
                null == e.su && (e.su = this.buffering);
                var i = this.includeKeys;
                i && (e = Object.keys(e).reduce((function(t, r) {
                    return i.includes(r) && (t[r] = e[r]),
                    t
                }
                ), {})),
                this.useHeaders ? (t.headers || (t.headers = {}),
                Ps(t.headers, e)) : t.url = Os(t.url, e)
            }
            ,
            e.getObjectType = function(t) {
                var e = t.type;
                return "subtitle" === e ? Ja.TIMED_TEXT : "initSegment" === t.sn ? Ja.INIT : "audio" === e ? Ja.AUDIO : "main" === e ? this.hls.audioTracks.length ? Ja.VIDEO : Ja.MUXED : void 0
            }
            ,
            e.getTopBandwidth = function(t) {
                var e, r = 0, i = this.hls;
                if (t === Ja.AUDIO)
                    e = i.audioTracks;
                else {
                    var n = i.maxAutoLevel
                      , a = n > -1 ? n + 1 : i.levels.length;
                    e = i.levels.slice(0, a)
                }
                for (var s, o = g(e); !(s = o()).done; ) {
                    var l = s.value;
                    l.bitrate > r && (r = l.bitrate)
                }
                return r > 0 ? r : NaN
            }
            ,
            e.getBufferLength = function(t) {
                var e = this.hls.media
                  , r = t === Ja.AUDIO ? this.audioBuffer : this.videoBuffer;
                return r && e ? 1e3 * zr.bufferInfo(r, e.currentTime, this.config.maxBufferHole).len : NaN
            }
            ,
            e.createPlaylistLoader = function() {
                var t = this.config.pLoader
                  , e = this.applyPlaylistData
                  , r = t || this.config.loader;
                return function() {
                    function t(t) {
                        this.loader = void 0,
                        this.loader = new r(t)
                    }
                    var i = t.prototype;
                    return i.destroy = function() {
                        this.loader.destroy()
                    }
                    ,
                    i.abort = function() {
                        this.loader.abort()
                    }
                    ,
                    i.load = function(t, r, i) {
                        e(t),
                        this.loader.load(t, r, i)
                    }
                    ,
                    s(t, [{
                        key: "stats",
                        get: function() {
                            return this.loader.stats
                        }
                    }, {
                        key: "context",
                        get: function() {
                            return this.loader.context
                        }
                    }]),
                    t
                }()
            }
            ,
            e.createFragmentLoader = function() {
                var t = this.config.fLoader
                  , e = this.applyFragmentData
                  , r = t || this.config.loader;
                return function() {
                    function t(t) {
                        this.loader = void 0,
                        this.loader = new r(t)
                    }
                    var i = t.prototype;
                    return i.destroy = function() {
                        this.loader.destroy()
                    }
                    ,
                    i.abort = function() {
                        this.loader.abort()
                    }
                    ,
                    i.load = function(t, r, i) {
                        e(t),
                        this.loader.load(t, r, i)
                    }
                    ,
                    s(t, [{
                        key: "stats",
                        get: function() {
                            return this.loader.stats
                        }
                    }, {
                        key: "context",
                        get: function() {
                            return this.loader.context
                        }
                    }]),
                    t
                }()
            }
            ,
            t
        }()
          , Us = function() {
            function t(t) {
                this.hls = void 0,
                this.log = void 0,
                this.loader = null,
                this.uri = null,
                this.pathwayId = ".",
                this.pathwayPriority = null,
                this.timeToLoad = 300,
                this.reloadTimer = -1,
                this.updated = 0,
                this.started = !1,
                this.enabled = !0,
                this.levels = null,
                this.audioTracks = null,
                this.subtitleTracks = null,
                this.penalizedPathways = {},
                this.hls = t,
                this.log = w.log.bind(w, "[content-steering]:"),
                this.registerListeners()
            }
            var e = t.prototype;
            return e.registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            e.unregisterListeners = function() {
                var t = this.hls;
                t && (t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.ERROR, this.onError, this))
            }
            ,
            e.startLoad = function() {
                if (this.started = !0,
                this.clearTimeout(),
                this.enabled && this.uri) {
                    if (this.updated) {
                        var t = 1e3 * this.timeToLoad - (performance.now() - this.updated);
                        if (t > 0)
                            return void this.scheduleRefresh(this.uri, t)
                    }
                    this.loadSteeringManifest(this.uri)
                }
            }
            ,
            e.stopLoad = function() {
                this.started = !1,
                this.loader && (this.loader.destroy(),
                this.loader = null),
                this.clearTimeout()
            }
            ,
            e.clearTimeout = function() {
                -1 !== this.reloadTimer && (self.clearTimeout(this.reloadTimer),
                this.reloadTimer = -1)
            }
            ,
            e.destroy = function() {
                this.unregisterListeners(),
                this.stopLoad(),
                this.hls = null,
                this.levels = this.audioTracks = this.subtitleTracks = null
            }
            ,
            e.removeLevel = function(t) {
                var e = this.levels;
                e && (this.levels = e.filter((function(e) {
                    return e !== t
                }
                )))
            }
            ,
            e.onManifestLoading = function() {
                this.stopLoad(),
                this.enabled = !0,
                this.timeToLoad = 300,
                this.updated = 0,
                this.uri = null,
                this.pathwayId = ".",
                this.levels = this.audioTracks = this.subtitleTracks = null
            }
            ,
            e.onManifestLoaded = function(t, e) {
                var r = e.contentSteering;
                null !== r && (this.pathwayId = r.pathwayId,
                this.uri = r.uri,
                this.started && this.startLoad())
            }
            ,
            e.onManifestParsed = function(t, e) {
                this.audioTracks = e.audioTracks,
                this.subtitleTracks = e.subtitleTracks
            }
            ,
            e.onError = function(t, e) {
                var r = e.errorAction;
                if ((null == r ? void 0 : r.action) === Tr && r.flags === Rr) {
                    var i = this.levels
                      , n = this.pathwayPriority
                      , a = this.pathwayId;
                    if (e.context) {
                        var s = e.context
                          , o = s.groupId
                          , l = s.pathwayId
                          , u = s.type;
                        o && i ? a = this.getPathwayForGroupId(o, u, a) : l && (a = l)
                    }
                    a in this.penalizedPathways || (this.penalizedPathways[a] = performance.now()),
                    !n && i && (n = i.reduce((function(t, e) {
                        return -1 === t.indexOf(e.pathwayId) && t.push(e.pathwayId),
                        t
                    }
                    ), [])),
                    n && n.length > 1 && (this.updatePathwayPriority(n),
                    r.resolved = this.pathwayId !== a),
                    r.resolved || w.warn("Could not resolve " + e.details + ' ("' + e.error.message + '") with content-steering for Pathway: ' + a + " levels: " + (i ? i.length : i) + " priorities: " + JSON.stringify(n) + " penalized: " + JSON.stringify(this.penalizedPathways))
                }
            }
            ,
            e.filterParsedLevels = function(t) {
                this.levels = t;
                var e = this.getLevelsForPathway(this.pathwayId);
                if (0 === e.length) {
                    var r = t[0].pathwayId;
                    this.log("No levels found in Pathway " + this.pathwayId + '. Setting initial Pathway to "' + r + '"'),
                    e = this.getLevelsForPathway(r),
                    this.pathwayId = r
                }
                return e.length !== t.length ? (this.log("Found " + e.length + "/" + t.length + ' levels in Pathway "' + this.pathwayId + '"'),
                e) : t
            }
            ,
            e.getLevelsForPathway = function(t) {
                return null === this.levels ? [] : this.levels.filter((function(e) {
                    return t === e.pathwayId
                }
                ))
            }
            ,
            e.updatePathwayPriority = function(t) {
                var e;
                this.pathwayPriority = t;
                var r = this.penalizedPathways
                  , i = performance.now();
                Object.keys(r).forEach((function(t) {
                    i - r[t] > 3e5 && delete r[t]
                }
                ));
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    if (!(a in r)) {
                        if (a === this.pathwayId)
                            return;
                        var s = this.hls.nextLoadLevel
                          , o = this.hls.levels[s];
                        if ((e = this.getLevelsForPathway(a)).length > 0) {
                            this.log('Setting Pathway to "' + a + '"'),
                            this.pathwayId = a,
                            ur(e),
                            this.hls.trigger(S.LEVELS_UPDATED, {
                                levels: e
                            });
                            var l = this.hls.levels[s];
                            o && l && this.levels && (l.attrs["STABLE-VARIANT-ID"] !== o.attrs["STABLE-VARIANT-ID"] && l.bitrate !== o.bitrate && this.log("Unstable Pathways change from bitrate " + o.bitrate + " to " + l.bitrate),
                            this.hls.nextLoadLevel = s);
                            break
                        }
                    }
                }
            }
            ,
            e.getPathwayForGroupId = function(t, e, r) {
                for (var i = this.getLevelsForPathway(r).concat(this.levels || []), n = 0; n < i.length; n++)
                    if (e === be && i[n].hasAudioGroup(t) || e === De && i[n].hasSubtitleGroup(t))
                        return i[n].pathwayId;
                return r
            }
            ,
            e.clonePathways = function(t) {
                var e = this
                  , r = this.levels;
                if (r) {
                    var i = {}
                      , n = {};
                    t.forEach((function(t) {
                        var a = t.ID
                          , s = t["BASE-ID"]
                          , o = t["URI-REPLACEMENT"];
                        if (!r.some((function(t) {
                            return t.pathwayId === a
                        }
                        ))) {
                            var l = e.getLevelsForPathway(s).map((function(t) {
                                var e = new x(t.attrs);
                                e["PATHWAY-ID"] = a;
                                var r = e.AUDIO && e.AUDIO + "_clone_" + a
                                  , s = e.SUBTITLES && e.SUBTITLES + "_clone_" + a;
                                r && (i[e.AUDIO] = r,
                                e.AUDIO = r),
                                s && (n[e.SUBTITLES] = s,
                                e.SUBTITLES = s);
                                var l = Gs(t.uri, e["STABLE-VARIANT-ID"], "PER-VARIANT-URIS", o)
                                  , u = new tr({
                                    attrs: e,
                                    audioCodec: t.audioCodec,
                                    bitrate: t.bitrate,
                                    height: t.height,
                                    name: t.name,
                                    url: l,
                                    videoCodec: t.videoCodec,
                                    width: t.width
                                });
                                if (t.audioGroups)
                                    for (var h = 1; h < t.audioGroups.length; h++)
                                        u.addGroupId("audio", t.audioGroups[h] + "_clone_" + a);
                                if (t.subtitleGroups)
                                    for (var d = 1; d < t.subtitleGroups.length; d++)
                                        u.addGroupId("text", t.subtitleGroups[d] + "_clone_" + a);
                                return u
                            }
                            ));
                            r.push.apply(r, l),
                            Bs(e.audioTracks, i, o, a),
                            Bs(e.subtitleTracks, n, o, a)
                        }
                    }
                    ))
                }
            }
            ,
            e.loadSteeringManifest = function(t) {
                var e, r = this, i = this.hls.config, n = i.loader;
                this.loader && this.loader.destroy(),
                this.loader = new n(i);
                try {
                    e = new self.URL(t)
                } catch (e) {
                    return this.enabled = !1,
                    void this.log("Failed to parse Steering Manifest URI: " + t)
                }
                if ("data:" !== e.protocol) {
                    var a = 0 | (this.hls.bandwidthEstimate || i.abrEwmaDefaultEstimate);
                    e.searchParams.set("_HLS_pathway", this.pathwayId),
                    e.searchParams.set("_HLS_throughput", "" + a)
                }
                var s = {
                    responseType: "json",
                    url: e.href
                }
                  , o = i.steeringManifestLoadPolicy.default
                  , l = o.errorRetry || o.timeoutRetry || {}
                  , u = {
                    loadPolicy: o,
                    timeout: o.maxLoadTimeMs,
                    maxRetry: l.maxNumRetry || 0,
                    retryDelay: l.retryDelayMs || 0,
                    maxRetryDelay: l.maxRetryDelayMs || 0
                }
                  , h = {
                    onSuccess: function(t, i, n, a) {
                        r.log('Loaded steering manifest: "' + e + '"');
                        var s = t.data;
                        if (1 === s.VERSION) {
                            r.updated = performance.now(),
                            r.timeToLoad = s.TTL;
                            var o = s["RELOAD-URI"]
                              , l = s["PATHWAY-CLONES"]
                              , u = s["PATHWAY-PRIORITY"];
                            if (o)
                                try {
                                    r.uri = new self.URL(o,e).href
                                } catch (t) {
                                    return r.enabled = !1,
                                    void r.log("Failed to parse Steering Manifest RELOAD-URI: " + o)
                                }
                            r.scheduleRefresh(r.uri || n.url),
                            l && r.clonePathways(l);
                            var h = {
                                steeringManifest: s,
                                url: e.toString()
                            };
                            r.hls.trigger(S.STEERING_MANIFEST_LOADED, h),
                            u && r.updatePathwayPriority(u)
                        } else
                            r.log("Steering VERSION " + s.VERSION + " not supported!")
                    },
                    onError: function(t, e, i, n) {
                        if (r.log("Error loading steering manifest: " + t.code + " " + t.text + " (" + e.url + ")"),
                        r.stopLoad(),
                        410 === t.code)
                            return r.enabled = !1,
                            void r.log("Steering manifest " + e.url + " no longer available");
                        var a = 1e3 * r.timeToLoad;
                        if (429 !== t.code)
                            r.scheduleRefresh(r.uri || e.url, a);
                        else {
                            var s = r.loader;
                            if ("function" == typeof (null == s ? void 0 : s.getResponseHeader)) {
                                var o = s.getResponseHeader("Retry-After");
                                o && (a = 1e3 * parseFloat(o))
                            }
                            r.log("Steering manifest " + e.url + " rate limited")
                        }
                    },
                    onTimeout: function(t, e, i) {
                        r.log("Timeout loading steering manifest (" + e.url + ")"),
                        r.scheduleRefresh(r.uri || e.url)
                    }
                };
                this.log("Requesting steering manifest: " + e),
                this.loader.load(s, u, h)
            }
            ,
            e.scheduleRefresh = function(t, e) {
                var r = this;
                void 0 === e && (e = 1e3 * this.timeToLoad),
                this.clearTimeout(),
                this.reloadTimer = self.setTimeout((function() {
                    var e, i = null == (e = r.hls) ? void 0 : e.media;
                    !i || i.ended ? r.scheduleRefresh(t, 1e3 * r.timeToLoad) : r.loadSteeringManifest(t)
                }
                ), e)
            }
            ,
            t
        }();
        function Bs(t, e, r, i) {
            t && Object.keys(e).forEach((function(n) {
                var a = t.filter((function(t) {
                    return t.groupId === n
                }
                )).map((function(t) {
                    var a = o({}, t);
                    return a.details = void 0,
                    a.attrs = new x(a.attrs),
                    a.url = a.attrs.URI = Gs(t.url, t.attrs["STABLE-RENDITION-ID"], "PER-RENDITION-URIS", r),
                    a.groupId = a.attrs["GROUP-ID"] = e[n],
                    a.attrs["PATHWAY-ID"] = i,
                    a
                }
                ));
                t.push.apply(t, a)
            }
            ))
        }
        function Gs(t, e, r, i) {
            var n, a = i.HOST, s = i.PARAMS, o = i[r];
            e && (n = null == o ? void 0 : o[e]) && (t = n);
            var l = new self.URL(t);
            return a && !n && (l.host = a),
            s && Object.keys(s).sort().forEach((function(t) {
                t && l.searchParams.set(t, s[t])
            }
            )),
            l.href
        }
        var Ks = /^age:\s*[\d.]+\s*$/im
          , Hs = function() {
            function t(t) {
                this.xhrSetup = void 0,
                this.requestTimeout = void 0,
                this.retryTimeout = void 0,
                this.retryDelay = void 0,
                this.config = null,
                this.callbacks = null,
                this.context = null,
                this.loader = null,
                this.stats = void 0,
                this.xhrSetup = t && t.xhrSetup || null,
                this.stats = new M,
                this.retryDelay = 0
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.callbacks = null,
                this.abortInternal(),
                this.loader = null,
                this.config = null,
                this.context = null,
                this.xhrSetup = null,
                this.stats = null
            }
            ,
            e.abortInternal = function() {
                var t = this.loader;
                self.clearTimeout(this.requestTimeout),
                self.clearTimeout(this.retryTimeout),
                t && (t.onreadystatechange = null,
                t.onprogress = null,
                4 !== t.readyState && (this.stats.aborted = !0,
                t.abort()))
            }
            ,
            e.abort = function() {
                var t;
                this.abortInternal(),
                null != (t = this.callbacks) && t.onAbort && this.callbacks.onAbort(this.stats, this.context, this.loader)
            }
            ,
            e.load = function(t, e, r) {
                if (this.stats.loading.start)
                    throw new Error("Loader can only be used once.");
                this.stats.loading.start = self.performance.now(),
                this.context = t,
                this.config = e,
                this.callbacks = r,
                this.loadInternal()
            }
            ,
            e.loadInternal = function() {
                var t = this
                  , e = this.config
                  , r = this.context;
                if (e && r) {
                    var i = this.loader = new self.XMLHttpRequest
                      , n = this.stats;
                    n.loading.first = 0,
                    n.loaded = 0,
                    n.aborted = !1;
                    var a = this.xhrSetup;
                    a ? Promise.resolve().then((function() {
                        if (!t.stats.aborted)
                            return a(i, r.url)
                    }
                    )).catch((function(t) {
                        return i.open("GET", r.url, !0),
                        a(i, r.url)
                    }
                    )).then((function() {
                        t.stats.aborted || t.openAndSendXhr(i, r, e)
                    }
                    )).catch((function(e) {
                        t.callbacks.onError({
                            code: i.status,
                            text: e.message
                        }, r, i, n)
                    }
                    )) : this.openAndSendXhr(i, r, e)
                }
            }
            ,
            e.openAndSendXhr = function(t, e, r) {
                t.readyState || t.open("GET", e.url, !0);
                var i = e.headers
                  , n = r.loadPolicy
                  , a = n.maxTimeToFirstByteMs
                  , s = n.maxLoadTimeMs;
                if (i)
                    for (var o in i)
                        t.setRequestHeader(o, i[o]);
                e.rangeEnd && t.setRequestHeader("Range", "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)),
                t.onreadystatechange = this.readystatechange.bind(this),
                t.onprogress = this.loadprogress.bind(this),
                t.responseType = e.responseType,
                self.clearTimeout(this.requestTimeout),
                r.timeout = a && y(a) ? a : s,
                this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), r.timeout),
                t.send()
            }
            ,
            e.readystatechange = function() {
                var t = this.context
                  , e = this.loader
                  , r = this.stats;
                if (t && e) {
                    var i = e.readyState
                      , n = this.config;
                    if (!r.aborted && i >= 2 && (0 === r.loading.first && (r.loading.first = Math.max(self.performance.now(), r.loading.start),
                    n.timeout !== n.loadPolicy.maxLoadTimeMs && (self.clearTimeout(this.requestTimeout),
                    n.timeout = n.loadPolicy.maxLoadTimeMs,
                    this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), n.loadPolicy.maxLoadTimeMs - (r.loading.first - r.loading.start)))),
                    4 === i)) {
                        self.clearTimeout(this.requestTimeout),
                        e.onreadystatechange = null,
                        e.onprogress = null;
                        var a = e.status
                          , s = "text" !== e.responseType;
                        if (a >= 200 && a < 300 && (s && e.response || null !== e.responseText)) {
                            r.loading.end = Math.max(self.performance.now(), r.loading.first);
                            var o = s ? e.response : e.responseText
                              , l = "arraybuffer" === e.responseType ? o.byteLength : o.length;
                            if (r.loaded = r.total = l,
                            r.bwEstimate = 8e3 * r.total / (r.loading.end - r.loading.first),
                            !this.callbacks)
                                return;
                            var u = this.callbacks.onProgress;
                            if (u && u(r, t, o, e),
                            !this.callbacks)
                                return;
                            var h = {
                                url: e.responseURL,
                                data: o,
                                code: a
                            };
                            this.callbacks.onSuccess(h, r, t, e)
                        } else {
                            var d = n.loadPolicy.errorRetry;
                            gr(d, r.retry, !1, {
                                url: t.url,
                                data: void 0,
                                code: a
                            }) ? this.retry(d) : (w.error(a + " while loading " + t.url),
                            this.callbacks.onError({
                                code: a,
                                text: e.statusText
                            }, t, e, r))
                        }
                    }
                }
            }
            ,
            e.loadtimeout = function() {
                var t, e = null == (t = this.config) ? void 0 : t.loadPolicy.timeoutRetry;
                if (gr(e, this.stats.retry, !0))
                    this.retry(e);
                else {
                    var r;
                    w.warn("timeout while loading " + (null == (r = this.context) ? void 0 : r.url));
                    var i = this.callbacks;
                    i && (this.abortInternal(),
                    i.onTimeout(this.stats, this.context, this.loader))
                }
            }
            ,
            e.retry = function(t) {
                var e = this.context
                  , r = this.stats;
                this.retryDelay = cr(t, r.retry),
                r.retry++,
                w.warn((status ? "HTTP Status " + status : "Timeout") + " while loading " + (null == e ? void 0 : e.url) + ", retrying " + r.retry + "/" + t.maxNumRetry + " in " + this.retryDelay + "ms"),
                this.abortInternal(),
                this.loader = null,
                self.clearTimeout(this.retryTimeout),
                this.retryTimeout = self.setTimeout(this.loadInternal.bind(this), this.retryDelay)
            }
            ,
            e.loadprogress = function(t) {
                var e = this.stats;
                e.loaded = t.loaded,
                t.lengthComputable && (e.total = t.total)
            }
            ,
            e.getCacheAge = function() {
                var t = null;
                if (this.loader && Ks.test(this.loader.getAllResponseHeaders())) {
                    var e = this.loader.getResponseHeader("age");
                    t = e ? parseFloat(e) : null
                }
                return t
            }
            ,
            e.getResponseHeader = function(t) {
                return this.loader && new RegExp("^" + t + ":\\s*[\\d.]+\\s*$","im").test(this.loader.getAllResponseHeaders()) ? this.loader.getResponseHeader(t) : null
            }
            ,
            t
        }()
          , Vs = /(\d+)-(\d+)\/(\d+)/
          , Ys = function() {
            function t(t) {
                this.fetchSetup = void 0,
                this.requestTimeout = void 0,
                this.request = null,
                this.response = null,
                this.controller = void 0,
                this.context = null,
                this.config = null,
                this.callbacks = null,
                this.stats = void 0,
                this.loader = null,
                this.fetchSetup = t.fetchSetup || Ws,
                this.controller = new self.AbortController,
                this.stats = new M
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.loader = this.callbacks = this.context = this.config = this.request = null,
                this.abortInternal(),
                this.response = null,
                this.fetchSetup = this.controller = this.stats = null
            }
            ,
            e.abortInternal = function() {
                this.controller && !this.stats.loading.end && (this.stats.aborted = !0,
                this.controller.abort())
            }
            ,
            e.abort = function() {
                var t;
                this.abortInternal(),
                null != (t = this.callbacks) && t.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response)
            }
            ,
            e.load = function(t, e, r) {
                var i = this
                  , n = this.stats;
                if (n.loading.start)
                    throw new Error("Loader can only be used once.");
                n.loading.start = self.performance.now();
                var a = function(t, e) {
                    var r = {
                        method: "GET",
                        mode: "cors",
                        credentials: "same-origin",
                        signal: e,
                        headers: new self.Headers(o({}, t.headers))
                    };
                    return t.rangeEnd && r.headers.set("Range", "bytes=" + t.rangeStart + "-" + String(t.rangeEnd - 1)),
                    r
                }(t, this.controller.signal)
                  , s = r.onProgress
                  , l = "arraybuffer" === t.responseType
                  , u = l ? "byteLength" : "length"
                  , h = e.loadPolicy
                  , d = h.maxTimeToFirstByteMs
                  , c = h.maxLoadTimeMs;
                this.context = t,
                this.config = e,
                this.callbacks = r,
                this.request = this.fetchSetup(t, a),
                self.clearTimeout(this.requestTimeout),
                e.timeout = d && y(d) ? d : c,
                this.requestTimeout = self.setTimeout((function() {
                    i.abortInternal(),
                    r.onTimeout(n, t, i.response)
                }
                ), e.timeout),
                self.fetch(this.request).then((function(a) {
                    i.response = i.loader = a;
                    var o = Math.max(self.performance.now(), n.loading.start);
                    if (self.clearTimeout(i.requestTimeout),
                    e.timeout = c,
                    i.requestTimeout = self.setTimeout((function() {
                        i.abortInternal(),
                        r.onTimeout(n, t, i.response)
                    }
                    ), c - (o - n.loading.start)),
                    !a.ok) {
                        var u = a.status
                          , h = a.statusText;
                        throw new qs(h || "fetch, bad network response",u,a)
                    }
                    return n.loading.first = o,
                    n.total = function(t) {
                        var e = t.get("Content-Range");
                        if (e) {
                            var r = function(t) {
                                var e = Vs.exec(t);
                                if (e)
                                    return parseInt(e[2]) - parseInt(e[1]) + 1
                            }(e);
                            if (y(r))
                                return r
                        }
                        var i = t.get("Content-Length");
                        if (i)
                            return parseInt(i)
                    }(a.headers) || n.total,
                    s && y(e.highWaterMark) ? i.loadProgressively(a, n, t, e.highWaterMark, s) : l ? a.arrayBuffer() : "json" === t.responseType ? a.json() : a.text()
                }
                )).then((function(a) {
                    var o = i.response;
                    if (!o)
                        throw new Error("loader destroyed");
                    self.clearTimeout(i.requestTimeout),
                    n.loading.end = Math.max(self.performance.now(), n.loading.first);
                    var l = a[u];
                    l && (n.loaded = n.total = l);
                    var h = {
                        url: o.url,
                        data: a,
                        code: o.status
                    };
                    s && !y(e.highWaterMark) && s(n, t, a, o),
                    r.onSuccess(h, n, t, o)
                }
                )).catch((function(e) {
                    if (self.clearTimeout(i.requestTimeout),
                    !n.aborted) {
                        var a = e && e.code || 0
                          , s = e ? e.message : null;
                        r.onError({
                            code: a,
                            text: s
                        }, t, e ? e.details : null, n)
                    }
                }
                ))
            }
            ,
            e.getCacheAge = function() {
                var t = null;
                if (this.response) {
                    var e = this.response.headers.get("age");
                    t = e ? parseFloat(e) : null
                }
                return t
            }
            ,
            e.getResponseHeader = function(t) {
                return this.response ? this.response.headers.get(t) : null
            }
            ,
            e.loadProgressively = function(t, e, r, i, n) {
                void 0 === i && (i = 0);
                var a = new ki
                  , s = t.body.getReader();
                return function o() {
                    return s.read().then((function(s) {
                        if (s.done)
                            return a.dataLength && n(e, r, a.flush(), t),
                            Promise.resolve(new ArrayBuffer(0));
                        var l = s.value
                          , u = l.length;
                        return e.loaded += u,
                        u < i || a.dataLength ? (a.push(l),
                        a.dataLength >= i && n(e, r, a.flush(), t)) : n(e, r, l, t),
                        o()
                    }
                    )).catch((function() {
                        return Promise.reject()
                    }
                    ))
                }()
            }
            ,
            t
        }();
        function Ws(t, e) {
            return new self.Request(t.url,e)
        }
        var js, qs = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e) || this).code = void 0,
                n.details = void 0,
                n.code = r,
                n.details = i,
                n
            }
            return l(e, t),
            e
        }(c(Error)), Xs = /\s/, zs = i(i({
            autoStartLoad: !0,
            startPosition: -1,
            defaultAudioCodec: void 0,
            debug: !1,
            capLevelOnFPSDrop: !1,
            capLevelToPlayerSize: !1,
            ignoreDevicePixelRatio: !1,
            preferManagedMediaSource: !0,
            initialLiveManifestSize: 1,
            maxBufferLength: 30,
            backBufferLength: 1 / 0,
            frontBufferFlushThreshold: 1 / 0,
            maxBufferSize: 6e7,
            maxBufferHole: .1,
            highBufferWatchdogPeriod: 2,
            nudgeOffset: .1,
            nudgeMaxRetry: 3,
            maxFragLookUpTolerance: .25,
            liveSyncDurationCount: 3,
            liveMaxLatencyDurationCount: 1 / 0,
            liveSyncDuration: void 0,
            liveMaxLatencyDuration: void 0,
            maxLiveSyncPlaybackRate: 1,
            liveDurationInfinity: !1,
            liveBackBufferLength: null,
            maxMaxBufferLength: 600,
            enableWorker: !0,
            workerPath: null,
            enableSoftwareAES: !0,
            startLevel: void 0,
            startFragPrefetch: !1,
            fpsDroppedMonitoringPeriod: 5e3,
            fpsDroppedMonitoringThreshold: .2,
            appendErrorMaxRetry: 3,
            loader: Hs,
            fLoader: void 0,
            pLoader: void 0,
            xhrSetup: void 0,
            licenseXhrSetup: void 0,
            licenseResponseCallback: void 0,
            abrController: Br,
            bufferController: Qn,
            capLevelController: qa,
            errorController: br,
            fpsController: Xa,
            stretchShortVideoTrack: !1,
            maxAudioFramesDrift: 1,
            forceKeyFrameOnDiscontinuity: !0,
            abrEwmaFastLive: 3,
            abrEwmaSlowLive: 9,
            abrEwmaFastVoD: 3,
            abrEwmaSlowVoD: 9,
            abrEwmaDefaultEstimate: 5e5,
            abrEwmaDefaultEstimateMax: 5e6,
            abrBandWidthFactor: .95,
            abrBandWidthUpFactor: .7,
            abrMaxWithRealBitrate: !1,
            maxStarvationDelay: 4,
            maxLoadingDelay: 4,
            minAutoBitrate: 0,
            emeEnabled: !1,
            widevineLicenseUrl: void 0,
            drmSystems: {},
            drmSystemOptions: {},
            requestMediaKeySystemAccessFunc: it,
            testBandwidth: !0,
            progressive: !1,
            lowLatencyMode: !0,
            cmcd: void 0,
            enableDateRangeMetadataCues: !0,
            enableEmsgMetadataCues: !0,
            enableID3MetadataCues: !0,
            useMediaCapabilities: !0,
            certLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 8e3,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: null,
                    errorRetry: null
                }
            },
            keyLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 8e3,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 1,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 2e4,
                        backoff: "linear"
                    },
                    errorRetry: {
                        maxNumRetry: 8,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 2e4,
                        backoff: "linear"
                    }
                }
            },
            manifestLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1 / 0,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 1,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            playlistLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            fragLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 12e4,
                    timeoutRetry: {
                        maxNumRetry: 4,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 6,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            steeringManifestLoadPolicy: {
                default: {
                    maxTimeToFirstByteMs: 1e4,
                    maxLoadTimeMs: 2e4,
                    timeoutRetry: {
                        maxNumRetry: 2,
                        retryDelayMs: 0,
                        maxRetryDelayMs: 0
                    },
                    errorRetry: {
                        maxNumRetry: 1,
                        retryDelayMs: 1e3,
                        maxRetryDelayMs: 8e3
                    }
                }
            },
            manifestLoadingTimeOut: 1e4,
            manifestLoadingMaxRetry: 1,
            manifestLoadingRetryDelay: 1e3,
            manifestLoadingMaxRetryTimeout: 64e3,
            levelLoadingTimeOut: 1e4,
            levelLoadingMaxRetry: 4,
            levelLoadingRetryDelay: 1e3,
            levelLoadingMaxRetryTimeout: 64e3,
            fragLoadingTimeOut: 2e4,
            fragLoadingMaxRetry: 6,
            fragLoadingRetryDelay: 1e3,
            fragLoadingMaxRetryTimeout: 64e3
        }, {
            cueHandler: {
                newCue: function(t, e, r, i) {
                    for (var n, a, s, o, l, u = [], h = self.VTTCue || self.TextTrackCue, d = 0; d < i.rows.length; d++)
                        if (s = !0,
                        o = 0,
                        l = "",
                        !(n = i.rows[d]).isEmpty()) {
                            for (var c, f = 0; f < n.chars.length; f++)
                                Xs.test(n.chars[f].uchar) && s ? o++ : (l += n.chars[f].uchar,
                                s = !1);
                            n.cueStartTime = e,
                            e === r && (r += 1e-4),
                            o >= 16 ? o-- : o++;
                            var g = ba(l.trim())
                              , v = _a(e, r, g);
                            null != t && null != (c = t.cues) && c.getCueById(v) || ((a = new h(e,r,g)).id = v,
                            a.line = d + 1,
                            a.align = "left",
                            a.position = 10 + Math.min(80, 10 * Math.floor(8 * o / 32)),
                            u.push(a))
                        }
                    return t && u.length && (u.sort((function(t, e) {
                        return "auto" === t.line || "auto" === e.line ? 0 : t.line > 8 && e.line > 8 ? e.line - t.line : t.line - e.line
                    }
                    )),
                    u.forEach((function(e) {
                        return Me(t, e)
                    }
                    ))),
                    u
                }
            },
            enableWebVTT: !0,
            enableIMSC1: !0,
            enableCEA708Captions: !0,
            captionsTextTrack1Label: "English",
            captionsTextTrack1LanguageCode: "en",
            captionsTextTrack2Label: "Spanish",
            captionsTextTrack2LanguageCode: "es",
            captionsTextTrack3Label: "Unknown CC",
            captionsTextTrack3LanguageCode: "",
            captionsTextTrack4Label: "Unknown CC",
            captionsTextTrack4LanguageCode: "",
            renderTextTracksNatively: !0
        }), {}, {
            subtitleStreamController: Wn,
            subtitleTrackController: qn,
            timelineController: Ya,
            audioStreamController: Vn,
            audioTrackController: Yn,
            emeController: Qa,
            cmcdController: Ns,
            contentSteeringController: Us
        });
        function Qs(t) {
            return t && "object" == typeof t ? Array.isArray(t) ? t.map(Qs) : Object.keys(t).reduce((function(e, r) {
                return e[r] = Qs(t[r]),
                e
            }
            ), {}) : t
        }
        function Js(t) {
            var e = t.loader;
            e !== Ys && e !== Hs ? (w.log("[config]: Custom loader detected, cannot enable progressive streaming"),
            t.progressive = !1) : function() {
                if (self.fetch && self.AbortController && self.ReadableStream && self.Request)
                    try {
                        return new self.ReadableStream({}),
                        !0
                    } catch (t) {}
                return !1
            }() && (t.loader = Ys,
            t.progressive = !0,
            t.enableSoftwareAES = !0,
            w.log("[config]: Progressive streaming enabled, using FetchLoader"))
        }
        var $s = function(t) {
            function e(e, r) {
                var i;
                return (i = t.call(this, e, "[level-controller]") || this)._levels = [],
                i._firstLevel = -1,
                i._maxAutoLevel = -1,
                i._startLevel = void 0,
                i.currentLevel = null,
                i.currentLevelIndex = -1,
                i.manualLevelIndex = -1,
                i.steering = void 0,
                i.onParsedComplete = void 0,
                i.steering = r,
                i._registerListeners(),
                i
            }
            l(e, t);
            var r = e.prototype;
            return r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.on(S.ERROR, this.onError, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_LOADED, this.onManifestLoaded, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this),
                t.off(S.ERROR, this.onError, this)
            }
            ,
            r.destroy = function() {
                this._unregisterListeners(),
                this.steering = null,
                this.resetLevels(),
                t.prototype.destroy.call(this)
            }
            ,
            r.stopLoad = function() {
                this._levels.forEach((function(t) {
                    t.loadError = 0,
                    t.fragmentError = 0
                }
                )),
                t.prototype.stopLoad.call(this)
            }
            ,
            r.resetLevels = function() {
                this._startLevel = void 0,
                this.manualLevelIndex = -1,
                this.currentLevelIndex = -1,
                this.currentLevel = null,
                this._levels = [],
                this._maxAutoLevel = -1
            }
            ,
            r.onManifestLoading = function(t, e) {
                this.resetLevels()
            }
            ,
            r.onManifestLoaded = function(t, e) {
                var r = this.hls.config.preferManagedMediaSource
                  , i = []
                  , n = {}
                  , a = {}
                  , s = !1
                  , o = !1
                  , l = !1;
                e.levels.forEach((function(t) {
                    var e, u, h = t.attrs, d = t.audioCodec, c = t.videoCodec;
                    -1 !== (null == (e = d) ? void 0 : e.indexOf("mp4a.40.34")) && (js || (js = /chrome|firefox/i.test(navigator.userAgent)),
                    js && (t.audioCodec = d = void 0)),
                    d && (t.audioCodec = d = ue(d, r)),
                    0 === (null == (u = c) ? void 0 : u.indexOf("avc1")) && (c = t.videoCodec = function(t) {
                        var e = t.split(".");
                        if (e.length > 2) {
                            var r = e.shift() + ".";
                            return (r += parseInt(e.shift()).toString(16)) + ("000" + parseInt(e.shift()).toString(16)).slice(-4)
                        }
                        return t
                    }(c));
                    var f = t.width
                      , g = t.height
                      , v = t.unknownCodecs;
                    if (s || (s = !(!f || !g)),
                    o || (o = !!c),
                    l || (l = !!d),
                    !(null != v && v.length || d && !re(d, "audio", r) || c && !re(c, "video", r))) {
                        var m = h.CODECS
                          , p = h["FRAME-RATE"]
                          , y = h["HDCP-LEVEL"]
                          , E = h["PATHWAY-ID"]
                          , T = h.RESOLUTION
                          , S = h["VIDEO-RANGE"]
                          , L = (E || ".") + "-" + t.bitrate + "-" + T + "-" + p + "-" + m + "-" + S + "-" + y;
                        if (n[L])
                            if (n[L].uri === t.url || t.attrs["PATHWAY-ID"])
                                n[L].addGroupId("audio", h.AUDIO),
                                n[L].addGroupId("text", h.SUBTITLES);
                            else {
                                var A = a[L] += 1;
                                t.attrs["PATHWAY-ID"] = new Array(A + 1).join(".");
                                var R = new tr(t);
                                n[L] = R,
                                i.push(R)
                            }
                        else {
                            var k = new tr(t);
                            n[L] = k,
                            a[L] = 1,
                            i.push(k)
                        }
                    }
                }
                )),
                this.filterAndSortMediaOptions(i, e, s, o, l)
            }
            ,
            r.filterAndSortMediaOptions = function(t, e, r, i, n) {
                var a = this
                  , s = []
                  , o = []
                  , l = t;
                if ((r || i) && n && (l = l.filter((function(t) {
                    var e, r = t.videoCodec, i = t.videoRange, n = t.width, a = t.height;
                    return (!!r || !(!n || !a)) && !!(e = i) && ze.indexOf(e) > -1
                }
                ))),
                0 !== l.length) {
                    if (e.audioTracks) {
                        var u = this.hls.config.preferManagedMediaSource;
                        Zs(s = e.audioTracks.filter((function(t) {
                            return !t.audioCodec || re(t.audioCodec, "audio", u)
                        }
                        )))
                    }
                    e.subtitles && Zs(o = e.subtitles);
                    var h = l.slice(0);
                    l.sort((function(t, e) {
                        if (t.attrs["HDCP-LEVEL"] !== e.attrs["HDCP-LEVEL"])
                            return (t.attrs["HDCP-LEVEL"] || "") > (e.attrs["HDCP-LEVEL"] || "") ? 1 : -1;
                        if (r && t.height !== e.height)
                            return t.height - e.height;
                        if (t.frameRate !== e.frameRate)
                            return t.frameRate - e.frameRate;
                        if (t.videoRange !== e.videoRange)
                            return ze.indexOf(t.videoRange) - ze.indexOf(e.videoRange);
                        if (t.videoCodec !== e.videoCodec) {
                            var i = ae(t.videoCodec)
                              , n = ae(e.videoCodec);
                            if (i !== n)
                                return n - i
                        }
                        if (t.uri === e.uri && t.codecSet !== e.codecSet) {
                            var a = se(t.codecSet)
                              , s = se(e.codecSet);
                            if (a !== s)
                                return s - a
                        }
                        return t.averageBitrate !== e.averageBitrate ? t.averageBitrate - e.averageBitrate : 0
                    }
                    ));
                    var d = h[0];
                    if (this.steering && (l = this.steering.filterParsedLevels(l)).length !== h.length)
                        for (var c = 0; c < h.length; c++)
                            if (h[c].pathwayId === l[0].pathwayId) {
                                d = h[c];
                                break
                            }
                    this._levels = l;
                    for (var f = 0; f < l.length; f++)
                        if (l[f] === d) {
                            var g;
                            this._firstLevel = f;
                            var v = d.bitrate
                              , m = this.hls.bandwidthEstimate;
                            if (this.log("manifest loaded, " + l.length + " level(s) found, first bitrate: " + v),
                            void 0 === (null == (g = this.hls.userConfig) ? void 0 : g.abrEwmaDefaultEstimate)) {
                                var p = Math.min(v, this.hls.config.abrEwmaDefaultEstimateMax);
                                p > m && m === zs.abrEwmaDefaultEstimate && (this.hls.bandwidthEstimate = p)
                            }
                            break
                        }
                    var y = n && !i
                      , E = {
                        levels: l,
                        audioTracks: s,
                        subtitleTracks: o,
                        sessionData: e.sessionData,
                        sessionKeys: e.sessionKeys,
                        firstLevel: this._firstLevel,
                        stats: e.stats,
                        audio: n,
                        video: i,
                        altAudio: !y && s.some((function(t) {
                            return !!t.url
                        }
                        ))
                    };
                    this.hls.trigger(S.MANIFEST_PARSED, E),
                    (this.hls.config.autoStartLoad || this.hls.forceStartLoad) && this.hls.startLoad(this.hls.config.startPosition)
                } else
                    Promise.resolve().then((function() {
                        if (a.hls) {
                            e.levels.length && a.warn("One or more CODECS in variant not supported: " + JSON.stringify(e.levels[0].attrs));
                            var t = new Error("no level with compatible codecs found in manifest");
                            a.hls.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                fatal: !0,
                                url: e.url,
                                error: t,
                                reason: t.message
                            })
                        }
                    }
                    ))
            }
            ,
            r.onError = function(t, e) {
                !e.fatal && e.context && e.context.type === ke && e.context.level === this.level && this.checkRetry(e)
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r = e.frag;
                if (void 0 !== r && r.type === Ie) {
                    var i = r.elementaryStreams;
                    if (!Object.keys(i).some((function(t) {
                        return !!i[t]
                    }
                    )))
                        return;
                    var n = this._levels[r.level];
                    null != n && n.loadError && (this.log("Resetting level error count of " + n.loadError + " on frag buffered"),
                    n.loadError = 0)
                }
            }
            ,
            r.onLevelLoaded = function(t, e) {
                var r, i, n = e.level, a = e.details, s = this._levels[n];
                if (!s)
                    return this.warn("Invalid level index " + n),
                    void (null != (i = e.deliveryDirectives) && i.skip && (a.deltaUpdateFailed = !0));
                n === this.currentLevelIndex ? (0 === s.fragmentError && (s.loadError = 0),
                this.playlistLoaded(n, e, s.details)) : null != (r = e.deliveryDirectives) && r.skip && (a.deltaUpdateFailed = !0)
            }
            ,
            r.loadPlaylist = function(e) {
                t.prototype.loadPlaylist.call(this);
                var r = this.currentLevelIndex
                  , i = this.currentLevel;
                if (i && this.shouldLoadPlaylist(i)) {
                    var n = i.uri;
                    if (e)
                        try {
                            n = e.addDirectives(n)
                        } catch (t) {
                            this.warn("Could not construct new URL with HLS Delivery Directives: " + t)
                        }
                    var a = i.attrs["PATHWAY-ID"];
                    this.log("Loading level index " + r + (void 0 !== (null == e ? void 0 : e.msn) ? " at sn " + e.msn + " part " + e.part : "") + " with" + (a ? " Pathway " + a : "") + " " + n),
                    this.clearTimer(),
                    this.hls.trigger(S.LEVEL_LOADING, {
                        url: n,
                        level: r,
                        pathwayId: i.attrs["PATHWAY-ID"],
                        id: 0,
                        deliveryDirectives: e || null
                    })
                }
            }
            ,
            r.removeLevel = function(t) {
                var e, r = this, i = this._levels.filter((function(e, i) {
                    return i !== t || (r.steering && r.steering.removeLevel(e),
                    e === r.currentLevel && (r.currentLevel = null,
                    r.currentLevelIndex = -1,
                    e.details && e.details.fragments.forEach((function(t) {
                        return t.level = -1
                    }
                    ))),
                    !1)
                }
                ));
                ur(i),
                this._levels = i,
                this.currentLevelIndex > -1 && null != (e = this.currentLevel) && e.details && (this.currentLevelIndex = this.currentLevel.details.fragments[0].level),
                this.hls.trigger(S.LEVELS_UPDATED, {
                    levels: i
                })
            }
            ,
            r.onLevelsUpdated = function(t, e) {
                var r = e.levels;
                this._levels = r
            }
            ,
            r.checkMaxAutoUpdated = function() {
                var t = this.hls
                  , e = t.autoLevelCapping
                  , r = t.maxAutoLevel
                  , i = t.maxHdcpLevel;
                this._maxAutoLevel !== r && (this._maxAutoLevel = r,
                this.hls.trigger(S.MAX_AUTO_LEVEL_UPDATED, {
                    autoLevelCapping: e,
                    levels: this.levels,
                    maxAutoLevel: r,
                    minAutoLevel: this.hls.minAutoLevel,
                    maxHdcpLevel: i
                }))
            }
            ,
            s(e, [{
                key: "levels",
                get: function() {
                    return 0 === this._levels.length ? null : this._levels
                }
            }, {
                key: "level",
                get: function() {
                    return this.currentLevelIndex
                },
                set: function(t) {
                    var e = this._levels;
                    if (0 !== e.length) {
                        if (t < 0 || t >= e.length) {
                            var r = new Error("invalid level idx")
                              , i = t < 0;
                            if (this.hls.trigger(S.ERROR, {
                                type: L.OTHER_ERROR,
                                details: A.LEVEL_SWITCH_ERROR,
                                level: t,
                                fatal: i,
                                error: r,
                                reason: r.message
                            }),
                            i)
                                return;
                            t = Math.min(t, e.length - 1)
                        }
                        var n = this.currentLevelIndex
                          , a = this.currentLevel
                          , s = a ? a.attrs["PATHWAY-ID"] : void 0
                          , o = e[t]
                          , l = o.attrs["PATHWAY-ID"];
                        if (this.currentLevelIndex = t,
                        this.currentLevel = o,
                        n !== t || !o.details || !a || s !== l) {
                            this.log("Switching to level " + t + " (" + (o.height ? o.height + "p " : "") + (o.videoRange ? o.videoRange + " " : "") + (o.codecSet ? o.codecSet + " " : "") + "@" + o.bitrate + ")" + (l ? " with Pathway " + l : "") + " from level " + n + (s ? " with Pathway " + s : ""));
                            var u = {
                                level: t,
                                attrs: o.attrs,
                                details: o.details,
                                bitrate: o.bitrate,
                                averageBitrate: o.averageBitrate,
                                maxBitrate: o.maxBitrate,
                                realBitrate: o.realBitrate,
                                width: o.width,
                                height: o.height,
                                codecSet: o.codecSet,
                                audioCodec: o.audioCodec,
                                videoCodec: o.videoCodec,
                                audioGroups: o.audioGroups,
                                subtitleGroups: o.subtitleGroups,
                                loaded: o.loaded,
                                loadError: o.loadError,
                                fragmentError: o.fragmentError,
                                name: o.name,
                                id: o.id,
                                uri: o.uri,
                                url: o.url,
                                urlId: 0,
                                audioGroupIds: o.audioGroupIds,
                                textGroupIds: o.textGroupIds
                            };
                            this.hls.trigger(S.LEVEL_SWITCHING, u);
                            var h = o.details;
                            if (!h || h.live) {
                                var d = this.switchParams(o.uri, null == a ? void 0 : a.details);
                                this.loadPlaylist(d)
                            }
                        }
                    }
                }
            }, {
                key: "manualLevel",
                get: function() {
                    return this.manualLevelIndex
                },
                set: function(t) {
                    this.manualLevelIndex = t,
                    void 0 === this._startLevel && (this._startLevel = t),
                    -1 !== t && (this.level = t)
                }
            }, {
                key: "firstLevel",
                get: function() {
                    return this._firstLevel
                },
                set: function(t) {
                    this._firstLevel = t
                }
            }, {
                key: "startLevel",
                get: function() {
                    if (void 0 === this._startLevel) {
                        var t = this.hls.config.startLevel;
                        return void 0 !== t ? t : this.hls.firstAutoLevel
                    }
                    return this._startLevel
                },
                set: function(t) {
                    this._startLevel = t
                }
            }, {
                key: "nextLoadLevel",
                get: function() {
                    return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                },
                set: function(t) {
                    this.level = t,
                    -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t)
                }
            }]),
            e
        }(Dr);
        function Zs(t) {
            var e = {};
            t.forEach((function(t) {
                var r = t.groupId || "";
                t.id = e[r] = e[r] || 0,
                e[r]++
            }
            ))
        }
        var to = function() {
            function t(t) {
                this.config = void 0,
                this.keyUriToKeyInfo = {},
                this.emeController = null,
                this.config = t
            }
            var e = t.prototype;
            return e.abort = function(t) {
                for (var e in this.keyUriToKeyInfo) {
                    var r = this.keyUriToKeyInfo[e].loader;
                    if (r) {
                        var i;
                        if (t && t !== (null == (i = r.context) ? void 0 : i.frag.type))
                            return;
                        r.abort()
                    }
                }
            }
            ,
            e.detach = function() {
                for (var t in this.keyUriToKeyInfo) {
                    var e = this.keyUriToKeyInfo[t];
                    (e.mediaKeySessionContext || e.decryptdata.isCommonEncryption) && delete this.keyUriToKeyInfo[t]
                }
            }
            ,
            e.destroy = function() {
                for (var t in this.detach(),
                this.keyUriToKeyInfo) {
                    var e = this.keyUriToKeyInfo[t].loader;
                    e && e.destroy()
                }
                this.keyUriToKeyInfo = {}
            }
            ,
            e.createKeyLoadError = function(t, e, r, i, n) {
                return void 0 === e && (e = A.KEY_LOAD_ERROR),
                new si({
                    type: L.NETWORK_ERROR,
                    details: e,
                    fatal: !1,
                    frag: t,
                    response: n,
                    error: r,
                    networkDetails: i
                })
            }
            ,
            e.loadClear = function(t, e) {
                var r = this;
                if (this.emeController && this.config.emeEnabled)
                    for (var i = t.sn, n = t.cc, a = function() {
                        var t = e[s];
                        if (n <= t.cc && ("initSegment" === i || "initSegment" === t.sn || i < t.sn))
                            return r.emeController.selectKeySystemFormat(t).then((function(e) {
                                t.setKeyFormat(e)
                            }
                            )),
                            1
                    }, s = 0; s < e.length && !a(); s++)
                        ;
            }
            ,
            e.load = function(t) {
                var e = this;
                return !t.decryptdata && t.encrypted && this.emeController ? this.emeController.selectKeySystemFormat(t).then((function(r) {
                    return e.loadInternal(t, r)
                }
                )) : this.loadInternal(t)
            }
            ,
            e.loadInternal = function(t, e) {
                var r, i;
                e && t.setKeyFormat(e);
                var n = t.decryptdata;
                if (!n) {
                    var a = new Error(e ? "Expected frag.decryptdata to be defined after setting format " + e : "Missing decryption data on fragment in onKeyLoading");
                    return Promise.reject(this.createKeyLoadError(t, A.KEY_LOAD_ERROR, a))
                }
                var s = n.uri;
                if (!s)
                    return Promise.reject(this.createKeyLoadError(t, A.KEY_LOAD_ERROR, new Error('Invalid key URI: "' + s + '"')));
                var o, l = this.keyUriToKeyInfo[s];
                if (null != (r = l) && r.decryptdata.key)
                    return n.key = l.decryptdata.key,
                    Promise.resolve({
                        frag: t,
                        keyInfo: l
                    });
                if (null != (i = l) && i.keyLoadPromise)
                    switch (null == (o = l.mediaKeySessionContext) ? void 0 : o.keyStatus) {
                    case void 0:
                    case "status-pending":
                    case "usable":
                    case "usable-in-future":
                        return l.keyLoadPromise.then((function(e) {
                            return n.key = e.keyInfo.decryptdata.key,
                            {
                                frag: t,
                                keyInfo: l
                            }
                        }
                        ))
                    }
                switch (l = this.keyUriToKeyInfo[s] = {
                    decryptdata: n,
                    keyLoadPromise: null,
                    loader: null,
                    mediaKeySessionContext: null
                },
                n.method) {
                case "ISO-23001-7":
                case "SAMPLE-AES":
                case "SAMPLE-AES-CENC":
                case "SAMPLE-AES-CTR":
                    return "identity" === n.keyFormat ? this.loadKeyHTTP(l, t) : this.loadKeyEME(l, t);
                case "AES-128":
                    return this.loadKeyHTTP(l, t);
                default:
                    return Promise.reject(this.createKeyLoadError(t, A.KEY_LOAD_ERROR, new Error('Key supplied with unsupported METHOD: "' + n.method + '"')))
                }
            }
            ,
            e.loadKeyEME = function(t, e) {
                var r = {
                    frag: e,
                    keyInfo: t
                };
                if (this.emeController && this.config.emeEnabled) {
                    var i = this.emeController.loadKey(r);
                    if (i)
                        return (t.keyLoadPromise = i.then((function(e) {
                            return t.mediaKeySessionContext = e,
                            r
                        }
                        ))).catch((function(e) {
                            throw t.keyLoadPromise = null,
                            e
                        }
                        ))
                }
                return Promise.resolve(r)
            }
            ,
            e.loadKeyHTTP = function(t, e) {
                var r = this
                  , n = this.config
                  , a = new (0,
                n.loader)(n);
                return e.keyLoader = t.loader = a,
                t.keyLoadPromise = new Promise((function(s, o) {
                    var l = {
                        keyInfo: t,
                        frag: e,
                        responseType: "arraybuffer",
                        url: t.decryptdata.uri
                    }
                      , u = n.keyLoadPolicy.default
                      , h = {
                        loadPolicy: u,
                        timeout: u.maxLoadTimeMs,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: 0
                    }
                      , d = {
                        onSuccess: function(t, e, i, n) {
                            var a = i.frag
                              , l = i.keyInfo
                              , u = i.url;
                            if (!a.decryptdata || l !== r.keyUriToKeyInfo[u])
                                return o(r.createKeyLoadError(a, A.KEY_LOAD_ERROR, new Error("after key load, decryptdata unset or changed"), n));
                            l.decryptdata.key = a.decryptdata.key = new Uint8Array(t.data),
                            a.keyLoader = null,
                            l.loader = null,
                            s({
                                frag: a,
                                keyInfo: l
                            })
                        },
                        onError: function(t, n, a, s) {
                            r.resetLoader(n),
                            o(r.createKeyLoadError(e, A.KEY_LOAD_ERROR, new Error("HTTP Error " + t.code + " loading key " + t.text), a, i({
                                url: l.url,
                                data: void 0
                            }, t)))
                        },
                        onTimeout: function(t, i, n) {
                            r.resetLoader(i),
                            o(r.createKeyLoadError(e, A.KEY_LOAD_TIMEOUT, new Error("key loading timed out"), n))
                        },
                        onAbort: function(t, i, n) {
                            r.resetLoader(i),
                            o(r.createKeyLoadError(e, A.INTERNAL_ABORTED, new Error("key loading aborted"), n))
                        }
                    };
                    a.load(l, h, d)
                }
                ))
            }
            ,
            e.resetLoader = function(t) {
                var e = t.frag
                  , r = t.keyInfo
                  , i = t.url
                  , n = r.loader;
                e.keyLoader === n && (e.keyLoader = null,
                r.loader = null),
                delete this.keyUriToKeyInfo[i],
                n && n.destroy()
            }
            ,
            t
        }();
        function eo() {
            return self.SourceBuffer || self.WebKitSourceBuffer
        }
        function ro() {
            if (!te())
                return !1;
            var t = eo();
            return !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove
        }
        var io = function() {
            function t(t, e, r, i) {
                this.config = void 0,
                this.media = null,
                this.fragmentTracker = void 0,
                this.hls = void 0,
                this.nudgeRetry = 0,
                this.stallReported = !1,
                this.stalled = null,
                this.moved = !1,
                this.seeking = !1,
                this.config = t,
                this.media = e,
                this.fragmentTracker = r,
                this.hls = i
            }
            var e = t.prototype;
            return e.destroy = function() {
                this.media = null,
                this.hls = this.fragmentTracker = null
            }
            ,
            e.poll = function(t, e) {
                var r = this.config
                  , i = this.media
                  , n = this.stalled;
                if (null !== i) {
                    var a = i.currentTime
                      , s = i.seeking
                      , o = this.seeking && !s
                      , l = !this.seeking && s;
                    if (this.seeking = s,
                    a === t)
                        if (l || o)
                            this.stalled = null;
                        else if (i.paused && !s || i.ended || 0 === i.playbackRate || !zr.getBuffered(i).length)
                            this.nudgeRetry = 0;
                        else {
                            var u = zr.bufferInfo(i, a, 0)
                              , h = u.nextStart || 0;
                            if (s) {
                                var d = u.len > 2
                                  , c = !h || e && e.start <= a || h - a > 2 && !this.fragmentTracker.getPartialFragment(a);
                                if (d || c)
                                    return;
                                this.moved = !1
                            }
                            if (!this.moved && null !== this.stalled) {
                                var f;
                                if (!(u.len > 0 || h))
                                    return;
                                var g = Math.max(h, u.start || 0) - a
                                  , v = this.hls.levels ? this.hls.levels[this.hls.currentLevel] : null
                                  , m = (null == v || null == (f = v.details) ? void 0 : f.live) ? 2 * v.details.targetduration : 2
                                  , p = this.fragmentTracker.getPartialFragment(a);
                                if (g > 0 && (g <= m || p))
                                    return void (i.paused || this._trySkipBufferHole(p))
                            }
                            var y = self.performance.now();
                            if (null !== n) {
                                var E = y - n;
                                if (s || !(E >= 250) || (this._reportStall(u),
                                this.media)) {
                                    var T = zr.bufferInfo(i, a, r.maxBufferHole);
                                    this._tryFixBufferStall(T, E)
                                }
                            } else
                                this.stalled = y
                        }
                    else if (this.moved = !0,
                    s || (this.nudgeRetry = 0),
                    null !== n) {
                        if (this.stallReported) {
                            var S = self.performance.now() - n;
                            w.warn("playback not stuck anymore @" + a + ", after " + Math.round(S) + "ms"),
                            this.stallReported = !1
                        }
                        this.stalled = null
                    }
                }
            }
            ,
            e._tryFixBufferStall = function(t, e) {
                var r = this.config
                  , i = this.fragmentTracker
                  , n = this.media;
                if (null !== n) {
                    var a = n.currentTime
                      , s = i.getPartialFragment(a);
                    if (s && (this._trySkipBufferHole(s) || !this.media))
                        return;
                    (t.len > r.maxBufferHole || t.nextStart && t.nextStart - a < r.maxBufferHole) && e > 1e3 * r.highBufferWatchdogPeriod && (w.warn("Trying to nudge playhead over buffer-hole"),
                    this.stalled = null,
                    this._tryNudgeBuffer())
                }
            }
            ,
            e._reportStall = function(t) {
                var e = this.hls
                  , r = this.media;
                if (!this.stallReported && r) {
                    this.stallReported = !0;
                    var i = new Error("Playback stalling at @" + r.currentTime + " due to low buffer (" + JSON.stringify(t) + ")");
                    w.warn(i.message),
                    e.trigger(S.ERROR, {
                        type: L.MEDIA_ERROR,
                        details: A.BUFFER_STALLED_ERROR,
                        fatal: !1,
                        error: i,
                        buffer: t.len
                    })
                }
            }
            ,
            e._trySkipBufferHole = function(t) {
                var e = this.config
                  , r = this.hls
                  , i = this.media;
                if (null === i)
                    return 0;
                var n = i.currentTime
                  , a = zr.bufferInfo(i, n, 0)
                  , s = n < a.start ? a.start : a.nextStart;
                if (s) {
                    var o = a.len <= e.maxBufferHole
                      , l = a.len > 0 && a.len < 1 && i.readyState < 3
                      , u = s - n;
                    if (u > 0 && (o || l)) {
                        if (u > e.maxBufferHole) {
                            var h = this.fragmentTracker
                              , d = !1;
                            if (0 === n) {
                                var c = h.getAppendedFrag(0, Ie);
                                c && s < c.end && (d = !0)
                            }
                            if (!d) {
                                var f = t || h.getAppendedFrag(n, Ie);
                                if (f) {
                                    for (var g = !1, v = f.end; v < s; ) {
                                        var m = h.getPartialFragment(v);
                                        if (!m) {
                                            g = !0;
                                            break
                                        }
                                        v += m.duration
                                    }
                                    if (g)
                                        return 0
                                }
                            }
                        }
                        var p = Math.max(s + .05, n + .1);
                        if (w.warn("skipping hole, adjusting currentTime from " + n + " to " + p),
                        this.moved = !0,
                        this.stalled = null,
                        i.currentTime = p,
                        t && !t.gap) {
                            var y = new Error("fragment loaded with buffer holes, seeking from " + n + " to " + p);
                            r.trigger(S.ERROR, {
                                type: L.MEDIA_ERROR,
                                details: A.BUFFER_SEEK_OVER_HOLE,
                                fatal: !1,
                                error: y,
                                reason: y.message,
                                frag: t
                            })
                        }
                        return p
                    }
                }
                return 0
            }
            ,
            e._tryNudgeBuffer = function() {
                var t = this.config
                  , e = this.hls
                  , r = this.media
                  , i = this.nudgeRetry;
                if (null !== r) {
                    var n = r.currentTime;
                    if (this.nudgeRetry++,
                    i < t.nudgeMaxRetry) {
                        var a = n + (i + 1) * t.nudgeOffset
                          , s = new Error("Nudging 'currentTime' from " + n + " to " + a);
                        w.warn(s.message),
                        r.currentTime = a,
                        e.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.BUFFER_NUDGE_ON_STALL,
                            error: s,
                            fatal: !1
                        })
                    } else {
                        var o = new Error("Playhead still not moving while enough data buffered @" + n + " after " + t.nudgeMaxRetry + " nudges");
                        w.error(o.message),
                        e.trigger(S.ERROR, {
                            type: L.MEDIA_ERROR,
                            details: A.BUFFER_STALLED_ERROR,
                            error: o,
                            fatal: !0
                        })
                    }
                }
            }
            ,
            t
        }()
          , no = function(t) {
            function e(e, r, i) {
                var n;
                return (n = t.call(this, e, r, i, "[stream-controller]", Ie) || this).audioCodecSwap = !1,
                n.gapController = null,
                n.level = -1,
                n._forceStartLoad = !1,
                n.altAudio = !1,
                n.audioOnly = !1,
                n.fragPlaying = null,
                n.onvplaying = null,
                n.onvseeked = null,
                n.fragLastKbps = 0,
                n.couldBacktrack = !1,
                n.backtrackFragment = null,
                n.audioCodecSwitch = !1,
                n.videoBuffer = null,
                n._registerListeners(),
                n
            }
            l(e, t);
            var r = e.prototype;
            return r._registerListeners = function() {
                var t = this.hls;
                t.on(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.on(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.on(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.on(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.on(S.LEVEL_LOADING, this.onLevelLoading, this),
                t.on(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.on(S.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this),
                t.on(S.ERROR, this.onError, this),
                t.on(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.on(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.on(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.on(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.on(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.on(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r._unregisterListeners = function() {
                var t = this.hls;
                t.off(S.MEDIA_ATTACHED, this.onMediaAttached, this),
                t.off(S.MEDIA_DETACHING, this.onMediaDetaching, this),
                t.off(S.MANIFEST_LOADING, this.onManifestLoading, this),
                t.off(S.MANIFEST_PARSED, this.onManifestParsed, this),
                t.off(S.LEVEL_LOADED, this.onLevelLoaded, this),
                t.off(S.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this),
                t.off(S.ERROR, this.onError, this),
                t.off(S.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this),
                t.off(S.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this),
                t.off(S.BUFFER_CREATED, this.onBufferCreated, this),
                t.off(S.BUFFER_FLUSHED, this.onBufferFlushed, this),
                t.off(S.LEVELS_UPDATED, this.onLevelsUpdated, this),
                t.off(S.FRAG_BUFFERED, this.onFragBuffered, this)
            }
            ,
            r.onHandlerDestroying = function() {
                this._unregisterListeners(),
                t.prototype.onHandlerDestroying.call(this)
            }
            ,
            r.startLoad = function(t) {
                if (this.levels) {
                    var e = this.lastCurrentTime
                      , r = this.hls;
                    if (this.stopLoad(),
                    this.setInterval(100),
                    this.level = -1,
                    !this.startFragRequested) {
                        var i = r.startLevel;
                        -1 === i && (r.config.testBandwidth && this.levels.length > 1 ? (i = 0,
                        this.bitrateTest = !0) : i = r.firstAutoLevel),
                        this.level = r.nextLoadLevel = i,
                        this.loadedmetadata = !1
                    }
                    e > 0 && -1 === t && (this.log("Override startPosition with lastCurrentTime @" + e.toFixed(3)),
                    t = e),
                    this.state = fi,
                    this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t,
                    this.tick()
                } else
                    this._forceStartLoad = !0,
                    this.state = ci
            }
            ,
            r.stopLoad = function() {
                this._forceStartLoad = !1,
                t.prototype.stopLoad.call(this)
            }
            ,
            r.doTick = function() {
                switch (this.state) {
                case Ai:
                    var t = this.levels
                      , e = this.level
                      , r = null == t ? void 0 : t[e]
                      , i = null == r ? void 0 : r.details;
                    if (i && (!i.live || this.levelLastLoaded === r)) {
                        if (this.waitForCdnTuneIn(i))
                            break;
                        this.state = fi;
                        break
                    }
                    if (this.hls.nextLoadLevel !== this.level) {
                        this.state = fi;
                        break
                    }
                    break;
                case mi:
                    var n, a = self.performance.now(), s = this.retryDate;
                    if (!s || a >= s || null != (n = this.media) && n.seeking) {
                        var o = this.levels
                          , l = this.level
                          , u = null == o ? void 0 : o[l];
                        this.resetStartWhenNotLoaded(u || null),
                        this.state = fi
                    }
                }
                this.state === fi && this.doTickIdle(),
                this.onTickEnd()
            }
            ,
            r.onTickEnd = function() {
                t.prototype.onTickEnd.call(this),
                this.checkBuffer(),
                this.checkFragmentChanged()
            }
            ,
            r.doTickIdle = function() {
                var t = this.hls
                  , e = this.levelLastLoaded
                  , r = this.levels
                  , i = this.media
                  , n = t.config
                  , a = t.nextLoadLevel;
                if (null !== e && (i || !this.startFragRequested && n.startFragPrefetch) && (!this.altAudio || !this.audioOnly) && null != r && r[a]) {
                    var s = r[a]
                      , o = this.getMainFwdBufferInfo();
                    if (null !== o) {
                        var l = this.getLevelDetails();
                        if (l && this._streamEnded(o, l)) {
                            var u = {};
                            return this.altAudio && (u.type = "video"),
                            this.hls.trigger(S.BUFFER_EOS, u),
                            void (this.state = Ti)
                        }
                        t.loadLevel !== a && -1 === t.manualLevel && this.log("Adapting to level " + a + " from level " + this.level),
                        this.level = t.nextLoadLevel = a;
                        var h = s.details;
                        if (!h || this.state === Ai || h.live && this.levelLastLoaded !== s)
                            return this.level = a,
                            void (this.state = Ai);
                        var d = o.len
                          , c = this.getMaxBufferLength(s.maxBitrate);
                        if (!(d >= c)) {
                            this.backtrackFragment && this.backtrackFragment.start > o.end && (this.backtrackFragment = null);
                            var f = this.backtrackFragment ? this.backtrackFragment.start : o.end
                              , g = this.getNextFragment(f, h);
                            if (this.couldBacktrack && !this.fragPrevious && g && "initSegment" !== g.sn && this.fragmentTracker.getState(g) !== Yr) {
                                var v, m = (null != (v = this.backtrackFragment) ? v : g).sn - h.startSN, p = h.fragments[m - 1];
                                p && g.cc === p.cc && (g = p,
                                this.fragmentTracker.removeFragment(p))
                            } else
                                this.backtrackFragment && o.len && (this.backtrackFragment = null);
                            if (g && this.isLoopLoading(g, f)) {
                                if (!g.gap) {
                                    var y = this.audioOnly && !this.altAudio ? O : N
                                      , E = (y === N ? this.videoBuffer : this.mediaBuffer) || this.media;
                                    E && this.afterBufferFlushed(E, y, Ie)
                                }
                                g = this.getNextFragmentLoopLoading(g, h, o, Ie, c)
                            }
                            g && (!g.initSegment || g.initSegment.data || this.bitrateTest || (g = g.initSegment),
                            this.loadFragment(g, s, f))
                        }
                    }
                }
            }
            ,
            r.loadFragment = function(e, r, i) {
                var n = this.fragmentTracker.getState(e);
                this.fragCurrent = e,
                n === Kr || n === Vr ? "initSegment" === e.sn ? this._loadInitSegment(e, r) : this.bitrateTest ? (this.log("Fragment " + e.sn + " of level " + e.level + " is being downloaded to test bitrate and will not be buffered"),
                this._loadBitrateTestFrag(e, r)) : (this.startFragRequested = !0,
                t.prototype.loadFragment.call(this, e, r, i)) : this.clearTrackerIfNeeded(e)
            }
            ,
            r.getBufferedFrag = function(t) {
                return this.fragmentTracker.getBufferedFrag(t, Ie)
            }
            ,
            r.followingBufferedFrag = function(t) {
                return t ? this.getBufferedFrag(t.end + .5) : null
            }
            ,
            r.immediateLevelSwitch = function() {
                this.abortCurrentFrag(),
                this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
            }
            ,
            r.nextLevelSwitch = function() {
                var t = this.levels
                  , e = this.media;
                if (null != e && e.readyState) {
                    var r, i = this.getAppendedFrag(e.currentTime);
                    i && i.start > 1 && this.flushMainBuffer(0, i.start - 1);
                    var n = this.getLevelDetails();
                    if (null != n && n.live) {
                        var a = this.getMainFwdBufferInfo();
                        if (!a || a.len < 2 * n.targetduration)
                            return
                    }
                    if (!e.paused && t) {
                        var s = t[this.hls.nextLoadLevel]
                          , o = this.fragLastKbps;
                        r = o && this.fragCurrent ? this.fragCurrent.duration * s.maxBitrate / (1e3 * o) + 1 : 0
                    } else
                        r = 0;
                    var l = this.getBufferedFrag(e.currentTime + r);
                    if (l) {
                        var u = this.followingBufferedFrag(l);
                        if (u) {
                            this.abortCurrentFrag();
                            var h = u.maxStartPTS ? u.maxStartPTS : u.start
                              , d = u.duration
                              , c = Math.max(l.end, h + Math.min(Math.max(d - this.config.maxFragLookUpTolerance, d * (this.couldBacktrack ? .5 : .125)), d * (this.couldBacktrack ? .75 : .25)));
                            this.flushMainBuffer(c, Number.POSITIVE_INFINITY)
                        }
                    }
                }
            }
            ,
            r.abortCurrentFrag = function() {
                var t = this.fragCurrent;
                switch (this.fragCurrent = null,
                this.backtrackFragment = null,
                t && (t.abortRequests(),
                this.fragmentTracker.removeFragment(t)),
                this.state) {
                case gi:
                case vi:
                case mi:
                case yi:
                case Ei:
                    this.state = fi
                }
                this.nextLoadPosition = this.getLoadPosition()
            }
            ,
            r.flushMainBuffer = function(e, r) {
                t.prototype.flushMainBuffer.call(this, e, r, this.altAudio ? "video" : null)
            }
            ,
            r.onMediaAttached = function(e, r) {
                t.prototype.onMediaAttached.call(this, e, r);
                var i = r.media;
                this.onvplaying = this.onMediaPlaying.bind(this),
                this.onvseeked = this.onMediaSeeked.bind(this),
                i.addEventListener("playing", this.onvplaying),
                i.addEventListener("seeked", this.onvseeked),
                this.gapController = new io(this.config,i,this.fragmentTracker,this.hls)
            }
            ,
            r.onMediaDetaching = function() {
                var e = this.media;
                e && this.onvplaying && this.onvseeked && (e.removeEventListener("playing", this.onvplaying),
                e.removeEventListener("seeked", this.onvseeked),
                this.onvplaying = this.onvseeked = null,
                this.videoBuffer = null),
                this.fragPlaying = null,
                this.gapController && (this.gapController.destroy(),
                this.gapController = null),
                t.prototype.onMediaDetaching.call(this)
            }
            ,
            r.onMediaPlaying = function() {
                this.tick()
            }
            ,
            r.onMediaSeeked = function() {
                var t = this.media
                  , e = t ? t.currentTime : null;
                y(e) && this.log("Media seeked to " + e.toFixed(3));
                var r = this.getMainFwdBufferInfo();
                null !== r && 0 !== r.len ? this.tick() : this.warn('Main forward buffer length on "seeked" event ' + (r ? r.len : "empty") + ")")
            }
            ,
            r.onManifestLoading = function() {
                this.log("Trigger BUFFER_RESET"),
                this.hls.trigger(S.BUFFER_RESET, void 0),
                this.fragmentTracker.removeAllFragments(),
                this.couldBacktrack = !1,
                this.startPosition = this.lastCurrentTime = this.fragLastKbps = 0,
                this.levels = this.fragPlaying = this.backtrackFragment = this.levelLastLoaded = null,
                this.altAudio = this.audioOnly = this.startFragRequested = !1
            }
            ,
            r.onManifestParsed = function(t, e) {
                var r, i, n = !1, a = !1;
                e.levels.forEach((function(t) {
                    var e = t.audioCodec;
                    e && (n = n || -1 !== e.indexOf("mp4a.40.2"),
                    a = a || -1 !== e.indexOf("mp4a.40.5"))
                }
                )),
                this.audioCodecSwitch = n && a && !("function" == typeof (null == (i = eo()) || null == (r = i.prototype) ? void 0 : r.changeType)),
                this.audioCodecSwitch && this.log("Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"),
                this.levels = e.levels,
                this.startFragRequested = !1
            }
            ,
            r.onLevelLoading = function(t, e) {
                var r = this.levels;
                if (r && this.state === fi) {
                    var i = r[e.level];
                    (!i.details || i.details.live && this.levelLastLoaded !== i || this.waitForCdnTuneIn(i.details)) && (this.state = Ai)
                }
            }
            ,
            r.onLevelLoaded = function(t, e) {
                var r, i = this.levels, n = e.level, a = e.details, s = a.totalduration;
                if (i) {
                    this.log("Level " + n + " loaded [" + a.startSN + "," + a.endSN + "]" + (a.lastPartSn ? "[part-" + a.lastPartSn + "-" + a.lastPartIndex + "]" : "") + ", cc [" + a.startCC + ", " + a.endCC + "] duration:" + s);
                    var o = i[n]
                      , l = this.fragCurrent;
                    !l || this.state !== vi && this.state !== mi || l.level !== e.level && l.loader && this.abortCurrentFrag();
                    var u = 0;
                    if (a.live || null != (r = o.details) && r.live) {
                        var h;
                        if (this.checkLiveUpdate(a),
                        a.deltaUpdateFailed)
                            return;
                        u = this.alignPlaylists(a, o.details, null == (h = this.levelLastLoaded) ? void 0 : h.details)
                    }
                    if (o.details = a,
                    this.levelLastLoaded = o,
                    this.hls.trigger(S.LEVEL_UPDATED, {
                        details: a,
                        level: n
                    }),
                    this.state === Ai) {
                        if (this.waitForCdnTuneIn(a))
                            return;
                        this.state = fi
                    }
                    this.startFragRequested ? a.live && this.synchronizeToLiveEdge(a) : this.setStartPosition(a, u),
                    this.tick()
                } else
                    this.warn("Levels were reset while loading level " + n)
            }
            ,
            r._handleFragmentLoadProgress = function(t) {
                var e, r = t.frag, i = t.part, n = t.payload, a = this.levels;
                if (a) {
                    var s = a[r.level]
                      , o = s.details;
                    if (!o)
                        return this.warn("Dropping fragment " + r.sn + " of level " + r.level + " after level details were reset"),
                        void this.fragmentTracker.removeFragment(r);
                    var l = s.videoCodec
                      , u = o.PTSKnown || !o.live
                      , h = null == (e = r.initSegment) ? void 0 : e.data
                      , d = this._getAudioCodec(s)
                      , c = this.transmuxer = this.transmuxer || new Bn(this.hls,Ie,this._handleTransmuxComplete.bind(this),this._handleTransmuxerFlush.bind(this))
                      , f = i ? i.index : -1
                      , g = -1 !== f
                      , v = new Qr(r.level,r.sn,r.stats.chunkCount,n.byteLength,f,g)
                      , m = this.initPTS[r.cc];
                    c.push(n, h, d, l, r, i, o.totalduration, u, v, m)
                } else
                    this.warn("Levels were reset while fragment load was in progress. Fragment " + r.sn + " of level " + r.level + " will not be buffered")
            }
            ,
            r.onAudioTrackSwitching = function(t, e) {
                var r = this.altAudio;
                if (!e.url) {
                    if (this.mediaBuffer !== this.media) {
                        this.log("Switching on main audio, use media.buffered to schedule main fragment loading"),
                        this.mediaBuffer = this.media;
                        var i = this.fragCurrent;
                        i && (this.log("Switching to main audio track, cancel main fragment load"),
                        i.abortRequests(),
                        this.fragmentTracker.removeFragment(i)),
                        this.resetTransmuxer(),
                        this.resetLoadingState()
                    } else
                        this.audioOnly && this.resetTransmuxer();
                    var n = this.hls;
                    r && (n.trigger(S.BUFFER_FLUSHING, {
                        startOffset: 0,
                        endOffset: Number.POSITIVE_INFINITY,
                        type: null
                    }),
                    this.fragmentTracker.removeAllFragments()),
                    n.trigger(S.AUDIO_TRACK_SWITCHED, e)
                }
            }
            ,
            r.onAudioTrackSwitched = function(t, e) {
                var r = e.id
                  , i = !!this.hls.audioTracks[r].url;
                if (i) {
                    var n = this.videoBuffer;
                    n && this.mediaBuffer !== n && (this.log("Switching on alternate audio, use video.buffered to schedule main fragment loading"),
                    this.mediaBuffer = n)
                }
                this.altAudio = i,
                this.tick()
            }
            ,
            r.onBufferCreated = function(t, e) {
                var r, i, n = e.tracks, a = !1;
                for (var s in n) {
                    var o = n[s];
                    if ("main" === o.id) {
                        if (i = s,
                        r = o,
                        "video" === s) {
                            var l = n[s];
                            l && (this.videoBuffer = l.buffer)
                        }
                    } else
                        a = !0
                }
                a && r ? (this.log("Alternate track found, use " + i + ".buffered to schedule main fragment loading"),
                this.mediaBuffer = r.buffer) : this.mediaBuffer = this.media
            }
            ,
            r.onFragBuffered = function(t, e) {
                var r = e.frag
                  , i = e.part;
                if (!r || r.type === Ie) {
                    if (this.fragContextChanged(r))
                        return this.warn("Fragment " + r.sn + (i ? " p: " + i.index : "") + " of level " + r.level + " finished buffering, but was aborted. state: " + this.state),
                        void (this.state === Ei && (this.state = fi));
                    var n = i ? i.stats : r.stats;
                    this.fragLastKbps = Math.round(8 * n.total / (n.buffering.end - n.loading.first)),
                    "initSegment" !== r.sn && (this.fragPrevious = r),
                    this.fragBufferedComplete(r, i)
                }
            }
            ,
            r.onError = function(t, e) {
                var r;
                if (e.fatal)
                    this.state = Si;
                else
                    switch (e.details) {
                    case A.FRAG_GAP:
                    case A.FRAG_PARSING_ERROR:
                    case A.FRAG_DECRYPT_ERROR:
                    case A.FRAG_LOAD_ERROR:
                    case A.FRAG_LOAD_TIMEOUT:
                    case A.KEY_LOAD_ERROR:
                    case A.KEY_LOAD_TIMEOUT:
                        this.onFragmentOrKeyLoadError(Ie, e);
                        break;
                    case A.LEVEL_LOAD_ERROR:
                    case A.LEVEL_LOAD_TIMEOUT:
                    case A.LEVEL_PARSING_ERROR:
                        e.levelRetry || this.state !== Ai || (null == (r = e.context) ? void 0 : r.type) !== ke || (this.state = fi);
                        break;
                    case A.BUFFER_APPEND_ERROR:
                    case A.BUFFER_FULL_ERROR:
                        if (!e.parent || "main" !== e.parent)
                            return;
                        if (e.details === A.BUFFER_APPEND_ERROR)
                            return void this.resetLoadingState();
                        this.reduceLengthAndFlushBuffer(e) && this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
                        break;
                    case A.INTERNAL_EXCEPTION:
                        this.recoverWorkerError(e)
                    }
            }
            ,
            r.checkBuffer = function() {
                var t = this.media
                  , e = this.gapController;
                if (t && e && t.readyState) {
                    if (this.loadedmetadata || !zr.getBuffered(t).length) {
                        var r = this.state !== fi ? this.fragCurrent : null;
                        e.poll(this.lastCurrentTime, r)
                    }
                    this.lastCurrentTime = t.currentTime
                }
            }
            ,
            r.onFragLoadEmergencyAborted = function() {
                this.state = fi,
                this.loadedmetadata || (this.startFragRequested = !1,
                this.nextLoadPosition = this.startPosition),
                this.tickImmediate()
            }
            ,
            r.onBufferFlushed = function(t, e) {
                var r = e.type;
                if (r !== O || this.audioOnly && !this.altAudio) {
                    var i = (r === N ? this.videoBuffer : this.mediaBuffer) || this.media;
                    this.afterBufferFlushed(i, r, Ie),
                    this.tick()
                }
            }
            ,
            r.onLevelsUpdated = function(t, e) {
                this.level > -1 && this.fragCurrent && (this.level = this.fragCurrent.level),
                this.levels = e.levels
            }
            ,
            r.swapAudioCodec = function() {
                this.audioCodecSwap = !this.audioCodecSwap
            }
            ,
            r.seekToStartPos = function() {
                var t = this.media;
                if (t) {
                    var e = t.currentTime
                      , r = this.startPosition;
                    if (r >= 0 && e < r) {
                        if (t.seeking)
                            return void this.log("could not seek to " + r + ", already seeking at " + e);
                        var i = zr.getBuffered(t)
                          , n = (i.length ? i.start(0) : 0) - r;
                        n > 0 && (n < this.config.maxBufferHole || n < this.config.maxFragLookUpTolerance) && (this.log("adjusting start position by " + n + " to match buffer start"),
                        r += n,
                        this.startPosition = r),
                        this.log("seek to target start position " + r + " from current time " + e),
                        t.currentTime = r
                    }
                }
            }
            ,
            r._getAudioCodec = function(t) {
                var e = this.config.defaultAudioCodec || t.audioCodec;
                return this.audioCodecSwap && e && (this.log("Swapping audio codec"),
                e = -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"),
                e
            }
            ,
            r._loadBitrateTestFrag = function(t, e) {
                var r = this;
                t.bitrateTest = !0,
                this._doFragLoad(t, e).then((function(i) {
                    var n = r.hls;
                    if (i && !r.fragContextChanged(t)) {
                        e.fragmentError = 0,
                        r.state = fi,
                        r.startFragRequested = !1,
                        r.bitrateTest = !1;
                        var a = t.stats;
                        a.parsing.start = a.parsing.end = a.buffering.start = a.buffering.end = self.performance.now(),
                        n.trigger(S.FRAG_LOADED, i),
                        t.bitrateTest = !1
                    }
                }
                ))
            }
            ,
            r._handleTransmuxComplete = function(t) {
                var e, r = "main", i = this.hls, n = t.remuxResult, a = t.chunkMeta, s = this.getCurrentContext(a);
                if (s) {
                    var o = s.frag
                      , l = s.part
                      , u = s.level
                      , h = n.video
                      , d = n.text
                      , c = n.id3
                      , f = n.initSegment
                      , g = u.details
                      , v = this.altAudio ? void 0 : n.audio;
                    if (this.fragContextChanged(o))
                        this.fragmentTracker.removeFragment(o);
                    else {
                        if (this.state = yi,
                        f) {
                            if (null != f && f.tracks) {
                                var m = o.initSegment || o;
                                this._bufferInitSegment(u, f.tracks, m, a),
                                i.trigger(S.FRAG_PARSING_INIT_SEGMENT, {
                                    frag: m,
                                    id: r,
                                    tracks: f.tracks
                                })
                            }
                            var p = f.initPTS
                              , E = f.timescale;
                            y(p) && (this.initPTS[o.cc] = {
                                baseTime: p,
                                timescale: E
                            },
                            i.trigger(S.INIT_PTS_FOUND, {
                                frag: o,
                                id: r,
                                initPTS: p,
                                timescale: E
                            }))
                        }
                        if (h && g && "initSegment" !== o.sn) {
                            var T = g.fragments[o.sn - 1 - g.startSN]
                              , L = o.sn === g.startSN
                              , A = !T || o.cc > T.cc;
                            if (!1 !== n.independent) {
                                var R = h.startPTS
                                  , k = h.endPTS
                                  , b = h.startDTS
                                  , D = h.endDTS;
                                if (l)
                                    l.elementaryStreams[h.type] = {
                                        startPTS: R,
                                        endPTS: k,
                                        startDTS: b,
                                        endDTS: D
                                    };
                                else if (h.firstKeyFrame && h.independent && 1 === a.id && !A && (this.couldBacktrack = !0),
                                h.dropped && h.independent) {
                                    var I = this.getMainFwdBufferInfo()
                                      , w = (I ? I.end : this.getLoadPosition()) + this.config.maxBufferHole
                                      , C = h.firstKeyFramePTS ? h.firstKeyFramePTS : R;
                                    if (!L && w < C - this.config.maxBufferHole && !A)
                                        return void this.backtrack(o);
                                    A && (o.gap = !0),
                                    o.setElementaryStreamInfo(h.type, o.start, k, o.start, D, !0)
                                } else
                                    L && R > 2 && (o.gap = !0);
                                o.setElementaryStreamInfo(h.type, R, k, b, D),
                                this.backtrackFragment && (this.backtrackFragment = o),
                                this.bufferFragmentData(h, o, l, a, L || A)
                            } else {
                                if (!L && !A)
                                    return void this.backtrack(o);
                                o.gap = !0
                            }
                        }
                        if (v) {
                            var _ = v.startPTS
                              , x = v.endPTS
                              , P = v.startDTS
                              , F = v.endDTS;
                            l && (l.elementaryStreams[O] = {
                                startPTS: _,
                                endPTS: x,
                                startDTS: P,
                                endDTS: F
                            }),
                            o.setElementaryStreamInfo(O, _, x, P, F),
                            this.bufferFragmentData(v, o, l, a)
                        }
                        if (g && null != c && null != (e = c.samples) && e.length) {
                            var M = {
                                id: r,
                                frag: o,
                                details: g,
                                samples: c.samples
                            };
                            i.trigger(S.FRAG_PARSING_METADATA, M)
                        }
                        if (g && d) {
                            var N = {
                                id: r,
                                frag: o,
                                details: g,
                                samples: d.samples
                            };
                            i.trigger(S.FRAG_PARSING_USERDATA, N)
                        }
                    }
                } else
                    this.resetWhenMissingContext(a)
            }
            ,
            r._bufferInitSegment = function(t, e, r, i) {
                var n = this;
                if (this.state === yi) {
                    this.audioOnly = !!e.audio && !e.video,
                    this.altAudio && !this.audioOnly && delete e.audio;
                    var a = e.audio
                      , s = e.video
                      , o = e.audiovideo;
                    if (a) {
                        var l = t.audioCodec
                          , u = navigator.userAgent.toLowerCase();
                        this.audioCodecSwitch && (l && (l = -1 !== l.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"),
                        1 !== a.metadata.channelCount && -1 === u.indexOf("firefox") && (l = "mp4a.40.5")),
                        l && -1 !== l.indexOf("mp4a.40.5") && -1 !== u.indexOf("android") && "audio/mpeg" !== a.container && (l = "mp4a.40.2",
                        this.log("Android: force audio codec to " + l)),
                        t.audioCodec && t.audioCodec !== l && this.log('Swapping manifest audio codec "' + t.audioCodec + '" for "' + l + '"'),
                        a.levelCodec = l,
                        a.id = "main",
                        this.log("Init audio buffer, container:" + a.container + ", codecs[selected/level/parsed]=[" + (l || "") + "/" + (t.audioCodec || "") + "/" + a.codec + "]")
                    }
                    s && (s.levelCodec = t.videoCodec,
                    s.id = "main",
                    this.log("Init video buffer, container:" + s.container + ", codecs[level/parsed]=[" + (t.videoCodec || "") + "/" + s.codec + "]")),
                    o && this.log("Init audiovideo buffer, container:" + o.container + ", codecs[level/parsed]=[" + t.codecs + "/" + o.codec + "]"),
                    this.hls.trigger(S.BUFFER_CODECS, e),
                    Object.keys(e).forEach((function(t) {
                        var a = e[t].initSegment;
                        null != a && a.byteLength && n.hls.trigger(S.BUFFER_APPENDING, {
                            type: t,
                            data: a,
                            frag: r,
                            part: null,
                            chunkMeta: i,
                            parent: r.type
                        })
                    }
                    )),
                    this.tickImmediate()
                }
            }
            ,
            r.getMainFwdBufferInfo = function() {
                return this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : this.media, Ie)
            }
            ,
            r.backtrack = function(t) {
                this.couldBacktrack = !0,
                this.backtrackFragment = t,
                this.resetTransmuxer(),
                this.flushBufferGap(t),
                this.fragmentTracker.removeFragment(t),
                this.fragPrevious = null,
                this.nextLoadPosition = t.start,
                this.state = fi
            }
            ,
            r.checkFragmentChanged = function() {
                var t = this.media
                  , e = null;
                if (t && t.readyState > 1 && !1 === t.seeking) {
                    var r = t.currentTime;
                    if (zr.isBuffered(t, r) ? e = this.getAppendedFrag(r) : zr.isBuffered(t, r + .1) && (e = this.getAppendedFrag(r + .1)),
                    e) {
                        this.backtrackFragment = null;
                        var i = this.fragPlaying
                          , n = e.level;
                        i && e.sn === i.sn && i.level === n || (this.fragPlaying = e,
                        this.hls.trigger(S.FRAG_CHANGED, {
                            frag: e
                        }),
                        i && i.level === n || this.hls.trigger(S.LEVEL_SWITCHED, {
                            level: n
                        }))
                    }
                }
            }
            ,
            s(e, [{
                key: "nextLevel",
                get: function() {
                    var t = this.nextBufferedFrag;
                    return t ? t.level : -1
                }
            }, {
                key: "currentFrag",
                get: function() {
                    var t = this.media;
                    return t ? this.fragPlaying || this.getAppendedFrag(t.currentTime) : null
                }
            }, {
                key: "currentProgramDateTime",
                get: function() {
                    var t = this.media;
                    if (t) {
                        var e = t.currentTime
                          , r = this.currentFrag;
                        if (r && y(e) && y(r.programDateTime)) {
                            var i = r.programDateTime + 1e3 * (e - r.start);
                            return new Date(i)
                        }
                    }
                    return null
                }
            }, {
                key: "currentLevel",
                get: function() {
                    var t = this.currentFrag;
                    return t ? t.level : -1
                }
            }, {
                key: "nextBufferedFrag",
                get: function() {
                    var t = this.currentFrag;
                    return t ? this.followingBufferedFrag(t) : null
                }
            }, {
                key: "forceStartLoad",
                get: function() {
                    return this._forceStartLoad
                }
            }]),
            e
        }(Ri)
          , ao = function() {
            function t(e) {
                void 0 === e && (e = {}),
                this.config = void 0,
                this.userConfig = void 0,
                this.coreComponents = void 0,
                this.networkControllers = void 0,
                this.started = !1,
                this._emitter = new Mn,
                this._autoLevelCapping = -1,
                this._maxHdcpLevel = null,
                this.abrController = void 0,
                this.bufferController = void 0,
                this.capLevelController = void 0,
                this.latencyController = void 0,
                this.levelController = void 0,
                this.streamController = void 0,
                this.audioTrackController = void 0,
                this.subtitleTrackController = void 0,
                this.emeController = void 0,
                this.cmcdController = void 0,
                this._media = null,
                this.url = null,
                this.triggeringException = void 0,
                I(e.debug || !1, "Hls instance");
                var r = this.config = function(t, e) {
                    if ((e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) && (e.liveSyncDuration || e.liveMaxLatencyDuration))
                        throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                    if (void 0 !== e.liveMaxLatencyDurationCount && (void 0 === e.liveSyncDurationCount || e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount))
                        throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"');
                    if (void 0 !== e.liveMaxLatencyDuration && (void 0 === e.liveSyncDuration || e.liveMaxLatencyDuration <= e.liveSyncDuration))
                        throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"');
                    var r = Qs(t)
                      , n = ["TimeOut", "MaxRetry", "RetryDelay", "MaxRetryTimeout"];
                    return ["manifest", "level", "frag"].forEach((function(t) {
                        var i = ("level" === t ? "playlist" : t) + "LoadPolicy"
                          , a = void 0 === e[i]
                          , s = [];
                        n.forEach((function(n) {
                            var o = t + "Loading" + n
                              , l = e[o];
                            if (void 0 !== l && a) {
                                s.push(o);
                                var u = r[i].default;
                                switch (e[i] = {
                                    default: u
                                },
                                n) {
                                case "TimeOut":
                                    u.maxLoadTimeMs = l,
                                    u.maxTimeToFirstByteMs = l;
                                    break;
                                case "MaxRetry":
                                    u.errorRetry.maxNumRetry = l,
                                    u.timeoutRetry.maxNumRetry = l;
                                    break;
                                case "RetryDelay":
                                    u.errorRetry.retryDelayMs = l,
                                    u.timeoutRetry.retryDelayMs = l;
                                    break;
                                case "MaxRetryTimeout":
                                    u.errorRetry.maxRetryDelayMs = l,
                                    u.timeoutRetry.maxRetryDelayMs = l
                                }
                            }
                        }
                        )),
                        s.length && w.warn('hls.js config: "' + s.join('", "') + '" setting(s) are deprecated, use "' + i + '": ' + JSON.stringify(e[i]))
                    }
                    )),
                    i(i({}, r), e)
                }(t.DefaultConfig, e);
                this.userConfig = e,
                r.progressive && Js(r);
                var n = r.abrController
                  , a = r.bufferController
                  , s = r.capLevelController
                  , o = r.errorController
                  , l = r.fpsController
                  , u = new o(this)
                  , h = this.abrController = new n(this)
                  , d = this.bufferController = new a(this)
                  , c = this.capLevelController = new s(this)
                  , f = new l(this)
                  , g = new Pe(this)
                  , v = new je(this)
                  , m = r.contentSteeringController
                  , p = m ? new m(this) : null
                  , y = this.levelController = new $s(this,p)
                  , E = new Wr(this)
                  , T = new to(this.config)
                  , L = this.streamController = new no(this,E,T);
                c.setStreamController(L),
                f.setStreamController(L);
                var A = [g, y, L];
                p && A.splice(1, 0, p),
                this.networkControllers = A;
                var R = [h, d, c, f, v, E];
                this.audioTrackController = this.createController(r.audioTrackController, A);
                var k = r.audioStreamController;
                k && A.push(new k(this,E,T)),
                this.subtitleTrackController = this.createController(r.subtitleTrackController, A);
                var b = r.subtitleStreamController;
                b && A.push(new b(this,E,T)),
                this.createController(r.timelineController, R),
                T.emeController = this.emeController = this.createController(r.emeController, R),
                this.cmcdController = this.createController(r.cmcdController, R),
                this.latencyController = this.createController(qe, R),
                this.coreComponents = R,
                A.push(u);
                var D = u.onErrorOut;
                "function" == typeof D && this.on(S.ERROR, D, u)
            }
            t.isMSESupported = function() {
                return ro()
            }
            ,
            t.isSupported = function() {
                return function() {
                    if (!ro())
                        return !1;
                    var t = te();
                    return "function" == typeof (null == t ? void 0 : t.isTypeSupported) && (["avc1.42E01E,mp4a.40.2", "av01.0.01M.08", "vp09.00.50.08"].some((function(e) {
                        return t.isTypeSupported(ne(e, "video"))
                    }
                    )) || ["mp4a.40.2", "fLaC"].some((function(e) {
                        return t.isTypeSupported(ne(e, "audio"))
                    }
                    )))
                }()
            }
            ,
            t.getMediaSource = function() {
                return te()
            }
            ;
            var e = t.prototype;
            return e.createController = function(t, e) {
                if (t) {
                    var r = new t(this);
                    return e && e.push(r),
                    r
                }
                return null
            }
            ,
            e.on = function(t, e, r) {
                void 0 === r && (r = this),
                this._emitter.on(t, e, r)
            }
            ,
            e.once = function(t, e, r) {
                void 0 === r && (r = this),
                this._emitter.once(t, e, r)
            }
            ,
            e.removeAllListeners = function(t) {
                this._emitter.removeAllListeners(t)
            }
            ,
            e.off = function(t, e, r, i) {
                void 0 === r && (r = this),
                this._emitter.off(t, e, r, i)
            }
            ,
            e.listeners = function(t) {
                return this._emitter.listeners(t)
            }
            ,
            e.emit = function(t, e, r) {
                return this._emitter.emit(t, e, r)
            }
            ,
            e.trigger = function(t, e) {
                if (this.config.debug)
                    return this.emit(t, t, e);
                try {
                    return this.emit(t, t, e)
                } catch (e) {
                    if (w.error("An internal error happened while handling event " + t + '. Error message: "' + e.message + '". Here is a stacktrace:', e),
                    !this.triggeringException) {
                        this.triggeringException = !0;
                        var r = t === S.ERROR;
                        this.trigger(S.ERROR, {
                            type: L.OTHER_ERROR,
                            details: A.INTERNAL_EXCEPTION,
                            fatal: r,
                            event: t,
                            error: e
                        }),
                        this.triggeringException = !1
                    }
                }
                return !1
            }
            ,
            e.listenerCount = function(t) {
                return this._emitter.listenerCount(t)
            }
            ,
            e.destroy = function() {
                w.log("destroy"),
                this.trigger(S.DESTROYING, void 0),
                this.detachMedia(),
                this.removeAllListeners(),
                this._autoLevelCapping = -1,
                this.url = null,
                this.networkControllers.forEach((function(t) {
                    return t.destroy()
                }
                )),
                this.networkControllers.length = 0,
                this.coreComponents.forEach((function(t) {
                    return t.destroy()
                }
                )),
                this.coreComponents.length = 0;
                var t = this.config;
                t.xhrSetup = t.fetchSetup = void 0,
                this.userConfig = null
            }
            ,
            e.attachMedia = function(t) {
                w.log("attachMedia"),
                this._media = t,
                this.trigger(S.MEDIA_ATTACHING, {
                    media: t
                })
            }
            ,
            e.detachMedia = function() {
                w.log("detachMedia"),
                this.trigger(S.MEDIA_DETACHING, void 0),
                this._media = null
            }
            ,
            e.loadSource = function(t) {
                this.stopLoad();
                var e = this.media
                  , r = this.url
                  , i = this.url = p.buildAbsoluteURL(self.location.href, t, {
                    alwaysNormalize: !0
                });
                this._autoLevelCapping = -1,
                this._maxHdcpLevel = null,
                w.log("loadSource:" + i),
                e && r && (r !== i || this.bufferController.hasSourceTypes()) && (this.detachMedia(),
                this.attachMedia(e)),
                this.trigger(S.MANIFEST_LOADING, {
                    url: t
                })
            }
            ,
            e.startLoad = function(t) {
                void 0 === t && (t = -1),
                w.log("startLoad(" + t + ")"),
                this.started = !0,
                this.networkControllers.forEach((function(e) {
                    e.startLoad(t)
                }
                ))
            }
            ,
            e.stopLoad = function() {
                w.log("stopLoad"),
                this.started = !1,
                this.networkControllers.forEach((function(t) {
                    t.stopLoad()
                }
                ))
            }
            ,
            e.resumeBuffering = function() {
                this.started && this.networkControllers.forEach((function(t) {
                    "fragmentLoader"in t && t.startLoad(-1)
                }
                ))
            }
            ,
            e.pauseBuffering = function() {
                this.networkControllers.forEach((function(t) {
                    "fragmentLoader"in t && t.stopLoad()
                }
                ))
            }
            ,
            e.swapAudioCodec = function() {
                w.log("swapAudioCodec"),
                this.streamController.swapAudioCodec()
            }
            ,
            e.recoverMediaError = function() {
                w.log("recoverMediaError");
                var t = this._media;
                this.detachMedia(),
                t && this.attachMedia(t)
            }
            ,
            e.removeLevel = function(t) {
                this.levelController.removeLevel(t)
            }
            ,
            e.setAudioOption = function(t) {
                var e;
                return null == (e = this.audioTrackController) ? void 0 : e.setAudioOption(t)
            }
            ,
            e.setSubtitleOption = function(t) {
                var e;
                return null == (e = this.subtitleTrackController) || e.setSubtitleOption(t),
                null
            }
            ,
            s(t, [{
                key: "levels",
                get: function() {
                    var t = this.levelController.levels;
                    return t || []
                }
            }, {
                key: "currentLevel",
                get: function() {
                    return this.streamController.currentLevel
                },
                set: function(t) {
                    w.log("set currentLevel:" + t),
                    this.levelController.manualLevel = t,
                    this.streamController.immediateLevelSwitch()
                }
            }, {
                key: "nextLevel",
                get: function() {
                    return this.streamController.nextLevel
                },
                set: function(t) {
                    w.log("set nextLevel:" + t),
                    this.levelController.manualLevel = t,
                    this.streamController.nextLevelSwitch()
                }
            }, {
                key: "loadLevel",
                get: function() {
                    return this.levelController.level
                },
                set: function(t) {
                    w.log("set loadLevel:" + t),
                    this.levelController.manualLevel = t
                }
            }, {
                key: "nextLoadLevel",
                get: function() {
                    return this.levelController.nextLoadLevel
                },
                set: function(t) {
                    this.levelController.nextLoadLevel = t
                }
            }, {
                key: "firstLevel",
                get: function() {
                    return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                },
                set: function(t) {
                    w.log("set firstLevel:" + t),
                    this.levelController.firstLevel = t
                }
            }, {
                key: "startLevel",
                get: function() {
                    var t = this.levelController.startLevel;
                    return -1 === t && this.abrController.forcedAutoLevel > -1 ? this.abrController.forcedAutoLevel : t
                },
                set: function(t) {
                    w.log("set startLevel:" + t),
                    -1 !== t && (t = Math.max(t, this.minAutoLevel)),
                    this.levelController.startLevel = t
                }
            }, {
                key: "capLevelToPlayerSize",
                get: function() {
                    return this.config.capLevelToPlayerSize
                },
                set: function(t) {
                    var e = !!t;
                    e !== this.config.capLevelToPlayerSize && (e ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(),
                    this.autoLevelCapping = -1,
                    this.streamController.nextLevelSwitch()),
                    this.config.capLevelToPlayerSize = e)
                }
            }, {
                key: "autoLevelCapping",
                get: function() {
                    return this._autoLevelCapping
                },
                set: function(t) {
                    this._autoLevelCapping !== t && (w.log("set autoLevelCapping:" + t),
                    this._autoLevelCapping = t,
                    this.levelController.checkMaxAutoUpdated())
                }
            }, {
                key: "bandwidthEstimate",
                get: function() {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimate() : NaN
                },
                set: function(t) {
                    this.abrController.resetEstimator(t)
                }
            }, {
                key: "ttfbEstimate",
                get: function() {
                    var t = this.abrController.bwEstimator;
                    return t ? t.getEstimateTTFB() : NaN
                }
            }, {
                key: "maxHdcpLevel",
                get: function() {
                    return this._maxHdcpLevel
                },
                set: function(t) {
                    (function(t) {
                        return Xe.indexOf(t) > -1
                    }
                    )(t) && this._maxHdcpLevel !== t && (this._maxHdcpLevel = t,
                    this.levelController.checkMaxAutoUpdated())
                }
            }, {
                key: "autoLevelEnabled",
                get: function() {
                    return -1 === this.levelController.manualLevel
                }
            }, {
                key: "manualLevel",
                get: function() {
                    return this.levelController.manualLevel
                }
            }, {
                key: "minAutoLevel",
                get: function() {
                    var t = this.levels
                      , e = this.config.minAutoBitrate;
                    if (!t)
                        return 0;
                    for (var r = t.length, i = 0; i < r; i++)
                        if (t[i].maxBitrate >= e)
                            return i;
                    return 0
                }
            }, {
                key: "maxAutoLevel",
                get: function() {
                    var t, e = this.levels, r = this.autoLevelCapping, i = this.maxHdcpLevel;
                    if (t = -1 === r && null != e && e.length ? e.length - 1 : r,
                    i)
                        for (var n = t; n--; ) {
                            var a = e[n].attrs["HDCP-LEVEL"];
                            if (a && a <= i)
                                return n
                        }
                    return t
                }
            }, {
                key: "firstAutoLevel",
                get: function() {
                    return this.abrController.firstAutoLevel
                }
            }, {
                key: "nextAutoLevel",
                get: function() {
                    return this.abrController.nextAutoLevel
                },
                set: function(t) {
                    this.abrController.nextAutoLevel = t
                }
            }, {
                key: "playingDate",
                get: function() {
                    return this.streamController.currentProgramDateTime
                }
            }, {
                key: "mainForwardBufferInfo",
                get: function() {
                    return this.streamController.getMainFwdBufferInfo()
                }
            }, {
                key: "allAudioTracks",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.allAudioTracks : []
                }
            }, {
                key: "audioTracks",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.audioTracks : []
                }
            }, {
                key: "audioTrack",
                get: function() {
                    var t = this.audioTrackController;
                    return t ? t.audioTrack : -1
                },
                set: function(t) {
                    var e = this.audioTrackController;
                    e && (e.audioTrack = t)
                }
            }, {
                key: "allSubtitleTracks",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.allSubtitleTracks : []
                }
            }, {
                key: "subtitleTracks",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTracks : []
                }
            }, {
                key: "subtitleTrack",
                get: function() {
                    var t = this.subtitleTrackController;
                    return t ? t.subtitleTrack : -1
                },
                set: function(t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleTrack = t)
                }
            }, {
                key: "media",
                get: function() {
                    return this._media
                }
            }, {
                key: "subtitleDisplay",
                get: function() {
                    var t = this.subtitleTrackController;
                    return !!t && t.subtitleDisplay
                },
                set: function(t) {
                    var e = this.subtitleTrackController;
                    e && (e.subtitleDisplay = t)
                }
            }, {
                key: "lowLatencyMode",
                get: function() {
                    return this.config.lowLatencyMode
                },
                set: function(t) {
                    this.config.lowLatencyMode = t
                }
            }, {
                key: "liveSyncPosition",
                get: function() {
                    return this.latencyController.liveSyncPosition
                }
            }, {
                key: "latency",
                get: function() {
                    return this.latencyController.latency
                }
            }, {
                key: "maxLatency",
                get: function() {
                    return this.latencyController.maxLatency
                }
            }, {
                key: "targetLatency",
                get: function() {
                    return this.latencyController.targetLatency
                }
            }, {
                key: "drift",
                get: function() {
                    return this.latencyController.drift
                }
            }, {
                key: "forceStartLoad",
                get: function() {
                    return this.streamController.forceStartLoad
                }
            }], [{
                key: "version",
                get: function() {
                    return "1.5.3"
                }
            }, {
                key: "Events",
                get: function() {
                    return S
                }
            }, {
                key: "ErrorTypes",
                get: function() {
                    return L
                }
            }, {
                key: "ErrorDetails",
                get: function() {
                    return A
                }
            }, {
                key: "DefaultConfig",
                get: function() {
                    return t.defaultConfig ? t.defaultConfig : zs
                },
                set: function(e) {
                    t.defaultConfig = e
                }
            }]),
            t
        }();
        return ao.defaultConfig = void 0,
        ao
    }
    ,
    "object" == typeof exports && "undefined" != typeof module ? module.exports = i() : "function" == typeof define && define.amd ? define(i) : (r = "undefined" != typeof globalThis ? globalThis : r || self).Hls = i()
}(!1);
